class_derivations:
  Address:
    populated_from: Address
    slot_derivations:
      address_of:
        expr: '''foo'''
        inverse_of:
          class_name: Agent
          slot_name: current_address
      city: null
      street: null
  Agent:
    is_a: Entity
    populated_from: Person
    slot_derivations:
      age:
        expr: str({age_in_years}) + ' years'
      current_address: null
      death_date:
        expr: "death_dates = [x.important_event_date for x in src.has_important_life_events\
          \ if str(x.event_name) == \"DEATH\"]\nif len(death_dates):\n  target = death_dates[0]\n"
      driving_since:
        expr: "d_test = [x.important_event_date for x in src.has_important_life_events\
          \ if str(x.event_name) == \"PASSED_DRIVING_TEST\"]\nif len(d_test):\n  \
          \  target = d_test[0]\n"
      first_known_event:
        expr: "if src.has_important_life_events:\n  target = src.has_important_life_events[0].important_event_date\n"
      gender:
        expr: None
      has_familial_relationships:
        populated_from: has_familial_relationships
      id: null
      label:
        populated_from: name
      primary_email:
        expr: null
      secondary_email:
        expr: 'NULL'
      work_value:
        populated_from: work_type
        value_mappings:
          '1': Home
          '2': Office
  Container:
    populated_from: Container
    slot_derivations:
      agents:
        populated_from: persons
  DenormMapping:
    populated_from: Mapping
    slot_derivations:
      creator: null
      id: null
      license: null
      object_id:
        expr: object.id
      object_name:
        expr: object.name
      predicate_id:
        populated_from: predicate
      predicate_label:
        expr: lookup(predicate)
      subject_id:
        expr: subject.id
      subject_name:
        expr: subject.name
  Entity: null
  FamilialRelationship:
    populated_from: FamilialRelationship
    slot_derivations:
      related_to: null
      type: null
  Job:
    slot_derivations:
      current:
        expr: 'True'
      type: null
  SequenceFeature:
    slot_derivations:
      type:
        hide: true
        populated_from: feature_type
        type_designator: true
enum_derivations:
  MyFamilialRelationshipType:
    mirror_source: true
    permissible_value_derivations:
      CHILD_OF:
        populated_from: CHILD_OF
      SIBLING_OF:
        populated_from: SIBLING_OF
    populated_from: FamilialRelationshipType
id: my-mappings
prefixes:
  foo: foo
source_schema: s1
target_schema: s2
title: my mappings
