{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"LinkML Data Transformer Model","text":"<p>Datamodel for LinkML schema transformations.</p> <p>A transformer generates instances of a target data model from instances of a source data model. This transformation process is guided by a TransformationSpecification.</p> <p>The specification is independent of any one method for transforming data. It allows different approaches, including:</p> <ul> <li>direct implementation, transforming python or json objects</li> <li>translation of the specification into SQL commands, to operate on relations</li> <li>translation of the specification into SPARQL CONSTRUCTs, to operate on triples</li> <li>translation into another specification language, such as R2RML</li> </ul> <p>URI: https://w3id.org/linkml/transformer</p> <p>Name: transformer</p>"},{"location":"#classes","title":"Classes","text":"Class Description AliasedClass alias-class key value pairs for classes Any None CopyDirective Instructs a Schema Mapper in how to map to a target schema. Not used for data transformation. Inverse Used for back references in mapping to relational model KeyVal None SpecificationComponent None ElementDerivation An abstract grouping for classes that provide a specification of how to  derive a target element from a source element. ClassDerivation A specification of how to derive a target class from a source class. EnumDerivation A specification of how to derive the value of a target enum from a source enum PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation None SlotDerivation A specification of how to derive the value of a target slot from a source slot TransformationSpecification A collection of mappings between source and target classes StringificationConfiguration None UnitConversionConfiguration None"},{"location":"#slots","title":"Slots","text":"Slot Description add alias name of the class to be aliased cast_collection_as class_derivations Instructions on how to derive a set of classes in the target schema from clas... class_name class_named local alias for the class comments A list of comments about this component copy_all copy_directives delimiter derived_from Source slots that are used to derive this slot description description of the specification component dictionary_key element_name enum_derivations Instructions on how to derive a set of enums in the target schema exclude exclude_all expr An expression to be evaluated on the source object to derive the target slot expression_to_expression_mappings A mapping table in which the keys and values are expressions expression_to_value_mappings A mapping table in which the keys are expressions hide True if this is suppressed id Unique identifier for this transformation specification implements A reference to a specification that this component implements include inverse_of Used to specify a class-slot tuple that is the inverse of the derived/target ... is_a joins Additional classes to be joined to derive instances of the target class key mirror_source mixins name Name of the element in the target schema overrides overrides source schema slots permissible_value_derivations Instructions on how to derive a set of PVs in the target schema populated_from Name of the class in the source schema prefixes maps prefixes to URL expansions range reversed slot_derivations Instructions on how to derive a set of top level slots in the target schema slot_name source_magnitude_slot source_schema name of the schema that describes the source (input) objects source_unit source_unit_scheme source_unit_slot sources stringification syntax target_magnitude_slot target_schema name of the schema that describes the target (output) objects target_unit target_unit_scheme target_unit_slot title human readable title for this transformation specification type_designator unit_conversion value value_mappings A mapping table that is applied directly to mappings, in order of precedence"},{"location":"#enumerations","title":"Enumerations","text":"Enumeration Description CollectionType SerializationSyntaxType"},{"location":"#types","title":"Types","text":"Type Description Boolean A binary (true or false) value ClassReference Curie a compact URI Date a date (year, month and day) in an idealized calendar DateOrDatetime Either a date or a datetime Datetime The combination of a date and time Decimal A real number with arbitrary precision that conforms to the xsd:decimal speci... Double A real number that conforms to the xsd:double specification EnumReference Float A real number that conforms to the xsd:float specification Integer An integer Jsonpath A string encoding a JSON Path Jsonpointer A string encoding a JSON Pointer Ncname Prefix part of CURIE Nodeidentifier A URI, CURIE or BNODE that represents a node in a model Objectidentifier A URI or CURIE that represents an object in the model SlotReference Sparqlpath A string encoding a SPARQL Property Path String A character string Time A time object represents a (local) time of day, independent of any particular... Uri a complete URI Uriorcurie a URI or a CURIE"},{"location":"#subsets","title":"Subsets","text":"Subset Description"},{"location":"AliasedClass/","title":"Class: AliasedClass","text":"<p>alias-class key value pairs for classes</p> <p>URI: linkmltr:AliasedClass</p> <pre><code> classDiagram\n    class AliasedClass\n      AliasedClass : alias\n\n          AliasedClass --|&gt; None : alias\n\n      AliasedClass : class_named\n\n          AliasedClass --|&gt; None : class_named\n\n\n</code></pre>"},{"location":"AliasedClass/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance alias 1..1  String name of the class to be aliased direct class_named 0..1  String local alias for the class direct"},{"location":"AliasedClass/#usages","title":"Usages","text":"used by used in type used ClassDerivation joins range AliasedClass"},{"location":"AliasedClass/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"AliasedClass/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"AliasedClass/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:AliasedClass native linkmltr:AliasedClass"},{"location":"AliasedClass/#linkml-source","title":"LinkML Source","text":""},{"location":"AliasedClass/#direct","title":"Direct","text":"<pre><code>name: AliasedClass\ndescription: alias-class key value pairs for classes\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  alias:\n    name: alias\n    description: name of the class to be aliased\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    required: true\n  class_named:\n    name: class_named\n    description: local alias for the class\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n\n</code></pre>"},{"location":"AliasedClass/#induced","title":"Induced","text":"<pre><code>name: AliasedClass\ndescription: alias-class key value pairs for classes\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  alias:\n    name: alias\n    description: name of the class to be aliased\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    alias: alias\n    owner: AliasedClass\n    domain_of:\n    - AliasedClass\n    required: true\n  class_named:\n    name: class_named\n    description: local alias for the class\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: class_named\n    owner: AliasedClass\n    domain_of:\n    - AliasedClass\n\n</code></pre>"},{"location":"Any/","title":"Class: Any","text":"<p>URI: linkml:Any</p> <pre><code> classDiagram\n    class Any\n\n</code></pre>"},{"location":"Any/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance"},{"location":"Any/#usages","title":"Usages","text":"used by used in type used ElementDerivation overrides range Any ClassDerivation overrides range Any SlotDerivation overrides range Any EnumDerivation overrides range Any PermissibleValueDerivation overrides range Any PrefixDerivation overrides range Any KeyVal value range Any CopyDirective exclude range Any CopyDirective include range Any CopyDirective add range Any"},{"location":"Any/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Any/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Any/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkml:Any native linkmltr:Any"},{"location":"Any/#linkml-source","title":"LinkML Source","text":""},{"location":"Any/#direct","title":"Direct","text":"<pre><code>name: Any\nfrom_schema: https://w3id.org/linkml/transformer\nclass_uri: linkml:Any\n\n</code></pre>"},{"location":"Any/#induced","title":"Induced","text":"<pre><code>name: Any\nfrom_schema: https://w3id.org/linkml/transformer\nclass_uri: linkml:Any\n\n</code></pre>"},{"location":"Boolean/","title":"Type: Boolean","text":"<p>A binary (true or false) value</p> <p>URI: xsd:boolean</p> <ul> <li> <p>base: Bool</p> </li> <li> <p>uri: xsd:boolean</p> </li> <li> <p>repr: bool</p> </li> </ul>"},{"location":"Boolean/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Boolean/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"ClassDerivation/","title":"Class: ClassDerivation","text":"<p>A specification of how to derive a target class from a source class.</p> <p>URI: linkmltr:ClassDerivation</p> <pre><code> classDiagram\n    class ClassDerivation\n      ElementDerivation &lt;|-- ClassDerivation\n\n      ClassDerivation : comments\n\n      ClassDerivation : copy_directives\n\n          ClassDerivation --|&gt; CopyDirective : copy_directives\n\n      ClassDerivation : description\n\n          ClassDerivation --|&gt; None : description\n\n      ClassDerivation : expression_to_expression_mappings\n\n          ClassDerivation --|&gt; KeyVal : expression_to_expression_mappings\n\n      ClassDerivation : expression_to_value_mappings\n\n          ClassDerivation --|&gt; KeyVal : expression_to_value_mappings\n\n      ClassDerivation : implements\n\n      ClassDerivation : is_a\n\n          ClassDerivation --|&gt; ElementDerivation : is_a\n\n      ClassDerivation : joins\n\n          ClassDerivation --|&gt; AliasedClass : joins\n\n      ClassDerivation : mirror_source\n\n      ClassDerivation : mixins\n\n          ClassDerivation --|&gt; ElementDerivation : mixins\n\n      ClassDerivation : name\n\n          ClassDerivation --|&gt; None : name\n\n      ClassDerivation : overrides\n\n          ClassDerivation --|&gt; Any : overrides\n\n      ClassDerivation : populated_from\n\n      ClassDerivation : slot_derivations\n\n          ClassDerivation --|&gt; SlotDerivation : slot_derivations\n\n      ClassDerivation : sources\n\n      ClassDerivation : value_mappings\n\n          ClassDerivation --|&gt; KeyVal : value_mappings\n\n\n</code></pre>"},{"location":"ClassDerivation/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>ElementDerivation<ul> <li>ClassDerivation</li> </ul> </li> </ul> </li> </ul>"},{"location":"ClassDerivation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance populated_from 0..1  ClassReference Name of the class in the source schema direct sources 0..*  ClassReference direct joins 0..*  AliasedClass Additional classes to be joined to derive instances of the target class direct slot_derivations 0..*  SlotDerivation direct name 1..1  String Name of the element in the target schema ElementDerivation copy_directives 0..*  CopyDirective ElementDerivation overrides 0..1  Any overrides source schema slots ElementDerivation is_a 0..1  ElementDerivation ElementDerivation mixins 0..*  ElementDerivation ElementDerivation value_mappings 0..*  KeyVal A mapping table that is applied directly to mappings, in order of precedence ElementDerivation expression_to_value_mappings 0..*  KeyVal A mapping table in which the keys are expressions ElementDerivation expression_to_expression_mappings 0..*  KeyVal A mapping table in which the keys and values are expressions ElementDerivation mirror_source 0..1  Boolean ElementDerivation description 0..1  String description of the specification component SpecificationComponent implements 0..*  Uriorcurie A reference to a specification that this component implements SpecificationComponent comments 0..*  String A list of comments about this component SpecificationComponent"},{"location":"ClassDerivation/#usages","title":"Usages","text":"used by used in type used TransformationSpecification class_derivations range ClassDerivation"},{"location":"ClassDerivation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ClassDerivation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"ClassDerivation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:ClassDerivation native linkmltr:ClassDerivation"},{"location":"ClassDerivation/#linkml-source","title":"LinkML Source","text":""},{"location":"ClassDerivation/#direct","title":"Direct","text":"<pre><code>name: ClassDerivation\ndescription: A specification of how to derive a target class from a source class.\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  populated_from:\n    name: populated_from\n    description: Name of the class in the source schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: ClassReference\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: ClassReference\n  joins:\n    name: joins\n    description: Additional classes to be joined to derive instances of the target\n      class\n    comments:\n    - not yet implemented\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: AliasedClass\n    inlined: true\n  slot_derivations:\n    name: slot_derivations\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    range: SlotDerivation\n    inlined: true\n\n</code></pre>"},{"location":"ClassDerivation/#induced","title":"Induced","text":"<pre><code>name: ClassDerivation\ndescription: A specification of how to derive a target class from a source class.\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  populated_from:\n    name: populated_from\n    description: Name of the class in the source schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: populated_from\n    owner: ClassDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: ClassReference\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: sources\n    owner: ClassDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: ClassReference\n  joins:\n    name: joins\n    description: Additional classes to be joined to derive instances of the target\n      class\n    comments:\n    - not yet implemented\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: joins\n    owner: ClassDerivation\n    domain_of:\n    - ClassDerivation\n    range: AliasedClass\n    inlined: true\n  slot_derivations:\n    name: slot_derivations\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    alias: slot_derivations\n    owner: ClassDerivation\n    domain_of:\n    - TransformationSpecification\n    - ClassDerivation\n    range: SlotDerivation\n    inlined: true\n  name:\n    name: name\n    description: Name of the element in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    alias: name\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: string\n    required: true\n  copy_directives:\n    name: copy_directives\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: copy_directives\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: CopyDirective\n    inlined: true\n  overrides:\n    name: overrides\n    description: overrides source schema slots\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: overrides\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: Any\n  is_a:\n    name: is_a\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:is_a\n    alias: is_a\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n  mixins:\n    name: mixins\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:mixins\n    multivalued: true\n    alias: mixins\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n    inlined: false\n  value_mappings:\n    name: value_mappings\n    description: A mapping table that is applied directly to mappings, in order of\n      precedence\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: value_mappings\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_value_mappings:\n    name: expression_to_value_mappings\n    description: A mapping table in which the keys are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_value_mappings\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_expression_mappings:\n    name: expression_to_expression_mappings\n    description: A mapping table in which the keys and values are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_expression_mappings\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  mirror_source:\n    name: mirror_source\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: mirror_source\n    owner: ClassDerivation\n    domain_of:\n    - ElementDerivation\n    range: boolean\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: ClassDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: ClassDerivation\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: ClassDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n\n</code></pre>"},{"location":"ClassReference/","title":"Type: ClassReference","text":"<p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>typeof: string</p> </li> </ul>"},{"location":"ClassReference/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ClassReference/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"CollectionType/","title":"Enum: CollectionType","text":"<p>URI: CollectionType</p>"},{"location":"CollectionType/#permissible-values","title":"Permissible Values","text":"Value Meaning Description SingleValued None MultiValued None MultiValuedList None MultiValuedDict None"},{"location":"CollectionType/#slots","title":"Slots","text":"Name Description cast_collection_as"},{"location":"CollectionType/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"CollectionType/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"CollectionType/#linkml-source","title":"LinkML Source","text":"<pre><code>name: CollectionType\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\npermissible_values:\n  SingleValued:\n    text: SingleValued\n  MultiValued:\n    text: MultiValued\n  MultiValuedList:\n    text: MultiValuedList\n  MultiValuedDict:\n    text: MultiValuedDict\n\n</code></pre>"},{"location":"CopyDirective/","title":"Class: CopyDirective","text":"<p>Instructs a Schema Mapper in how to map to a target schema. Not used for data transformation.</p> <p>URI: linkmltr:CopyDirective</p> <pre><code> classDiagram\n    class CopyDirective\n      CopyDirective : add\n\n          CopyDirective --|&gt; Any : add\n\n      CopyDirective : copy_all\n\n      CopyDirective : element_name\n\n          CopyDirective --|&gt; None : element_name\n\n      CopyDirective : exclude\n\n          CopyDirective --|&gt; Any : exclude\n\n      CopyDirective : exclude_all\n\n      CopyDirective : include\n\n          CopyDirective --|&gt; Any : include\n\n\n</code></pre>"},{"location":"CopyDirective/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance element_name 1..1  String direct copy_all 0..1  Boolean direct exclude_all 0..1  Boolean direct exclude 0..1  Any direct include 0..1  Any direct add 0..1  Any direct"},{"location":"CopyDirective/#usages","title":"Usages","text":"used by used in type used ElementDerivation copy_directives range CopyDirective ClassDerivation copy_directives range CopyDirective SlotDerivation copy_directives range CopyDirective EnumDerivation copy_directives range CopyDirective PermissibleValueDerivation copy_directives range CopyDirective PrefixDerivation copy_directives range CopyDirective"},{"location":"CopyDirective/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"CopyDirective/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"CopyDirective/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:CopyDirective native linkmltr:CopyDirective"},{"location":"CopyDirective/#linkml-source","title":"LinkML Source","text":""},{"location":"CopyDirective/#direct","title":"Direct","text":"<pre><code>name: CopyDirective\ndescription: Instructs a Schema Mapper in how to map to a target schema. Not used\n  for data transformation.\nfrom_schema: https://w3id.org/linkml/transformer\nstatus: testing\nattributes:\n  element_name:\n    name: element_name\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    required: true\n  copy_all:\n    name: copy_all\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: boolean\n  exclude_all:\n    name: exclude_all\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: boolean\n  exclude:\n    name: exclude\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: Any\n  include:\n    name: include\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: Any\n  add:\n    name: add\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: Any\n\n</code></pre>"},{"location":"CopyDirective/#induced","title":"Induced","text":"<pre><code>name: CopyDirective\ndescription: Instructs a Schema Mapper in how to map to a target schema. Not used\n  for data transformation.\nfrom_schema: https://w3id.org/linkml/transformer\nstatus: testing\nattributes:\n  element_name:\n    name: element_name\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    alias: element_name\n    owner: CopyDirective\n    domain_of:\n    - CopyDirective\n    required: true\n  copy_all:\n    name: copy_all\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: copy_all\n    owner: CopyDirective\n    domain_of:\n    - CopyDirective\n    range: boolean\n  exclude_all:\n    name: exclude_all\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: exclude_all\n    owner: CopyDirective\n    domain_of:\n    - CopyDirective\n    range: boolean\n  exclude:\n    name: exclude\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: exclude\n    owner: CopyDirective\n    domain_of:\n    - CopyDirective\n    range: Any\n  include:\n    name: include\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: include\n    owner: CopyDirective\n    domain_of:\n    - CopyDirective\n    range: Any\n  add:\n    name: add\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: add\n    owner: CopyDirective\n    domain_of:\n    - CopyDirective\n    range: Any\n\n</code></pre>"},{"location":"Curie/","title":"Type: Curie","text":"<p>a compact URI</p> <p>URI: xsd:string</p> <ul> <li> <p>base: Curie</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Curie/#comments","title":"Comments","text":"<ul> <li>in RDF serializations this MUST be expanded to a URI</li> <li>in non-RDF serializations MAY be serialized as the compact representation</li> </ul>"},{"location":"Curie/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Curie/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Date/","title":"Type: Date","text":"<p>a date (year, month and day) in an idealized calendar</p> <p>URI: xsd:date</p> <ul> <li> <p>base: XSDDate</p> </li> <li> <p>uri: xsd:date</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Date/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Date/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"DateOrDatetime/","title":"Type: DateOrDatetime","text":"<p>Either a date or a datetime</p> <p>URI: linkml:DateOrDatetime</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: linkml:DateOrDatetime</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"DateOrDatetime/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"DateOrDatetime/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Datetime/","title":"Type: Datetime","text":"<p>The combination of a date and time</p> <p>URI: xsd:dateTime</p> <ul> <li> <p>base: XSDDateTime</p> </li> <li> <p>uri: xsd:dateTime</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Datetime/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Datetime/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Decimal/","title":"Type: Decimal","text":"<p>A real number with arbitrary precision that conforms to the xsd:decimal specification</p> <p>URI: xsd:decimal</p> <ul> <li> <p>base: Decimal</p> </li> <li> <p>uri: xsd:decimal</p> </li> </ul>"},{"location":"Decimal/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Decimal/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Double/","title":"Type: Double","text":"<p>A real number that conforms to the xsd:double specification</p> <p>URI: xsd:double</p> <ul> <li> <p>base: float</p> </li> <li> <p>uri: xsd:double</p> </li> </ul>"},{"location":"Double/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Double/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"ElementDerivation/","title":"Class: ElementDerivation","text":"<p>An abstract grouping for classes that provide a specification of how to  derive a target element from a source element.</p> <ul> <li>NOTE: this is an abstract class and should not be instantiated directly</li> </ul> <p>URI: linkmltr:ElementDerivation</p> <pre><code> classDiagram\n    class ElementDerivation\n      SpecificationComponent &lt;|-- ElementDerivation\n\n\n      ElementDerivation &lt;|-- ClassDerivation\n      ElementDerivation &lt;|-- SlotDerivation\n      ElementDerivation &lt;|-- EnumDerivation\n      ElementDerivation &lt;|-- PermissibleValueDerivation\n      ElementDerivation &lt;|-- PrefixDerivation\n\n\n      ElementDerivation : comments\n\n      ElementDerivation : copy_directives\n\n          ElementDerivation --|&gt; CopyDirective : copy_directives\n\n      ElementDerivation : description\n\n          ElementDerivation --|&gt; None : description\n\n      ElementDerivation : expression_to_expression_mappings\n\n          ElementDerivation --|&gt; KeyVal : expression_to_expression_mappings\n\n      ElementDerivation : expression_to_value_mappings\n\n          ElementDerivation --|&gt; KeyVal : expression_to_value_mappings\n\n      ElementDerivation : implements\n\n      ElementDerivation : is_a\n\n          ElementDerivation --|&gt; ElementDerivation : is_a\n\n      ElementDerivation : mirror_source\n\n      ElementDerivation : mixins\n\n          ElementDerivation --|&gt; ElementDerivation : mixins\n\n      ElementDerivation : name\n\n          ElementDerivation --|&gt; None : name\n\n      ElementDerivation : overrides\n\n          ElementDerivation --|&gt; Any : overrides\n\n      ElementDerivation : value_mappings\n\n          ElementDerivation --|&gt; KeyVal : value_mappings\n\n\n</code></pre>"},{"location":"ElementDerivation/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>ElementDerivation<ul> <li>ClassDerivation</li> <li>SlotDerivation</li> <li>EnumDerivation</li> <li>PermissibleValueDerivation</li> <li>PrefixDerivation</li> </ul> </li> </ul> </li> </ul>"},{"location":"ElementDerivation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance name 1..1  String Name of the element in the target schema direct copy_directives 0..*  CopyDirective direct overrides 0..1  Any overrides source schema slots direct is_a 0..1  ElementDerivation direct mixins 0..*  ElementDerivation direct value_mappings 0..*  KeyVal A mapping table that is applied directly to mappings, in order of precedence direct expression_to_value_mappings 0..*  KeyVal A mapping table in which the keys are expressions direct expression_to_expression_mappings 0..*  KeyVal A mapping table in which the keys and values are expressions direct mirror_source 0..1  Boolean direct description 0..1  String description of the specification component SpecificationComponent implements 0..*  Uriorcurie A reference to a specification that this component implements SpecificationComponent comments 0..*  String A list of comments about this component SpecificationComponent"},{"location":"ElementDerivation/#usages","title":"Usages","text":"used by used in type used ElementDerivation is_a range ElementDerivation ElementDerivation mixins range ElementDerivation ClassDerivation is_a range ElementDerivation ClassDerivation mixins range ElementDerivation SlotDerivation is_a range ElementDerivation SlotDerivation mixins range ElementDerivation EnumDerivation is_a range ElementDerivation EnumDerivation mixins range ElementDerivation PermissibleValueDerivation is_a range ElementDerivation PermissibleValueDerivation mixins range ElementDerivation PrefixDerivation is_a range ElementDerivation PrefixDerivation mixins range ElementDerivation"},{"location":"ElementDerivation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ElementDerivation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"ElementDerivation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:ElementDerivation native linkmltr:ElementDerivation"},{"location":"ElementDerivation/#linkml-source","title":"LinkML Source","text":""},{"location":"ElementDerivation/#direct","title":"Direct","text":"<pre><code>name: ElementDerivation\ndescription: An abstract grouping for classes that provide a specification of how\n  to  derive a target element from a source element.\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: SpecificationComponent\nabstract: true\nattributes:\n  name:\n    name: name\n    description: Name of the element in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    required: true\n  copy_directives:\n    name: copy_directives\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: CopyDirective\n    inlined: true\n  overrides:\n    name: overrides\n    description: overrides source schema slots\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: Any\n  is_a:\n    name: is_a\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:is_a\n    range: ElementDerivation\n  mixins:\n    name: mixins\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:mixins\n    multivalued: true\n    range: ElementDerivation\n    inlined: false\n  value_mappings:\n    name: value_mappings\n    description: A mapping table that is applied directly to mappings, in order of\n      precedence\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: KeyVal\n    inlined: true\n  expression_to_value_mappings:\n    name: expression_to_value_mappings\n    description: A mapping table in which the keys are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: KeyVal\n    inlined: true\n  expression_to_expression_mappings:\n    name: expression_to_expression_mappings\n    description: A mapping table in which the keys and values are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: KeyVal\n    inlined: true\n  mirror_source:\n    name: mirror_source\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: boolean\n\n</code></pre>"},{"location":"ElementDerivation/#induced","title":"Induced","text":"<pre><code>name: ElementDerivation\ndescription: An abstract grouping for classes that provide a specification of how\n  to  derive a target element from a source element.\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: SpecificationComponent\nabstract: true\nattributes:\n  name:\n    name: name\n    description: Name of the element in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    alias: name\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    required: true\n  copy_directives:\n    name: copy_directives\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: copy_directives\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: CopyDirective\n    inlined: true\n  overrides:\n    name: overrides\n    description: overrides source schema slots\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: overrides\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: Any\n  is_a:\n    name: is_a\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:is_a\n    alias: is_a\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n  mixins:\n    name: mixins\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:mixins\n    multivalued: true\n    alias: mixins\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n    inlined: false\n  value_mappings:\n    name: value_mappings\n    description: A mapping table that is applied directly to mappings, in order of\n      precedence\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: value_mappings\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_value_mappings:\n    name: expression_to_value_mappings\n    description: A mapping table in which the keys are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_value_mappings\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_expression_mappings:\n    name: expression_to_expression_mappings\n    description: A mapping table in which the keys and values are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_expression_mappings\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  mirror_source:\n    name: mirror_source\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: mirror_source\n    owner: ElementDerivation\n    domain_of:\n    - ElementDerivation\n    range: boolean\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: ElementDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: ElementDerivation\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: ElementDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n\n</code></pre>"},{"location":"EnumDerivation/","title":"Class: EnumDerivation","text":"<p>A specification of how to derive the value of a target enum from a source enum</p> <p>URI: linkmltr:EnumDerivation</p> <pre><code> classDiagram\n    class EnumDerivation\n      ElementDerivation &lt;|-- EnumDerivation\n\n      EnumDerivation : comments\n\n      EnumDerivation : copy_directives\n\n          EnumDerivation --|&gt; CopyDirective : copy_directives\n\n      EnumDerivation : description\n\n          EnumDerivation --|&gt; None : description\n\n      EnumDerivation : expr\n\n      EnumDerivation : expression_to_expression_mappings\n\n          EnumDerivation --|&gt; KeyVal : expression_to_expression_mappings\n\n      EnumDerivation : expression_to_value_mappings\n\n          EnumDerivation --|&gt; KeyVal : expression_to_value_mappings\n\n      EnumDerivation : hide\n\n      EnumDerivation : implements\n\n      EnumDerivation : is_a\n\n          EnumDerivation --|&gt; ElementDerivation : is_a\n\n      EnumDerivation : mirror_source\n\n      EnumDerivation : mixins\n\n          EnumDerivation --|&gt; ElementDerivation : mixins\n\n      EnumDerivation : name\n\n          EnumDerivation --|&gt; None : name\n\n      EnumDerivation : overrides\n\n          EnumDerivation --|&gt; Any : overrides\n\n      EnumDerivation : permissible_value_derivations\n\n          EnumDerivation --|&gt; PermissibleValueDerivation : permissible_value_derivations\n\n      EnumDerivation : populated_from\n\n      EnumDerivation : sources\n\n      EnumDerivation : value_mappings\n\n          EnumDerivation --|&gt; KeyVal : value_mappings\n\n\n</code></pre>"},{"location":"EnumDerivation/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>ElementDerivation<ul> <li>EnumDerivation</li> </ul> </li> </ul> </li> </ul>"},{"location":"EnumDerivation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance name 1..1  String Target enum name direct populated_from 0..1  EnumReference Source enum name direct sources 0..*  EnumReference direct expr 0..1  String An expression to be evaluated on the source object to derive the target slot direct hide 0..1  Boolean True if this is suppressed direct permissible_value_derivations 0..*  PermissibleValueDerivation Instructions on how to derive a set of PVs in the target schema direct copy_directives 0..*  CopyDirective ElementDerivation overrides 0..1  Any overrides source schema slots ElementDerivation is_a 0..1  ElementDerivation ElementDerivation mixins 0..*  ElementDerivation ElementDerivation value_mappings 0..*  KeyVal A mapping table that is applied directly to mappings, in order of precedence ElementDerivation expression_to_value_mappings 0..*  KeyVal A mapping table in which the keys are expressions ElementDerivation expression_to_expression_mappings 0..*  KeyVal A mapping table in which the keys and values are expressions ElementDerivation mirror_source 0..1  Boolean ElementDerivation description 0..1  String description of the specification component SpecificationComponent implements 0..*  Uriorcurie A reference to a specification that this component implements SpecificationComponent comments 0..*  String A list of comments about this component SpecificationComponent"},{"location":"EnumDerivation/#usages","title":"Usages","text":"used by used in type used TransformationSpecification enum_derivations range EnumDerivation"},{"location":"EnumDerivation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"EnumDerivation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"EnumDerivation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:EnumDerivation native linkmltr:EnumDerivation"},{"location":"EnumDerivation/#linkml-source","title":"LinkML Source","text":""},{"location":"EnumDerivation/#direct","title":"Direct","text":"<pre><code>name: EnumDerivation\ndescription: A specification of how to derive the value of a target enum from a source\n  enum\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  name:\n    name: name\n    description: Target enum name\n    from_schema: https://w3id.org/linkml/transformer\n    key: true\n    required: true\n  populated_from:\n    name: populated_from\n    description: Source enum name\n    from_schema: https://w3id.org/linkml/transformer\n    range: EnumReference\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    range: EnumReference\n  expr:\n    name: expr\n    description: An expression to be evaluated on the source object to derive the\n      target slot. Should be specified using the LinkML expression language.\n    from_schema: https://w3id.org/linkml/transformer\n    range: string\n  hide:\n    name: hide\n    description: True if this is suppressed\n    from_schema: https://w3id.org/linkml/transformer\n    range: boolean\n  permissible_value_derivations:\n    name: permissible_value_derivations\n    description: Instructions on how to derive a set of PVs in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: PermissibleValueDerivation\n    inlined: true\n\n</code></pre>"},{"location":"EnumDerivation/#induced","title":"Induced","text":"<pre><code>name: EnumDerivation\ndescription: A specification of how to derive the value of a target enum from a source\n  enum\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  name:\n    name: name\n    description: Target enum name\n    from_schema: https://w3id.org/linkml/transformer\n    key: true\n    alias: name\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    required: true\n  populated_from:\n    name: populated_from\n    description: Source enum name\n    from_schema: https://w3id.org/linkml/transformer\n    alias: populated_from\n    owner: EnumDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: EnumReference\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    alias: sources\n    owner: EnumDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: EnumReference\n  expr:\n    name: expr\n    description: An expression to be evaluated on the source object to derive the\n      target slot. Should be specified using the LinkML expression language.\n    from_schema: https://w3id.org/linkml/transformer\n    alias: expr\n    owner: EnumDerivation\n    domain_of:\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: string\n  hide:\n    name: hide\n    description: True if this is suppressed\n    from_schema: https://w3id.org/linkml/transformer\n    alias: hide\n    owner: EnumDerivation\n    domain_of:\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: boolean\n  permissible_value_derivations:\n    name: permissible_value_derivations\n    description: Instructions on how to derive a set of PVs in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: permissible_value_derivations\n    owner: EnumDerivation\n    domain_of:\n    - EnumDerivation\n    range: PermissibleValueDerivation\n    inlined: true\n  copy_directives:\n    name: copy_directives\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: copy_directives\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: CopyDirective\n    inlined: true\n  overrides:\n    name: overrides\n    description: overrides source schema slots\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: overrides\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: Any\n  is_a:\n    name: is_a\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:is_a\n    alias: is_a\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n  mixins:\n    name: mixins\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:mixins\n    multivalued: true\n    alias: mixins\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n    inlined: false\n  value_mappings:\n    name: value_mappings\n    description: A mapping table that is applied directly to mappings, in order of\n      precedence\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: value_mappings\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_value_mappings:\n    name: expression_to_value_mappings\n    description: A mapping table in which the keys are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_value_mappings\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_expression_mappings:\n    name: expression_to_expression_mappings\n    description: A mapping table in which the keys and values are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_expression_mappings\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  mirror_source:\n    name: mirror_source\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: mirror_source\n    owner: EnumDerivation\n    domain_of:\n    - ElementDerivation\n    range: boolean\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: EnumDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: EnumDerivation\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: EnumDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n\n</code></pre>"},{"location":"EnumReference/","title":"Type: EnumReference","text":"<p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>typeof: string</p> </li> </ul>"},{"location":"EnumReference/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"EnumReference/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Float/","title":"Type: Float","text":"<p>A real number that conforms to the xsd:float specification</p> <p>URI: xsd:float</p> <ul> <li> <p>base: float</p> </li> <li> <p>uri: xsd:float</p> </li> </ul>"},{"location":"Float/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Float/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Integer/","title":"Type: Integer","text":"<p>An integer</p> <p>URI: xsd:integer</p> <ul> <li> <p>base: int</p> </li> <li> <p>uri: xsd:integer</p> </li> </ul>"},{"location":"Integer/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Integer/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Inverse/","title":"Class: Inverse","text":"<p>Used for back references in mapping to relational model</p> <p>URI: linkmltr:Inverse</p> <pre><code> classDiagram\n    class Inverse\n      Inverse : class_name\n\n          Inverse --|&gt; None : class_name\n\n      Inverse : slot_name\n\n          Inverse --|&gt; None : slot_name\n\n\n</code></pre>"},{"location":"Inverse/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance slot_name 0..1  String direct class_name 0..1  String direct"},{"location":"Inverse/#usages","title":"Usages","text":"used by used in type used SlotDerivation inverse_of range Inverse"},{"location":"Inverse/#aliases","title":"Aliases","text":"<ul> <li>backref</li> <li>back_references</li> </ul>"},{"location":"Inverse/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Inverse/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Inverse/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:Inverse native linkmltr:Inverse"},{"location":"Inverse/#linkml-source","title":"LinkML Source","text":""},{"location":"Inverse/#direct","title":"Direct","text":"<pre><code>name: Inverse\ndescription: Used for back references in mapping to relational model\nfrom_schema: https://w3id.org/linkml/transformer\naliases:\n- backref\n- back_references\nattributes:\n  slot_name:\n    name: slot_name\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  class_name:\n    name: class_name\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n\n</code></pre>"},{"location":"Inverse/#induced","title":"Induced","text":"<pre><code>name: Inverse\ndescription: Used for back references in mapping to relational model\nfrom_schema: https://w3id.org/linkml/transformer\naliases:\n- backref\n- back_references\nattributes:\n  slot_name:\n    name: slot_name\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: slot_name\n    owner: Inverse\n    domain_of:\n    - Inverse\n  class_name:\n    name: class_name\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: class_name\n    owner: Inverse\n    domain_of:\n    - Inverse\n\n</code></pre>"},{"location":"Jsonpath/","title":"Type: Jsonpath","text":"<p>A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Jsonpath/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Jsonpath/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Jsonpointer/","title":"Type: Jsonpointer","text":"<p>A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Jsonpointer/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Jsonpointer/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"KeyVal/","title":"Class: KeyVal","text":"<p>URI: linkmltr:KeyVal</p> <pre><code> classDiagram\n    class KeyVal\n      KeyVal : key\n\n          KeyVal --|&gt; None : key\n\n      KeyVal : value\n\n          KeyVal --|&gt; Any : value\n\n\n</code></pre>"},{"location":"KeyVal/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance key 1..1  String direct value 0..1  Any direct"},{"location":"KeyVal/#usages","title":"Usages","text":"used by used in type used TransformationSpecification prefixes range KeyVal ElementDerivation value_mappings range KeyVal ElementDerivation expression_to_value_mappings range KeyVal ElementDerivation expression_to_expression_mappings range KeyVal ClassDerivation value_mappings range KeyVal ClassDerivation expression_to_value_mappings range KeyVal ClassDerivation expression_to_expression_mappings range KeyVal SlotDerivation value_mappings range KeyVal SlotDerivation expression_to_value_mappings range KeyVal SlotDerivation expression_to_expression_mappings range KeyVal EnumDerivation value_mappings range KeyVal EnumDerivation expression_to_value_mappings range KeyVal EnumDerivation expression_to_expression_mappings range KeyVal PermissibleValueDerivation value_mappings range KeyVal PermissibleValueDerivation expression_to_value_mappings range KeyVal PermissibleValueDerivation expression_to_expression_mappings range KeyVal PrefixDerivation value_mappings range KeyVal PrefixDerivation expression_to_value_mappings range KeyVal PrefixDerivation expression_to_expression_mappings range KeyVal"},{"location":"KeyVal/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"KeyVal/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"KeyVal/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:KeyVal native linkmltr:KeyVal"},{"location":"KeyVal/#linkml-source","title":"LinkML Source","text":""},{"location":"KeyVal/#direct","title":"Direct","text":"<pre><code>name: KeyVal\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  key:\n    name: key\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    required: true\n  value:\n    name: value\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: Any\n\n</code></pre>"},{"location":"KeyVal/#induced","title":"Induced","text":"<pre><code>name: KeyVal\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  key:\n    name: key\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    alias: key\n    owner: KeyVal\n    domain_of:\n    - KeyVal\n    required: true\n  value:\n    name: value\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: value\n    owner: KeyVal\n    domain_of:\n    - KeyVal\n    range: Any\n\n</code></pre>"},{"location":"Ncname/","title":"Type: Ncname","text":"<p>Prefix part of CURIE</p> <p>URI: xsd:string</p> <ul> <li> <p>base: NCName</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Ncname/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Ncname/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Nodeidentifier/","title":"Type: Nodeidentifier","text":"<p>A URI, CURIE or BNODE that represents a node in a model.</p> <p>URI: shex:nonLiteral</p> <ul> <li> <p>base: NodeIdentifier</p> </li> <li> <p>uri: shex:nonLiteral</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Nodeidentifier/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Nodeidentifier/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Objectidentifier/","title":"Type: Objectidentifier","text":"<p>A URI or CURIE that represents an object in the model.</p> <p>URI: shex:iri</p> <ul> <li> <p>base: ElementIdentifier</p> </li> <li> <p>uri: shex:iri</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Objectidentifier/#comments","title":"Comments","text":"<ul> <li>Used for inheritance and type checking</li> </ul>"},{"location":"Objectidentifier/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Objectidentifier/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"PermissibleValueDerivation/","title":"Class: PermissibleValueDerivation","text":"<p>A specification of how to derive the value of a PV from a source enum</p> <p>URI: linkmltr:PermissibleValueDerivation</p> <pre><code> classDiagram\n    class PermissibleValueDerivation\n      ElementDerivation &lt;|-- PermissibleValueDerivation\n\n      PermissibleValueDerivation : comments\n\n      PermissibleValueDerivation : copy_directives\n\n          PermissibleValueDerivation --|&gt; CopyDirective : copy_directives\n\n      PermissibleValueDerivation : description\n\n          PermissibleValueDerivation --|&gt; None : description\n\n      PermissibleValueDerivation : expr\n\n      PermissibleValueDerivation : expression_to_expression_mappings\n\n          PermissibleValueDerivation --|&gt; KeyVal : expression_to_expression_mappings\n\n      PermissibleValueDerivation : expression_to_value_mappings\n\n          PermissibleValueDerivation --|&gt; KeyVal : expression_to_value_mappings\n\n      PermissibleValueDerivation : hide\n\n      PermissibleValueDerivation : implements\n\n      PermissibleValueDerivation : is_a\n\n          PermissibleValueDerivation --|&gt; ElementDerivation : is_a\n\n      PermissibleValueDerivation : mirror_source\n\n      PermissibleValueDerivation : mixins\n\n          PermissibleValueDerivation --|&gt; ElementDerivation : mixins\n\n      PermissibleValueDerivation : name\n\n          PermissibleValueDerivation --|&gt; None : name\n\n      PermissibleValueDerivation : overrides\n\n          PermissibleValueDerivation --|&gt; Any : overrides\n\n      PermissibleValueDerivation : populated_from\n\n      PermissibleValueDerivation : sources\n\n      PermissibleValueDerivation : value_mappings\n\n          PermissibleValueDerivation --|&gt; KeyVal : value_mappings\n\n\n</code></pre>"},{"location":"PermissibleValueDerivation/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>ElementDerivation<ul> <li>PermissibleValueDerivation</li> </ul> </li> </ul> </li> </ul>"},{"location":"PermissibleValueDerivation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance name 1..1  String Target permissible value text direct expr 0..1  String direct populated_from 0..1  String Source permissible value direct sources 0..*  String direct hide 0..1  Boolean direct copy_directives 0..*  CopyDirective ElementDerivation overrides 0..1  Any overrides source schema slots ElementDerivation is_a 0..1  ElementDerivation ElementDerivation mixins 0..*  ElementDerivation ElementDerivation value_mappings 0..*  KeyVal A mapping table that is applied directly to mappings, in order of precedence ElementDerivation expression_to_value_mappings 0..*  KeyVal A mapping table in which the keys are expressions ElementDerivation expression_to_expression_mappings 0..*  KeyVal A mapping table in which the keys and values are expressions ElementDerivation mirror_source 0..1  Boolean ElementDerivation description 0..1  String description of the specification component SpecificationComponent implements 0..*  Uriorcurie A reference to a specification that this component implements SpecificationComponent comments 0..*  String A list of comments about this component SpecificationComponent"},{"location":"PermissibleValueDerivation/#usages","title":"Usages","text":"used by used in type used EnumDerivation permissible_value_derivations range PermissibleValueDerivation"},{"location":"PermissibleValueDerivation/#todos","title":"TODOs","text":"<ul> <li>this is currently under-specified. We will need boolean combinators to express if-then-else</li> </ul>"},{"location":"PermissibleValueDerivation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"PermissibleValueDerivation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"PermissibleValueDerivation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:PermissibleValueDerivation native linkmltr:PermissibleValueDerivation"},{"location":"PermissibleValueDerivation/#linkml-source","title":"LinkML Source","text":""},{"location":"PermissibleValueDerivation/#direct","title":"Direct","text":"<pre><code>name: PermissibleValueDerivation\ndescription: A specification of how to derive the value of a PV from a source enum\ntodos:\n- this is currently under-specified. We will need boolean combinators to express if-then-else\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  name:\n    name: name\n    description: Target permissible value text\n    from_schema: https://w3id.org/linkml/transformer\n    key: true\n    required: true\n  expr:\n    name: expr\n    from_schema: https://w3id.org/linkml/transformer\n    range: string\n  populated_from:\n    name: populated_from\n    description: Source permissible value\n    from_schema: https://w3id.org/linkml/transformer\n    range: string\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    range: string\n  hide:\n    name: hide\n    from_schema: https://w3id.org/linkml/transformer\n    range: boolean\n\n</code></pre>"},{"location":"PermissibleValueDerivation/#induced","title":"Induced","text":"<pre><code>name: PermissibleValueDerivation\ndescription: A specification of how to derive the value of a PV from a source enum\ntodos:\n- this is currently under-specified. We will need boolean combinators to express if-then-else\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  name:\n    name: name\n    description: Target permissible value text\n    from_schema: https://w3id.org/linkml/transformer\n    key: true\n    alias: name\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    required: true\n  expr:\n    name: expr\n    from_schema: https://w3id.org/linkml/transformer\n    alias: expr\n    owner: PermissibleValueDerivation\n    domain_of:\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: string\n  populated_from:\n    name: populated_from\n    description: Source permissible value\n    from_schema: https://w3id.org/linkml/transformer\n    alias: populated_from\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: string\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    alias: sources\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: string\n  hide:\n    name: hide\n    from_schema: https://w3id.org/linkml/transformer\n    alias: hide\n    owner: PermissibleValueDerivation\n    domain_of:\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: boolean\n  copy_directives:\n    name: copy_directives\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: copy_directives\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: CopyDirective\n    inlined: true\n  overrides:\n    name: overrides\n    description: overrides source schema slots\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: overrides\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: Any\n  is_a:\n    name: is_a\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:is_a\n    alias: is_a\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n  mixins:\n    name: mixins\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:mixins\n    multivalued: true\n    alias: mixins\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n    inlined: false\n  value_mappings:\n    name: value_mappings\n    description: A mapping table that is applied directly to mappings, in order of\n      precedence\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: value_mappings\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_value_mappings:\n    name: expression_to_value_mappings\n    description: A mapping table in which the keys are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_value_mappings\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_expression_mappings:\n    name: expression_to_expression_mappings\n    description: A mapping table in which the keys and values are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_expression_mappings\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  mirror_source:\n    name: mirror_source\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: mirror_source\n    owner: PermissibleValueDerivation\n    domain_of:\n    - ElementDerivation\n    range: boolean\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: PermissibleValueDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: PermissibleValueDerivation\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: PermissibleValueDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n\n</code></pre>"},{"location":"PrefixDerivation/","title":"Class: PrefixDerivation","text":"<p>URI: linkmltr:PrefixDerivation</p> <pre><code> classDiagram\n    class PrefixDerivation\n      ElementDerivation &lt;|-- PrefixDerivation\n\n      PrefixDerivation : comments\n\n      PrefixDerivation : copy_directives\n\n          PrefixDerivation --|&gt; CopyDirective : copy_directives\n\n      PrefixDerivation : description\n\n          PrefixDerivation --|&gt; None : description\n\n      PrefixDerivation : expression_to_expression_mappings\n\n          PrefixDerivation --|&gt; KeyVal : expression_to_expression_mappings\n\n      PrefixDerivation : expression_to_value_mappings\n\n          PrefixDerivation --|&gt; KeyVal : expression_to_value_mappings\n\n      PrefixDerivation : implements\n\n      PrefixDerivation : is_a\n\n          PrefixDerivation --|&gt; ElementDerivation : is_a\n\n      PrefixDerivation : mirror_source\n\n      PrefixDerivation : mixins\n\n          PrefixDerivation --|&gt; ElementDerivation : mixins\n\n      PrefixDerivation : name\n\n          PrefixDerivation --|&gt; None : name\n\n      PrefixDerivation : overrides\n\n          PrefixDerivation --|&gt; Any : overrides\n\n      PrefixDerivation : value_mappings\n\n          PrefixDerivation --|&gt; KeyVal : value_mappings\n\n\n</code></pre>"},{"location":"PrefixDerivation/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>ElementDerivation<ul> <li>PrefixDerivation</li> </ul> </li> </ul> </li> </ul>"},{"location":"PrefixDerivation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance name 1..1  String Name of the element in the target schema ElementDerivation copy_directives 0..*  CopyDirective ElementDerivation overrides 0..1  Any overrides source schema slots ElementDerivation is_a 0..1  ElementDerivation ElementDerivation mixins 0..*  ElementDerivation ElementDerivation value_mappings 0..*  KeyVal A mapping table that is applied directly to mappings, in order of precedence ElementDerivation expression_to_value_mappings 0..*  KeyVal A mapping table in which the keys are expressions ElementDerivation expression_to_expression_mappings 0..*  KeyVal A mapping table in which the keys and values are expressions ElementDerivation mirror_source 0..1  Boolean ElementDerivation description 0..1  String description of the specification component SpecificationComponent implements 0..*  Uriorcurie A reference to a specification that this component implements SpecificationComponent comments 0..*  String A list of comments about this component SpecificationComponent"},{"location":"PrefixDerivation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"PrefixDerivation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"PrefixDerivation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:PrefixDerivation native linkmltr:PrefixDerivation"},{"location":"PrefixDerivation/#linkml-source","title":"LinkML Source","text":""},{"location":"PrefixDerivation/#direct","title":"Direct","text":"<pre><code>name: PrefixDerivation\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\n\n</code></pre>"},{"location":"PrefixDerivation/#induced","title":"Induced","text":"<pre><code>name: PrefixDerivation\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  name:\n    name: name\n    description: Name of the element in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    key: true\n    alias: name\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: string\n    required: true\n  copy_directives:\n    name: copy_directives\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: copy_directives\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: CopyDirective\n    inlined: true\n  overrides:\n    name: overrides\n    description: overrides source schema slots\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: overrides\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: Any\n  is_a:\n    name: is_a\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:is_a\n    alias: is_a\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n  mixins:\n    name: mixins\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:mixins\n    multivalued: true\n    alias: mixins\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n    inlined: false\n  value_mappings:\n    name: value_mappings\n    description: A mapping table that is applied directly to mappings, in order of\n      precedence\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: value_mappings\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_value_mappings:\n    name: expression_to_value_mappings\n    description: A mapping table in which the keys are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_value_mappings\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_expression_mappings:\n    name: expression_to_expression_mappings\n    description: A mapping table in which the keys and values are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_expression_mappings\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  mirror_source:\n    name: mirror_source\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: mirror_source\n    owner: PrefixDerivation\n    domain_of:\n    - ElementDerivation\n    range: boolean\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: PrefixDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: PrefixDerivation\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: PrefixDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n\n</code></pre>"},{"location":"SerializationSyntaxType/","title":"Enum: SerializationSyntaxType","text":"<p>URI: SerializationSyntaxType</p>"},{"location":"SerializationSyntaxType/#permissible-values","title":"Permissible Values","text":"Value Meaning Description JSON None YAML None TURTLE None"},{"location":"SerializationSyntaxType/#slots","title":"Slots","text":"Name Description syntax"},{"location":"SerializationSyntaxType/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"SerializationSyntaxType/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"SerializationSyntaxType/#linkml-source","title":"LinkML Source","text":"<pre><code>name: SerializationSyntaxType\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\npermissible_values:\n  JSON:\n    text: JSON\n  YAML:\n    text: YAML\n  TURTLE:\n    text: TURTLE\n\n</code></pre>"},{"location":"SlotDerivation/","title":"Class: SlotDerivation","text":"<p>A specification of how to derive the value of a target slot from a source slot</p> <p>URI: linkmltr:SlotDerivation</p> <pre><code> classDiagram\n    class SlotDerivation\n      ElementDerivation &lt;|-- SlotDerivation\n\n      SlotDerivation : cast_collection_as\n\n          SlotDerivation --|&gt; CollectionType : cast_collection_as\n\n      SlotDerivation : comments\n\n      SlotDerivation : copy_directives\n\n          SlotDerivation --|&gt; CopyDirective : copy_directives\n\n      SlotDerivation : derived_from\n\n      SlotDerivation : description\n\n          SlotDerivation --|&gt; None : description\n\n      SlotDerivation : dictionary_key\n\n      SlotDerivation : expr\n\n      SlotDerivation : expression_to_expression_mappings\n\n          SlotDerivation --|&gt; KeyVal : expression_to_expression_mappings\n\n      SlotDerivation : expression_to_value_mappings\n\n          SlotDerivation --|&gt; KeyVal : expression_to_value_mappings\n\n      SlotDerivation : hide\n\n      SlotDerivation : implements\n\n      SlotDerivation : inverse_of\n\n          SlotDerivation --|&gt; Inverse : inverse_of\n\n      SlotDerivation : is_a\n\n          SlotDerivation --|&gt; ElementDerivation : is_a\n\n      SlotDerivation : mirror_source\n\n      SlotDerivation : mixins\n\n          SlotDerivation --|&gt; ElementDerivation : mixins\n\n      SlotDerivation : name\n\n          SlotDerivation --|&gt; None : name\n\n      SlotDerivation : overrides\n\n          SlotDerivation --|&gt; Any : overrides\n\n      SlotDerivation : populated_from\n\n      SlotDerivation : range\n\n      SlotDerivation : sources\n\n      SlotDerivation : stringification\n\n          SlotDerivation --|&gt; StringificationConfiguration : stringification\n\n      SlotDerivation : type_designator\n\n      SlotDerivation : unit_conversion\n\n          SlotDerivation --|&gt; UnitConversionConfiguration : unit_conversion\n\n      SlotDerivation : value_mappings\n\n          SlotDerivation --|&gt; KeyVal : value_mappings\n\n\n</code></pre>"},{"location":"SlotDerivation/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>ElementDerivation<ul> <li>SlotDerivation</li> </ul> </li> </ul> </li> </ul>"},{"location":"SlotDerivation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance name 1..1  String Target slot name direct populated_from 0..1  SlotReference Source slot name direct sources 0..*  SlotReference direct derived_from 0..*  SlotReference Source slots that are used to derive this slot direct expr 0..1  String An expression to be evaluated on the source object to derive the target slot direct range 0..1  String direct unit_conversion 0..1  UnitConversionConfiguration direct inverse_of 0..1  Inverse Used to specify a class-slot tuple that is the inverse of the derived/target ... direct hide 0..1  Boolean True if this is suppressed direct type_designator 0..1  Boolean direct cast_collection_as 0..1  CollectionType direct dictionary_key 0..1  String direct stringification 0..1  StringificationConfiguration direct copy_directives 0..*  CopyDirective ElementDerivation overrides 0..1  Any overrides source schema slots ElementDerivation is_a 0..1  ElementDerivation ElementDerivation mixins 0..*  ElementDerivation ElementDerivation value_mappings 0..*  KeyVal A mapping table that is applied directly to mappings, in order of precedence ElementDerivation expression_to_value_mappings 0..*  KeyVal A mapping table in which the keys are expressions ElementDerivation expression_to_expression_mappings 0..*  KeyVal A mapping table in which the keys and values are expressions ElementDerivation mirror_source 0..1  Boolean ElementDerivation description 0..1  String description of the specification component SpecificationComponent implements 0..*  Uriorcurie A reference to a specification that this component implements SpecificationComponent comments 0..*  String A list of comments about this component SpecificationComponent"},{"location":"SlotDerivation/#usages","title":"Usages","text":"used by used in type used TransformationSpecification slot_derivations range SlotDerivation ClassDerivation slot_derivations range SlotDerivation"},{"location":"SlotDerivation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"SlotDerivation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"SlotDerivation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:SlotDerivation native linkmltr:SlotDerivation"},{"location":"SlotDerivation/#linkml-source","title":"LinkML Source","text":""},{"location":"SlotDerivation/#direct","title":"Direct","text":"<pre><code>name: SlotDerivation\ndescription: A specification of how to derive the value of a target slot from a source\n  slot\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  name:\n    name: name\n    description: Target slot name\n    from_schema: https://w3id.org/linkml/transformer\n    key: true\n    required: true\n  populated_from:\n    name: populated_from\n    description: Source slot name\n    from_schema: https://w3id.org/linkml/transformer\n    range: SlotReference\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    range: SlotReference\n  derived_from:\n    name: derived_from\n    description: Source slots that are used to derive this slot. This can be computed\n      from the expr, if the expr is declarative.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: SlotReference\n  expr:\n    name: expr\n    description: An expression to be evaluated on the source object to derive the\n      target slot. Should be specified using the LinkML expression language.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: string\n  range:\n    name: range\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:range\n    range: string\n  unit_conversion:\n    name: unit_conversion\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: UnitConversionConfiguration\n  inverse_of:\n    name: inverse_of\n    description: Used to specify a class-slot tuple that is the inverse of the derived/target\n      slot. This is used primarily for mapping to relational databases or formalisms\n      that do not allow multiple values. The class representing the repeated element\n      has a foreign key slot inserted in that 'back references' the original multivalued\n      slot.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: Inverse\n  hide:\n    name: hide\n    description: True if this is suppressed\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: boolean\n  type_designator:\n    name: type_designator\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: boolean\n  cast_collection_as:\n    name: cast_collection_as\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: CollectionType\n  dictionary_key:\n    name: dictionary_key\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: string\n  stringification:\n    name: stringification\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: StringificationConfiguration\n\n</code></pre>"},{"location":"SlotDerivation/#induced","title":"Induced","text":"<pre><code>name: SlotDerivation\ndescription: A specification of how to derive the value of a target slot from a source\n  slot\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: ElementDerivation\nattributes:\n  name:\n    name: name\n    description: Target slot name\n    from_schema: https://w3id.org/linkml/transformer\n    key: true\n    alias: name\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    required: true\n  populated_from:\n    name: populated_from\n    description: Source slot name\n    from_schema: https://w3id.org/linkml/transformer\n    alias: populated_from\n    owner: SlotDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: SlotReference\n  sources:\n    name: sources\n    from_schema: https://w3id.org/linkml/transformer\n    multivalued: true\n    alias: sources\n    owner: SlotDerivation\n    domain_of:\n    - ClassDerivation\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: SlotReference\n  derived_from:\n    name: derived_from\n    description: Source slots that are used to derive this slot. This can be computed\n      from the expr, if the expr is declarative.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: derived_from\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: SlotReference\n  expr:\n    name: expr\n    description: An expression to be evaluated on the source object to derive the\n      target slot. Should be specified using the LinkML expression language.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: expr\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: string\n  range:\n    name: range\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:range\n    alias: range\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: string\n  unit_conversion:\n    name: unit_conversion\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: unit_conversion\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: UnitConversionConfiguration\n  inverse_of:\n    name: inverse_of\n    description: Used to specify a class-slot tuple that is the inverse of the derived/target\n      slot. This is used primarily for mapping to relational databases or formalisms\n      that do not allow multiple values. The class representing the repeated element\n      has a foreign key slot inserted in that 'back references' the original multivalued\n      slot.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: inverse_of\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: Inverse\n  hide:\n    name: hide\n    description: True if this is suppressed\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: hide\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    - EnumDerivation\n    - PermissibleValueDerivation\n    range: boolean\n  type_designator:\n    name: type_designator\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: type_designator\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: boolean\n  cast_collection_as:\n    name: cast_collection_as\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: cast_collection_as\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: CollectionType\n  dictionary_key:\n    name: dictionary_key\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: dictionary_key\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: string\n  stringification:\n    name: stringification\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: stringification\n    owner: SlotDerivation\n    domain_of:\n    - SlotDerivation\n    range: StringificationConfiguration\n  copy_directives:\n    name: copy_directives\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: copy_directives\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: CopyDirective\n    inlined: true\n  overrides:\n    name: overrides\n    description: overrides source schema slots\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: overrides\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: Any\n  is_a:\n    name: is_a\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:is_a\n    alias: is_a\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n  mixins:\n    name: mixins\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: linkml:mixins\n    multivalued: true\n    alias: mixins\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: ElementDerivation\n    inlined: false\n  value_mappings:\n    name: value_mappings\n    description: A mapping table that is applied directly to mappings, in order of\n      precedence\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: value_mappings\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_value_mappings:\n    name: expression_to_value_mappings\n    description: A mapping table in which the keys are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_value_mappings\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  expression_to_expression_mappings:\n    name: expression_to_expression_mappings\n    description: A mapping table in which the keys and values are expressions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: expression_to_expression_mappings\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: KeyVal\n    inlined: true\n  mirror_source:\n    name: mirror_source\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: mirror_source\n    owner: SlotDerivation\n    domain_of:\n    - ElementDerivation\n    range: boolean\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: SlotDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: SlotDerivation\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: SlotDerivation\n    domain_of:\n    - SpecificationComponent\n    range: string\n\n</code></pre>"},{"location":"SlotReference/","title":"Type: SlotReference","text":"<p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>typeof: string</p> </li> </ul>"},{"location":"SlotReference/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"SlotReference/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Sparqlpath/","title":"Type: Sparqlpath","text":"<p>A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Sparqlpath/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Sparqlpath/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"SpecificationComponent/","title":"Class: SpecificationComponent","text":"<ul> <li>NOTE: this is an abstract class and should not be instantiated directly</li> </ul> <p>URI: linkmltr:SpecificationComponent</p> <pre><code> classDiagram\n    class SpecificationComponent\n      SpecificationComponent &lt;|-- TransformationSpecification\n      SpecificationComponent &lt;|-- ElementDerivation\n\n      SpecificationComponent : comments\n\n      SpecificationComponent : description\n\n          SpecificationComponent --|&gt; None : description\n\n      SpecificationComponent : implements\n\n\n</code></pre>"},{"location":"SpecificationComponent/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>TransformationSpecification</li> <li>ElementDerivation</li> </ul> </li> </ul>"},{"location":"SpecificationComponent/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance description 0..1  String description of the specification component direct implements 0..*  Uriorcurie A reference to a specification that this component implements direct comments 0..*  String A list of comments about this component direct"},{"location":"SpecificationComponent/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"SpecificationComponent/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"SpecificationComponent/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:SpecificationComponent native linkmltr:SpecificationComponent"},{"location":"SpecificationComponent/#linkml-source","title":"LinkML Source","text":""},{"location":"SpecificationComponent/#direct","title":"Direct","text":"<pre><code>name: SpecificationComponent\nfrom_schema: https://w3id.org/linkml/transformer\nabstract: true\nattributes:\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    range: string\n\n</code></pre>"},{"location":"SpecificationComponent/#induced","title":"Induced","text":"<pre><code>name: SpecificationComponent\nfrom_schema: https://w3id.org/linkml/transformer\nabstract: true\nattributes:\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: SpecificationComponent\n    domain_of:\n    - SpecificationComponent\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: SpecificationComponent\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: SpecificationComponent\n    domain_of:\n    - SpecificationComponent\n    range: string\n\n</code></pre>"},{"location":"String/","title":"Type: String","text":"<p>A character string</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> </ul>"},{"location":"String/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"String/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"StringificationConfiguration/","title":"Class: StringificationConfiguration","text":"<p>URI: linkmltr:StringificationConfiguration</p> <pre><code> classDiagram\n    class StringificationConfiguration\n      StringificationConfiguration : delimiter\n\n      StringificationConfiguration : reversed\n\n      StringificationConfiguration : syntax\n\n          StringificationConfiguration --|&gt; SerializationSyntaxType : syntax\n\n\n</code></pre>"},{"location":"StringificationConfiguration/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance delimiter 0..1  String direct reversed 0..1  Boolean direct syntax 0..1  SerializationSyntaxType direct"},{"location":"StringificationConfiguration/#usages","title":"Usages","text":"used by used in type used SlotDerivation stringification range StringificationConfiguration"},{"location":"StringificationConfiguration/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"StringificationConfiguration/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"StringificationConfiguration/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:StringificationConfiguration native linkmltr:StringificationConfiguration"},{"location":"StringificationConfiguration/#linkml-source","title":"LinkML Source","text":""},{"location":"StringificationConfiguration/#direct","title":"Direct","text":"<pre><code>name: StringificationConfiguration\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  delimiter:\n    name: delimiter\n    examples:\n    - value: ','\n    - value: '|'\n    - value: ;\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: string\n  reversed:\n    name: reversed\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: boolean\n  syntax:\n    name: syntax\n    examples:\n    - value: json\n    - value: yaml\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: SerializationSyntaxType\n\n</code></pre>"},{"location":"StringificationConfiguration/#induced","title":"Induced","text":"<pre><code>name: StringificationConfiguration\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  delimiter:\n    name: delimiter\n    examples:\n    - value: ','\n    - value: '|'\n    - value: ;\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: delimiter\n    owner: StringificationConfiguration\n    domain_of:\n    - StringificationConfiguration\n    range: string\n  reversed:\n    name: reversed\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: reversed\n    owner: StringificationConfiguration\n    domain_of:\n    - StringificationConfiguration\n    range: boolean\n  syntax:\n    name: syntax\n    examples:\n    - value: json\n    - value: yaml\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: syntax\n    owner: StringificationConfiguration\n    domain_of:\n    - StringificationConfiguration\n    range: SerializationSyntaxType\n\n</code></pre>"},{"location":"Time/","title":"Type: Time","text":"<p>A time object represents a (local) time of day, independent of any particular day</p> <p>URI: xsd:time</p> <ul> <li> <p>base: XSDTime</p> </li> <li> <p>uri: xsd:time</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Time/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Time/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"TransformationSpecification/","title":"Class: TransformationSpecification","text":"<p>A collection of mappings between source and target classes</p> <p>URI: linkmltr:TransformationSpecification</p> <pre><code> classDiagram\n    class TransformationSpecification\n      SpecificationComponent &lt;|-- TransformationSpecification\n\n      TransformationSpecification : class_derivations\n\n          TransformationSpecification --|&gt; ClassDerivation : class_derivations\n\n      TransformationSpecification : comments\n\n      TransformationSpecification : description\n\n          TransformationSpecification --|&gt; None : description\n\n      TransformationSpecification : enum_derivations\n\n          TransformationSpecification --|&gt; EnumDerivation : enum_derivations\n\n      TransformationSpecification : id\n\n          TransformationSpecification --|&gt; None : id\n\n      TransformationSpecification : implements\n\n      TransformationSpecification : prefixes\n\n          TransformationSpecification --|&gt; KeyVal : prefixes\n\n      TransformationSpecification : slot_derivations\n\n          TransformationSpecification --|&gt; SlotDerivation : slot_derivations\n\n      TransformationSpecification : source_schema\n\n          TransformationSpecification --|&gt; None : source_schema\n\n      TransformationSpecification : target_schema\n\n          TransformationSpecification --|&gt; None : target_schema\n\n      TransformationSpecification : title\n\n          TransformationSpecification --|&gt; None : title\n\n\n</code></pre>"},{"location":"TransformationSpecification/#inheritance","title":"Inheritance","text":"<ul> <li>SpecificationComponent<ul> <li>TransformationSpecification</li> </ul> </li> </ul>"},{"location":"TransformationSpecification/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 0..1  String Unique identifier for this transformation specification direct title 0..1  String human readable title for this transformation specification direct prefixes 0..*  KeyVal maps prefixes to URL expansions direct source_schema 0..1  String name of the schema that describes the source (input) objects direct target_schema 0..1  String name of the schema that describes the target (output) objects direct class_derivations 0..*  ClassDerivation Instructions on how to derive a set of classes in the target schema from clas... direct enum_derivations 0..*  EnumDerivation Instructions on how to derive a set of enums in the target schema direct slot_derivations 0..*  SlotDerivation Instructions on how to derive a set of top level slots in the target schema direct description 0..1  String description of the specification component SpecificationComponent implements 0..*  Uriorcurie A reference to a specification that this component implements SpecificationComponent comments 0..*  String A list of comments about this component SpecificationComponent"},{"location":"TransformationSpecification/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"TransformationSpecification/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"TransformationSpecification/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:TransformationSpecification native linkmltr:TransformationSpecification"},{"location":"TransformationSpecification/#linkml-source","title":"LinkML Source","text":""},{"location":"TransformationSpecification/#direct","title":"Direct","text":"<pre><code>name: TransformationSpecification\ndescription: A collection of mappings between source and target classes\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: SpecificationComponent\nattributes:\n  id:\n    name: id\n    description: Unique identifier for this transformation specification\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: schema:identifier\n  title:\n    name: title\n    description: human readable title for this transformation specification\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:title\n  prefixes:\n    name: prefixes\n    description: maps prefixes to URL expansions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: sh:declare\n    multivalued: true\n    range: KeyVal\n    inlined: true\n  source_schema:\n    name: source_schema\n    description: name of the schema that describes the source (input) objects\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  target_schema:\n    name: target_schema\n    description: name of the schema that describes the target (output) objects\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  class_derivations:\n    name: class_derivations\n    description: Instructions on how to derive a set of classes in the target schema\n      from classes in the source schema.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: ClassDerivation\n    inlined: true\n  enum_derivations:\n    name: enum_derivations\n    description: Instructions on how to derive a set of enums in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: EnumDerivation\n    inlined: true\n  slot_derivations:\n    name: slot_derivations\n    description: Instructions on how to derive a set of top level slots in the target\n      schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    range: SlotDerivation\n    inlined: true\ntree_root: true\n\n</code></pre>"},{"location":"TransformationSpecification/#induced","title":"Induced","text":"<pre><code>name: TransformationSpecification\ndescription: A collection of mappings between source and target classes\nfrom_schema: https://w3id.org/linkml/transformer\nis_a: SpecificationComponent\nattributes:\n  id:\n    name: id\n    description: Unique identifier for this transformation specification\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: schema:identifier\n    alias: id\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n  title:\n    name: title\n    description: human readable title for this transformation specification\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:title\n    alias: title\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n  prefixes:\n    name: prefixes\n    description: maps prefixes to URL expansions\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: sh:declare\n    multivalued: true\n    alias: prefixes\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n    range: KeyVal\n    inlined: true\n  source_schema:\n    name: source_schema\n    description: name of the schema that describes the source (input) objects\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: source_schema\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n  target_schema:\n    name: target_schema\n    description: name of the schema that describes the target (output) objects\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: target_schema\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n  class_derivations:\n    name: class_derivations\n    description: Instructions on how to derive a set of classes in the target schema\n      from classes in the source schema.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: class_derivations\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n    range: ClassDerivation\n    inlined: true\n  enum_derivations:\n    name: enum_derivations\n    description: Instructions on how to derive a set of enums in the target schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: enum_derivations\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n    range: EnumDerivation\n    inlined: true\n  slot_derivations:\n    name: slot_derivations\n    description: Instructions on how to derive a set of top level slots in the target\n      schema\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: slot_derivations\n    owner: TransformationSpecification\n    domain_of:\n    - TransformationSpecification\n    - ClassDerivation\n    range: SlotDerivation\n    inlined: true\n  description:\n    name: description\n    description: description of the specification component\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: dcterms:description\n    alias: description\n    owner: TransformationSpecification\n    domain_of:\n    - SpecificationComponent\n    range: string\n  implements:\n    name: implements\n    description: A reference to a specification that this component implements.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    multivalued: true\n    alias: implements\n    owner: TransformationSpecification\n    domain_of:\n    - SpecificationComponent\n    range: uriorcurie\n  comments:\n    name: comments\n    description: A list of comments about this component. Comments are free text,\n      and may be used to provide additional information about the component, including\n      instructions for its use.\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    slot_uri: rdfs:comment\n    multivalued: true\n    alias: comments\n    owner: TransformationSpecification\n    domain_of:\n    - SpecificationComponent\n    range: string\ntree_root: true\n\n</code></pre>"},{"location":"UnitConversionConfiguration/","title":"Class: UnitConversionConfiguration","text":"<p>URI: linkmltr:UnitConversionConfiguration</p> <pre><code> classDiagram\n    class UnitConversionConfiguration\n      UnitConversionConfiguration : source_magnitude_slot\n\n          UnitConversionConfiguration --|&gt; None : source_magnitude_slot\n\n      UnitConversionConfiguration : source_unit\n\n          UnitConversionConfiguration --|&gt; None : source_unit\n\n      UnitConversionConfiguration : source_unit_scheme\n\n      UnitConversionConfiguration : source_unit_slot\n\n          UnitConversionConfiguration --|&gt; None : source_unit_slot\n\n      UnitConversionConfiguration : target_magnitude_slot\n\n          UnitConversionConfiguration --|&gt; None : target_magnitude_slot\n\n      UnitConversionConfiguration : target_unit\n\n          UnitConversionConfiguration --|&gt; None : target_unit\n\n      UnitConversionConfiguration : target_unit_scheme\n\n      UnitConversionConfiguration : target_unit_slot\n\n          UnitConversionConfiguration --|&gt; None : target_unit_slot\n\n\n</code></pre>"},{"location":"UnitConversionConfiguration/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance target_unit 0..1  String direct target_unit_scheme 0..1  String direct source_unit 0..1  String direct source_unit_scheme 0..1  String direct source_unit_slot 0..1  String direct source_magnitude_slot 0..1  String direct target_unit_slot 0..1  String direct target_magnitude_slot 0..1  String direct"},{"location":"UnitConversionConfiguration/#usages","title":"Usages","text":"used by used in type used SlotDerivation unit_conversion range UnitConversionConfiguration"},{"location":"UnitConversionConfiguration/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"UnitConversionConfiguration/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"UnitConversionConfiguration/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkmltr:UnitConversionConfiguration native linkmltr:UnitConversionConfiguration"},{"location":"UnitConversionConfiguration/#linkml-source","title":"LinkML Source","text":""},{"location":"UnitConversionConfiguration/#direct","title":"Direct","text":"<pre><code>name: UnitConversionConfiguration\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  target_unit:\n    name: target_unit\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  target_unit_scheme:\n    name: target_unit_scheme\n    examples:\n    - value: ucum\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: string\n  source_unit:\n    name: source_unit\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  source_unit_scheme:\n    name: source_unit_scheme\n    examples:\n    - value: ucum\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    range: string\n  source_unit_slot:\n    name: source_unit_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  source_magnitude_slot:\n    name: source_magnitude_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  target_unit_slot:\n    name: target_unit_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n  target_magnitude_slot:\n    name: target_magnitude_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n\n</code></pre>"},{"location":"UnitConversionConfiguration/#induced","title":"Induced","text":"<pre><code>name: UnitConversionConfiguration\nfrom_schema: https://w3id.org/linkml/transformer\nattributes:\n  target_unit:\n    name: target_unit\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: target_unit\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n  target_unit_scheme:\n    name: target_unit_scheme\n    examples:\n    - value: ucum\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: target_unit_scheme\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n    range: string\n  source_unit:\n    name: source_unit\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: source_unit\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n  source_unit_scheme:\n    name: source_unit_scheme\n    examples:\n    - value: ucum\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: source_unit_scheme\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n    range: string\n  source_unit_slot:\n    name: source_unit_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: source_unit_slot\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n  source_magnitude_slot:\n    name: source_magnitude_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: source_magnitude_slot\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n  target_unit_slot:\n    name: target_unit_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: target_unit_slot\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n  target_magnitude_slot:\n    name: target_magnitude_slot\n    from_schema: https://w3id.org/linkml/transformer\n    rank: 1000\n    alias: target_magnitude_slot\n    owner: UnitConversionConfiguration\n    domain_of:\n    - UnitConversionConfiguration\n\n</code></pre>"},{"location":"Uri/","title":"Type: Uri","text":"<p>a complete URI</p> <p>URI: xsd:anyURI</p> <ul> <li> <p>base: URI</p> </li> <li> <p>uri: xsd:anyURI</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Uri/#comments","title":"Comments","text":"<ul> <li>in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node</li> </ul>"},{"location":"Uri/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Uri/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"Uriorcurie/","title":"Type: Uriorcurie","text":"<p>a URI or a CURIE</p> <p>URI: xsd:anyURI</p> <ul> <li> <p>base: URIorCURIE</p> </li> <li> <p>uri: xsd:anyURI</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Uriorcurie/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"Uriorcurie/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"about/","title":"LinkML-Transformer","text":""},{"location":"add/","title":"Slot: add","text":"<p>URI: linkmltr:add</p>"},{"location":"add/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot CopyDirective Instructs a Schema Mapper in how to map to a target schema no"},{"location":"add/#properties","title":"Properties","text":"<ul> <li>Range: Any</li> </ul>"},{"location":"add/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"add/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"add/#linkml-source","title":"LinkML Source","text":"<pre><code>name: add\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: add\nowner: CopyDirective\ndomain_of:\n- CopyDirective\nrange: Any\n\n</code></pre>"},{"location":"alias/","title":"Slot: alias","text":"<p>name of the class to be aliased</p> <p>URI: linkmltr:alias</p>"},{"location":"alias/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AliasedClass alias-class key value pairs for classes no"},{"location":"alias/#properties","title":"Properties","text":"<ul> <li> <p>Range: NONE</p> </li> <li> <p>Required: True</p> </li> </ul>"},{"location":"alias/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"alias/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"alias/#linkml-source","title":"LinkML Source","text":"<pre><code>name: alias\ndescription: name of the class to be aliased\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nkey: true\nalias: alias\nowner: AliasedClass\ndomain_of:\n- AliasedClass\nrequired: true\n\n</code></pre>"},{"location":"cast_collection_as/","title":"Slot: cast_collection_as","text":"<p>URI: linkmltr:cast_collection_as</p>"},{"location":"cast_collection_as/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"cast_collection_as/#properties","title":"Properties","text":"<ul> <li>Range: CollectionType</li> </ul>"},{"location":"cast_collection_as/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"cast_collection_as/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"cast_collection_as/#linkml-source","title":"LinkML Source","text":"<pre><code>name: cast_collection_as\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: cast_collection_as\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: CollectionType\n\n</code></pre>"},{"location":"class_derivations/","title":"Slot: class_derivations","text":"<p>Instructions on how to derive a set of classes in the target schema from classes in the source schema.</p> <p>URI: linkmltr:class_derivations</p>"},{"location":"class_derivations/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no"},{"location":"class_derivations/#properties","title":"Properties","text":"<ul> <li> <p>Range: ClassDerivation</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"class_derivations/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"class_derivations/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"class_derivations/#linkml-source","title":"LinkML Source","text":"<pre><code>name: class_derivations\ndescription: Instructions on how to derive a set of classes in the target schema from\n  classes in the source schema.\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: class_derivations\nowner: TransformationSpecification\ndomain_of:\n- TransformationSpecification\nrange: ClassDerivation\ninlined: true\n\n</code></pre>"},{"location":"class_name/","title":"Slot: class_name","text":"<p>URI: linkmltr:class_name</p>"},{"location":"class_name/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Inverse Used for back references in mapping to relational model no"},{"location":"class_name/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"class_name/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"class_name/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"class_name/#linkml-source","title":"LinkML Source","text":"<pre><code>name: class_name\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: class_name\nowner: Inverse\ndomain_of:\n- Inverse\n\n</code></pre>"},{"location":"class_named/","title":"Slot: class_named","text":"<p>local alias for the class</p> <p>URI: linkmltr:class_named</p>"},{"location":"class_named/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AliasedClass alias-class key value pairs for classes no"},{"location":"class_named/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"class_named/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"class_named/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"class_named/#linkml-source","title":"LinkML Source","text":"<pre><code>name: class_named\ndescription: local alias for the class\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: class_named\nowner: AliasedClass\ndomain_of:\n- AliasedClass\n\n</code></pre>"},{"location":"comments/","title":"Slot: comments","text":"<p>A list of comments about this component. Comments are free text, and may be used to provide additional information about the component, including instructions for its use.</p> <p>URI: rdfs:comment</p>"},{"location":"comments/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SpecificationComponent no TransformationSpecification A collection of mappings between source and target classes no ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"comments/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"comments/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"comments/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"comments/#linkml-source","title":"LinkML Source","text":"<pre><code>name: comments\ndescription: A list of comments about this component. Comments are free text, and\n  may be used to provide additional information about the component, including instructions\n  for its use.\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: rdfs:comment\nmultivalued: true\nalias: comments\nowner: SpecificationComponent\ndomain_of:\n- SpecificationComponent\nrange: string\n\n</code></pre>"},{"location":"copy_all/","title":"Slot: copy_all","text":"<p>URI: linkmltr:copy_all</p>"},{"location":"copy_all/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot CopyDirective Instructs a Schema Mapper in how to map to a target schema no"},{"location":"copy_all/#properties","title":"Properties","text":"<ul> <li>Range: Boolean</li> </ul>"},{"location":"copy_all/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"copy_all/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"copy_all/#linkml-source","title":"LinkML Source","text":"<pre><code>name: copy_all\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: copy_all\nowner: CopyDirective\ndomain_of:\n- CopyDirective\nrange: boolean\n\n</code></pre>"},{"location":"copy_directives/","title":"Slot: copy_directives","text":"<p>URI: linkmltr:copy_directives</p>"},{"location":"copy_directives/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"copy_directives/#properties","title":"Properties","text":"<ul> <li> <p>Range: CopyDirective</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"copy_directives/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"copy_directives/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"copy_directives/#linkml-source","title":"LinkML Source","text":"<pre><code>name: copy_directives\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: copy_directives\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: CopyDirective\ninlined: true\n\n</code></pre>"},{"location":"delimiter/","title":"Slot: delimiter","text":"<p>URI: linkmltr:delimiter</p>"},{"location":"delimiter/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot StringificationConfiguration no"},{"location":"delimiter/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"delimiter/#examples","title":"Examples","text":"Value , ;"},{"location":"delimiter/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"delimiter/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"delimiter/#linkml-source","title":"LinkML Source","text":"<pre><code>name: delimiter\nexamples:\n- value: ','\n- value: '|'\n- value: ;\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: delimiter\nowner: StringificationConfiguration\ndomain_of:\n- StringificationConfiguration\nrange: string\n\n</code></pre>"},{"location":"derived_from/","title":"Slot: derived_from","text":"<p>Source slots that are used to derive this slot. This can be computed from the expr, if the expr is declarative.</p> <p>URI: linkmltr:derived_from</p>"},{"location":"derived_from/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"derived_from/#properties","title":"Properties","text":"<ul> <li> <p>Range: SlotReference</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"derived_from/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"derived_from/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"derived_from/#linkml-source","title":"LinkML Source","text":"<pre><code>name: derived_from\ndescription: Source slots that are used to derive this slot. This can be computed\n  from the expr, if the expr is declarative.\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: derived_from\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: SlotReference\n\n</code></pre>"},{"location":"description/","title":"Slot: description","text":"<p>description of the specification component</p> <p>URI: dcterms:description</p>"},{"location":"description/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SpecificationComponent no TransformationSpecification A collection of mappings between source and target classes no ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"description/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"description/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"description/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"description/#linkml-source","title":"LinkML Source","text":"<pre><code>name: description\ndescription: description of the specification component\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: dcterms:description\nalias: description\nowner: SpecificationComponent\ndomain_of:\n- SpecificationComponent\n\n</code></pre>"},{"location":"dictionary_key/","title":"Slot: dictionary_key","text":"<p>URI: linkmltr:dictionary_key</p>"},{"location":"dictionary_key/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"dictionary_key/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"dictionary_key/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"dictionary_key/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"dictionary_key/#linkml-source","title":"LinkML Source","text":"<pre><code>name: dictionary_key\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: dictionary_key\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: string\n\n</code></pre>"},{"location":"element_name/","title":"Slot: element_name","text":"<p>URI: linkmltr:element_name</p>"},{"location":"element_name/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot CopyDirective Instructs a Schema Mapper in how to map to a target schema no"},{"location":"element_name/#properties","title":"Properties","text":"<ul> <li> <p>Range: NONE</p> </li> <li> <p>Required: True</p> </li> </ul>"},{"location":"element_name/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"element_name/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"element_name/#linkml-source","title":"LinkML Source","text":"<pre><code>name: element_name\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nkey: true\nalias: element_name\nowner: CopyDirective\ndomain_of:\n- CopyDirective\nrequired: true\n\n</code></pre>"},{"location":"enum_derivations/","title":"Slot: enum_derivations","text":"<p>Instructions on how to derive a set of enums in the target schema</p> <p>URI: linkmltr:enum_derivations</p>"},{"location":"enum_derivations/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no"},{"location":"enum_derivations/#properties","title":"Properties","text":"<ul> <li> <p>Range: EnumDerivation</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"enum_derivations/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"enum_derivations/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"enum_derivations/#linkml-source","title":"LinkML Source","text":"<pre><code>name: enum_derivations\ndescription: Instructions on how to derive a set of enums in the target schema\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: enum_derivations\nowner: TransformationSpecification\ndomain_of:\n- TransformationSpecification\nrange: EnumDerivation\ninlined: true\n\n</code></pre>"},{"location":"exclude/","title":"Slot: exclude","text":"<p>URI: linkmltr:exclude</p>"},{"location":"exclude/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot CopyDirective Instructs a Schema Mapper in how to map to a target schema no"},{"location":"exclude/#properties","title":"Properties","text":"<ul> <li>Range: Any</li> </ul>"},{"location":"exclude/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"exclude/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"exclude/#linkml-source","title":"LinkML Source","text":"<pre><code>name: exclude\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: exclude\nowner: CopyDirective\ndomain_of:\n- CopyDirective\nrange: Any\n\n</code></pre>"},{"location":"exclude_all/","title":"Slot: exclude_all","text":"<p>URI: linkmltr:exclude_all</p>"},{"location":"exclude_all/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot CopyDirective Instructs a Schema Mapper in how to map to a target schema no"},{"location":"exclude_all/#properties","title":"Properties","text":"<ul> <li>Range: Boolean</li> </ul>"},{"location":"exclude_all/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"exclude_all/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"exclude_all/#linkml-source","title":"LinkML Source","text":"<pre><code>name: exclude_all\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: exclude_all\nowner: CopyDirective\ndomain_of:\n- CopyDirective\nrange: boolean\n\n</code></pre>"},{"location":"expr/","title":"Slot: expr","text":"<p>URI: linkmltr:expr</p>"},{"location":"expr/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no"},{"location":"expr/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"expr/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"expr/#linkml-source","title":"LinkML Source","text":"<pre><code>name: expr\nalias: expr\ndomain_of:\n- SlotDerivation\n- EnumDerivation\n- PermissibleValueDerivation\n\n</code></pre>"},{"location":"expression_to_expression_mappings/","title":"Slot: expression_to_expression_mappings","text":"<p>A mapping table in which the keys and values are expressions</p> <p>URI: linkmltr:expression_to_expression_mappings</p>"},{"location":"expression_to_expression_mappings/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"expression_to_expression_mappings/#properties","title":"Properties","text":"<ul> <li> <p>Range: KeyVal</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"expression_to_expression_mappings/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"expression_to_expression_mappings/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"expression_to_expression_mappings/#linkml-source","title":"LinkML Source","text":"<pre><code>name: expression_to_expression_mappings\ndescription: A mapping table in which the keys and values are expressions\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: expression_to_expression_mappings\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: KeyVal\ninlined: true\n\n</code></pre>"},{"location":"expression_to_value_mappings/","title":"Slot: expression_to_value_mappings","text":"<p>A mapping table in which the keys are expressions</p> <p>URI: linkmltr:expression_to_value_mappings</p>"},{"location":"expression_to_value_mappings/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"expression_to_value_mappings/#properties","title":"Properties","text":"<ul> <li> <p>Range: KeyVal</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"expression_to_value_mappings/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"expression_to_value_mappings/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"expression_to_value_mappings/#linkml-source","title":"LinkML Source","text":"<pre><code>name: expression_to_value_mappings\ndescription: A mapping table in which the keys are expressions\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: expression_to_value_mappings\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: KeyVal\ninlined: true\n\n</code></pre>"},{"location":"hide/","title":"Slot: hide","text":"<p>URI: linkmltr:hide</p>"},{"location":"hide/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no"},{"location":"hide/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"hide/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"hide/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hide\nalias: hide\ndomain_of:\n- SlotDerivation\n- EnumDerivation\n- PermissibleValueDerivation\n\n</code></pre>"},{"location":"id/","title":"Slot: id","text":"<p>Unique identifier for this transformation specification</p> <p>URI: schema:identifier</p>"},{"location":"id/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no"},{"location":"id/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"id/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"id/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"id/#linkml-source","title":"LinkML Source","text":"<pre><code>name: id\ndescription: Unique identifier for this transformation specification\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: schema:identifier\nalias: id\nowner: TransformationSpecification\ndomain_of:\n- TransformationSpecification\n\n</code></pre>"},{"location":"implements/","title":"Slot: implements","text":"<p>A reference to a specification that this component implements.</p> <p>URI: linkmltr:implements</p>"},{"location":"implements/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SpecificationComponent no TransformationSpecification A collection of mappings between source and target classes no ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"implements/#properties","title":"Properties","text":"<ul> <li> <p>Range: Uriorcurie</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"implements/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"implements/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"implements/#linkml-source","title":"LinkML Source","text":"<pre><code>name: implements\ndescription: A reference to a specification that this component implements.\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: implements\nowner: SpecificationComponent\ndomain_of:\n- SpecificationComponent\nrange: uriorcurie\n\n</code></pre>"},{"location":"include/","title":"Slot: include","text":"<p>URI: linkmltr:include</p>"},{"location":"include/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot CopyDirective Instructs a Schema Mapper in how to map to a target schema no"},{"location":"include/#properties","title":"Properties","text":"<ul> <li>Range: Any</li> </ul>"},{"location":"include/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"include/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"include/#linkml-source","title":"LinkML Source","text":"<pre><code>name: include\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: include\nowner: CopyDirective\ndomain_of:\n- CopyDirective\nrange: Any\n\n</code></pre>"},{"location":"inverse_of/","title":"Slot: inverse_of","text":"<p>Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot.</p> <p>URI: linkmltr:inverse_of</p>"},{"location":"inverse_of/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"inverse_of/#properties","title":"Properties","text":"<ul> <li>Range: Inverse</li> </ul>"},{"location":"inverse_of/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"inverse_of/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"inverse_of/#linkml-source","title":"LinkML Source","text":"<pre><code>name: inverse_of\ndescription: Used to specify a class-slot tuple that is the inverse of the derived/target\n  slot. This is used primarily for mapping to relational databases or formalisms that\n  do not allow multiple values. The class representing the repeated element has a\n  foreign key slot inserted in that 'back references' the original multivalued slot.\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: inverse_of\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: Inverse\n\n</code></pre>"},{"location":"is_a/","title":"Slot: is_a","text":"<p>URI: linkml:is_a</p>"},{"location":"is_a/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"is_a/#properties","title":"Properties","text":"<ul> <li>Range: ElementDerivation</li> </ul>"},{"location":"is_a/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"is_a/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"is_a/#linkml-source","title":"LinkML Source","text":"<pre><code>name: is_a\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: linkml:is_a\nalias: is_a\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: ElementDerivation\n\n</code></pre>"},{"location":"joins/","title":"Slot: joins","text":"<p>Additional classes to be joined to derive instances of the target class</p> <p>URI: linkmltr:joins</p>"},{"location":"joins/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ClassDerivation A specification of how to derive a target class from a source class no"},{"location":"joins/#properties","title":"Properties","text":"<ul> <li> <p>Range: AliasedClass</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"joins/#comments","title":"Comments","text":"<ul> <li>not yet implemented</li> </ul>"},{"location":"joins/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"joins/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"joins/#linkml-source","title":"LinkML Source","text":"<pre><code>name: joins\ndescription: Additional classes to be joined to derive instances of the target class\ncomments:\n- not yet implemented\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: joins\nowner: ClassDerivation\ndomain_of:\n- ClassDerivation\nrange: AliasedClass\ninlined: true\n\n</code></pre>"},{"location":"key/","title":"Slot: key","text":"<p>URI: linkmltr:key</p>"},{"location":"key/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot KeyVal no"},{"location":"key/#properties","title":"Properties","text":"<ul> <li> <p>Range: NONE</p> </li> <li> <p>Required: True</p> </li> </ul>"},{"location":"key/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"key/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"key/#linkml-source","title":"LinkML Source","text":"<pre><code>name: key\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nkey: true\nalias: key\nowner: KeyVal\ndomain_of:\n- KeyVal\nrequired: true\n\n</code></pre>"},{"location":"mirror_source/","title":"Slot: mirror_source","text":"<p>URI: linkmltr:mirror_source</p>"},{"location":"mirror_source/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"mirror_source/#properties","title":"Properties","text":"<ul> <li>Range: Boolean</li> </ul>"},{"location":"mirror_source/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"mirror_source/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"mirror_source/#linkml-source","title":"LinkML Source","text":"<pre><code>name: mirror_source\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: mirror_source\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: boolean\n\n</code></pre>"},{"location":"mixins/","title":"Slot: mixins","text":"<p>URI: linkml:mixins</p>"},{"location":"mixins/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"mixins/#properties","title":"Properties","text":"<ul> <li> <p>Range: ElementDerivation</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"mixins/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"mixins/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"mixins/#linkml-source","title":"LinkML Source","text":"<pre><code>name: mixins\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: linkml:mixins\nmultivalued: true\nalias: mixins\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: ElementDerivation\ninlined: false\n\n</code></pre>"},{"location":"name/","title":"Slot: name","text":"<p>URI: linkmltr:name</p>"},{"location":"name/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"name/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"name/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"name/#linkml-source","title":"LinkML Source","text":"<pre><code>name: name\nalias: name\ndomain_of:\n- ElementDerivation\n- SlotDerivation\n- EnumDerivation\n- PermissibleValueDerivation\n\n</code></pre>"},{"location":"overrides/","title":"Slot: overrides","text":"<p>overrides source schema slots</p> <p>URI: linkmltr:overrides</p>"},{"location":"overrides/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"overrides/#properties","title":"Properties","text":"<ul> <li>Range: Any</li> </ul>"},{"location":"overrides/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"overrides/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"overrides/#linkml-source","title":"LinkML Source","text":"<pre><code>name: overrides\ndescription: overrides source schema slots\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: overrides\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: Any\n\n</code></pre>"},{"location":"permissible_value_derivations/","title":"Slot: permissible_value_derivations","text":"<p>Instructions on how to derive a set of PVs in the target schema</p> <p>URI: linkmltr:permissible_value_derivations</p>"},{"location":"permissible_value_derivations/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot EnumDerivation A specification of how to derive the value of a target enum from a source enu... no"},{"location":"permissible_value_derivations/#properties","title":"Properties","text":"<ul> <li> <p>Range: PermissibleValueDerivation</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"permissible_value_derivations/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"permissible_value_derivations/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"permissible_value_derivations/#linkml-source","title":"LinkML Source","text":"<pre><code>name: permissible_value_derivations\ndescription: Instructions on how to derive a set of PVs in the target schema\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: permissible_value_derivations\nowner: EnumDerivation\ndomain_of:\n- EnumDerivation\nrange: PermissibleValueDerivation\ninlined: true\n\n</code></pre>"},{"location":"populated_from/","title":"Slot: populated_from","text":"<p>URI: linkmltr:populated_from</p>"},{"location":"populated_from/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no"},{"location":"populated_from/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"populated_from/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"populated_from/#linkml-source","title":"LinkML Source","text":"<pre><code>name: populated_from\nalias: populated_from\ndomain_of:\n- ClassDerivation\n- SlotDerivation\n- EnumDerivation\n- PermissibleValueDerivation\n\n</code></pre>"},{"location":"prefixes/","title":"Slot: prefixes","text":"<p>maps prefixes to URL expansions</p> <p>URI: sh:declare</p>"},{"location":"prefixes/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no"},{"location":"prefixes/#properties","title":"Properties","text":"<ul> <li> <p>Range: KeyVal</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"prefixes/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"prefixes/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"prefixes/#linkml-source","title":"LinkML Source","text":"<pre><code>name: prefixes\ndescription: maps prefixes to URL expansions\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: sh:declare\nmultivalued: true\nalias: prefixes\nowner: TransformationSpecification\ndomain_of:\n- TransformationSpecification\nrange: KeyVal\ninlined: true\n\n</code></pre>"},{"location":"range/","title":"Slot: range","text":"<p>URI: linkml:range</p>"},{"location":"range/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"range/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"range/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"range/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"range/#linkml-source","title":"LinkML Source","text":"<pre><code>name: range\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: linkml:range\nalias: range\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: string\n\n</code></pre>"},{"location":"reversed/","title":"Slot: reversed","text":"<p>URI: linkmltr:reversed</p>"},{"location":"reversed/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot StringificationConfiguration no"},{"location":"reversed/#properties","title":"Properties","text":"<ul> <li>Range: Boolean</li> </ul>"},{"location":"reversed/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"reversed/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"reversed/#linkml-source","title":"LinkML Source","text":"<pre><code>name: reversed\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: reversed\nowner: StringificationConfiguration\ndomain_of:\n- StringificationConfiguration\nrange: boolean\n\n</code></pre>"},{"location":"slot_derivations/","title":"Slot: slot_derivations","text":"<p>URI: linkmltr:slot_derivations</p>"},{"location":"slot_derivations/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no ClassDerivation A specification of how to derive a target class from a source class no"},{"location":"slot_derivations/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"slot_derivations/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"slot_derivations/#linkml-source","title":"LinkML Source","text":"<pre><code>name: slot_derivations\nalias: slot_derivations\ndomain_of:\n- TransformationSpecification\n- ClassDerivation\n\n</code></pre>"},{"location":"slot_name/","title":"Slot: slot_name","text":"<p>URI: linkmltr:slot_name</p>"},{"location":"slot_name/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Inverse Used for back references in mapping to relational model no"},{"location":"slot_name/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"slot_name/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"slot_name/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"slot_name/#linkml-source","title":"LinkML Source","text":"<pre><code>name: slot_name\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: slot_name\nowner: Inverse\ndomain_of:\n- Inverse\n\n</code></pre>"},{"location":"source_magnitude_slot/","title":"Slot: source_magnitude_slot","text":"<p>URI: linkmltr:source_magnitude_slot</p>"},{"location":"source_magnitude_slot/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"source_magnitude_slot/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"source_magnitude_slot/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"source_magnitude_slot/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"source_magnitude_slot/#linkml-source","title":"LinkML Source","text":"<pre><code>name: source_magnitude_slot\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: source_magnitude_slot\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\n\n</code></pre>"},{"location":"source_schema/","title":"Slot: source_schema","text":"<p>name of the schema that describes the source (input) objects</p> <p>URI: linkmltr:source_schema</p>"},{"location":"source_schema/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no"},{"location":"source_schema/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"source_schema/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"source_schema/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"source_schema/#linkml-source","title":"LinkML Source","text":"<pre><code>name: source_schema\ndescription: name of the schema that describes the source (input) objects\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: source_schema\nowner: TransformationSpecification\ndomain_of:\n- TransformationSpecification\n\n</code></pre>"},{"location":"source_unit/","title":"Slot: source_unit","text":"<p>URI: linkmltr:source_unit</p>"},{"location":"source_unit/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"source_unit/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"source_unit/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"source_unit/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"source_unit/#linkml-source","title":"LinkML Source","text":"<pre><code>name: source_unit\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: source_unit\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\n\n</code></pre>"},{"location":"source_unit_scheme/","title":"Slot: source_unit_scheme","text":"<p>URI: linkmltr:source_unit_scheme</p>"},{"location":"source_unit_scheme/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"source_unit_scheme/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"source_unit_scheme/#examples","title":"Examples","text":"Value ucum"},{"location":"source_unit_scheme/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"source_unit_scheme/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"source_unit_scheme/#linkml-source","title":"LinkML Source","text":"<pre><code>name: source_unit_scheme\nexamples:\n- value: ucum\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: source_unit_scheme\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\nrange: string\n\n</code></pre>"},{"location":"source_unit_slot/","title":"Slot: source_unit_slot","text":"<p>URI: linkmltr:source_unit_slot</p>"},{"location":"source_unit_slot/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"source_unit_slot/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"source_unit_slot/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"source_unit_slot/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"source_unit_slot/#linkml-source","title":"LinkML Source","text":"<pre><code>name: source_unit_slot\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: source_unit_slot\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\n\n</code></pre>"},{"location":"sources/","title":"Slot: sources","text":"<p>URI: linkmltr:sources</p>"},{"location":"sources/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no"},{"location":"sources/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"sources/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"sources/#linkml-source","title":"LinkML Source","text":"<pre><code>name: sources\nalias: sources\ndomain_of:\n- ClassDerivation\n- SlotDerivation\n- EnumDerivation\n- PermissibleValueDerivation\n\n</code></pre>"},{"location":"stringification/","title":"Slot: stringification","text":"<p>URI: linkmltr:stringification</p>"},{"location":"stringification/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"stringification/#properties","title":"Properties","text":"<ul> <li>Range: StringificationConfiguration</li> </ul>"},{"location":"stringification/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"stringification/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"stringification/#linkml-source","title":"LinkML Source","text":"<pre><code>name: stringification\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: stringification\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: StringificationConfiguration\n\n</code></pre>"},{"location":"syntax/","title":"Slot: syntax","text":"<p>URI: linkmltr:syntax</p>"},{"location":"syntax/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot StringificationConfiguration no"},{"location":"syntax/#properties","title":"Properties","text":"<ul> <li>Range: SerializationSyntaxType</li> </ul>"},{"location":"syntax/#examples","title":"Examples","text":"Value json yaml"},{"location":"syntax/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"syntax/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"syntax/#linkml-source","title":"LinkML Source","text":"<pre><code>name: syntax\nexamples:\n- value: json\n- value: yaml\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: syntax\nowner: StringificationConfiguration\ndomain_of:\n- StringificationConfiguration\nrange: SerializationSyntaxType\n\n</code></pre>"},{"location":"target_magnitude_slot/","title":"Slot: target_magnitude_slot","text":"<p>URI: linkmltr:target_magnitude_slot</p>"},{"location":"target_magnitude_slot/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"target_magnitude_slot/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"target_magnitude_slot/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"target_magnitude_slot/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"target_magnitude_slot/#linkml-source","title":"LinkML Source","text":"<pre><code>name: target_magnitude_slot\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: target_magnitude_slot\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\n\n</code></pre>"},{"location":"target_schema/","title":"Slot: target_schema","text":"<p>name of the schema that describes the target (output) objects</p> <p>URI: linkmltr:target_schema</p>"},{"location":"target_schema/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no"},{"location":"target_schema/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"target_schema/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"target_schema/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"target_schema/#linkml-source","title":"LinkML Source","text":"<pre><code>name: target_schema\ndescription: name of the schema that describes the target (output) objects\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: target_schema\nowner: TransformationSpecification\ndomain_of:\n- TransformationSpecification\n\n</code></pre>"},{"location":"target_unit/","title":"Slot: target_unit","text":"<p>URI: linkmltr:target_unit</p>"},{"location":"target_unit/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"target_unit/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"target_unit/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"target_unit/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"target_unit/#linkml-source","title":"LinkML Source","text":"<pre><code>name: target_unit\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: target_unit\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\n\n</code></pre>"},{"location":"target_unit_scheme/","title":"Slot: target_unit_scheme","text":"<p>URI: linkmltr:target_unit_scheme</p>"},{"location":"target_unit_scheme/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"target_unit_scheme/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"target_unit_scheme/#examples","title":"Examples","text":"Value ucum"},{"location":"target_unit_scheme/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"target_unit_scheme/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"target_unit_scheme/#linkml-source","title":"LinkML Source","text":"<pre><code>name: target_unit_scheme\nexamples:\n- value: ucum\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: target_unit_scheme\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\nrange: string\n\n</code></pre>"},{"location":"target_unit_slot/","title":"Slot: target_unit_slot","text":"<p>URI: linkmltr:target_unit_slot</p>"},{"location":"target_unit_slot/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot UnitConversionConfiguration no"},{"location":"target_unit_slot/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"target_unit_slot/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"target_unit_slot/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"target_unit_slot/#linkml-source","title":"LinkML Source","text":"<pre><code>name: target_unit_slot\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: target_unit_slot\nowner: UnitConversionConfiguration\ndomain_of:\n- UnitConversionConfiguration\n\n</code></pre>"},{"location":"title/","title":"Slot: title","text":"<p>human readable title for this transformation specification</p> <p>URI: dcterms:title</p>"},{"location":"title/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot TransformationSpecification A collection of mappings between source and target classes no"},{"location":"title/#properties","title":"Properties","text":"<ul> <li>Range: NONE</li> </ul>"},{"location":"title/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"title/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"title/#linkml-source","title":"LinkML Source","text":"<pre><code>name: title\ndescription: human readable title for this transformation specification\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nslot_uri: dcterms:title\nalias: title\nowner: TransformationSpecification\ndomain_of:\n- TransformationSpecification\n\n</code></pre>"},{"location":"transformer/","title":"transformer","text":"<p>Datamodel for LinkML schema transformations.</p> <p>A transformer generates instances of a target data model from instances of a source data model. This transformation process is guided by a TransformationSpecification.</p> <p>The specification is independent of any one method for transforming data. It allows different approaches, including:</p> <ul> <li>direct implementation, transforming python or json objects</li> <li>translation of the specification into SQL commands, to operate on relations</li> <li>translation of the specification into SPARQL CONSTRUCTs, to operate on triples</li> <li>translation into another specification language, such as R2RML</li> </ul> <p>URI: https://w3id.org/linkml/transformer</p>"},{"location":"type_designator/","title":"Slot: type_designator","text":"<p>URI: linkmltr:type_designator</p>"},{"location":"type_designator/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"type_designator/#properties","title":"Properties","text":"<ul> <li>Range: Boolean</li> </ul>"},{"location":"type_designator/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"type_designator/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"type_designator/#linkml-source","title":"LinkML Source","text":"<pre><code>name: type_designator\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: type_designator\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: boolean\n\n</code></pre>"},{"location":"unit_conversion/","title":"Slot: unit_conversion","text":"<p>URI: linkmltr:unit_conversion</p>"},{"location":"unit_conversion/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot SlotDerivation A specification of how to derive the value of a target slot from a source slo... no"},{"location":"unit_conversion/#properties","title":"Properties","text":"<ul> <li>Range: UnitConversionConfiguration</li> </ul>"},{"location":"unit_conversion/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"unit_conversion/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"unit_conversion/#linkml-source","title":"LinkML Source","text":"<pre><code>name: unit_conversion\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: unit_conversion\nowner: SlotDerivation\ndomain_of:\n- SlotDerivation\nrange: UnitConversionConfiguration\n\n</code></pre>"},{"location":"value/","title":"Slot: value","text":"<p>URI: linkmltr:value</p>"},{"location":"value/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot KeyVal no"},{"location":"value/#properties","title":"Properties","text":"<ul> <li>Range: Any</li> </ul>"},{"location":"value/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"value/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"value/#linkml-source","title":"LinkML Source","text":"<pre><code>name: value\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nalias: value\nowner: KeyVal\ndomain_of:\n- KeyVal\nrange: Any\n\n</code></pre>"},{"location":"value_mappings/","title":"Slot: value_mappings","text":"<p>A mapping table that is applied directly to mappings, in order of precedence</p> <p>URI: linkmltr:value_mappings</p>"},{"location":"value_mappings/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot ElementDerivation An abstract grouping for classes that provide a specification of how to  deri... no ClassDerivation A specification of how to derive a target class from a source class no SlotDerivation A specification of how to derive the value of a target slot from a source slo... no EnumDerivation A specification of how to derive the value of a target enum from a source enu... no PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum no PrefixDerivation no"},{"location":"value_mappings/#properties","title":"Properties","text":"<ul> <li> <p>Range: KeyVal</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"value_mappings/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"value_mappings/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://w3id.org/linkml/transformer</li> </ul>"},{"location":"value_mappings/#linkml-source","title":"LinkML Source","text":"<pre><code>name: value_mappings\ndescription: A mapping table that is applied directly to mappings, in order of precedence\nfrom_schema: https://w3id.org/linkml/transformer\nrank: 1000\nmultivalued: true\nalias: value_mappings\nowner: ElementDerivation\ndomain_of:\n- ElementDerivation\nrange: KeyVal\ninlined: true\n\n</code></pre>"},{"location":"specification/compliance/","title":"Compliance Suite","text":"<ul> <li>LinkML-Transformers Compliance     Suite<ul> <li>Feature Set: test_map_types</li> <li>Feature Set:     test_map_collections</li> <li>Feature Set: test_expr</li> <li>Feature Set:     test_simple_unit_conversion</li> <li>Feature Set:     test_complex_unit_conversion</li> <li>Feature Set: test_stringify</li> <li>Feature Set: test_isomorphic</li> <li>Feature Set: test_join</li> <li>Feature Set: test_map_enum</li> <li>Feature Set: test_inheritance</li> </ul> </li> </ul>"},{"location":"specification/compliance/#linkml-transformers-compliance-suite","title":"LinkML-Transformers Compliance Suite","text":"<p>This is the output from running the full compliance test suite.</p> <p>It is organized into Feature Sets that test a particular feature or group of features, and combinations of different schemas, input objects, and transformation specifications. This is intended to exhaustively test all combinations of features, and provide informative output.</p> <p>Each test is designed to demonstrate:</p> <ul> <li>data mapping (transformation)</li> <li>derived schemas</li> <li>inversion (reverse transformation) (in some cases)</li> <li>compliation to other frameworks (coming soon)</li> </ul>"},{"location":"specification/compliance/#feature-set-test_map_types","title":"Feature Set: test_map_types","text":"<p>Test mapping between basic data types.</p> <p>This test uses an ultra-minimal schema with a single class and a single attribute, the transformation specification maps that attribute onto itself, with a different type, demonstrating type coercion.</p> <p>Some cases will be trivially isomorphic (where <code>source_datatype</code> == <code>target_datatype</code>), but these are executed anyway.</p> <ul> <li>source_datatype: linkml datatype of source object</li> <li>target_datatype: linkml datatype of target object</li> <li>source_value: value of source object</li> <li>target_value: expected value of slot in target object</li> <li>invertible: True if the transformation is invertible</li> </ul>"},{"location":"specification/compliance/#combo-test_map_typesstring-string-foo-foo-true","title":"Combo: test_map_types[string-string-foo-foo-True]","text":"<p>Mapping <code>string</code> =&gt; <code>string</code></p> <p>Isomorphic mapping: input should equal output</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: string\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: foo\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: foo\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: string\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_typesinteger-integer-5-5-true","title":"Combo: test_map_types[integer-integer-5-5-True]","text":"<p>Mapping <code>integer</code> =&gt; <code>integer</code></p> <p>Isomorphic mapping: input should equal output</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: integer\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: integer\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_typesstring-integer-5-5-true","title":"Combo: test_map_types[string-integer-5-5-True]","text":"<p>Mapping <code>string</code> =&gt; <code>integer</code></p> <p>Should coerce datatype</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: integer\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: '5'\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: string\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_typesinteger-float-5-50-true-combo-test_map_typesinteger-float-5-50-true","title":"Combo: test_map_types[integer-float-5-5.0-True] {#combo-test_map_typesinteger-float-5-50-true}","text":"<p>Mapping <code>integer</code> =&gt; <code>float</code></p> <p>Should coerce datatype</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: float\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 5.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: integer\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_typesfloat-integer-50-5-true-combo-test_map_typesfloat-integer-50-5-true","title":"Combo: test_map_types[float-integer-5.0-5-True] {#combo-test_map_typesfloat-integer-50-5-true}","text":"<p>Mapping <code>float</code> =&gt; <code>integer</code></p> <p>Should coerce datatype</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: integer\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: float\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_typesfloat-integer-52-5-false-combo-test_map_typesfloat-integer-52-5-false","title":"Combo: test_map_types[float-integer-5.2-5-False] {#combo-test_map_typesfloat-integer-52-5-false}","text":"<p>Mapping <code>float</code> =&gt; <code>integer</code></p> <p>Should coerce datatype</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: integer\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5.2\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_typesinteger-boolean-5-true-false","title":"Combo: test_map_types[integer-boolean-5-True-False]","text":"<p>Mapping <code>integer</code> =&gt; <code>boolean</code></p> <p>Should coerce datatype</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: boolean\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: true\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: boolean\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_typesinteger-boolean-0-false-false","title":"Combo: test_map_types[integer-boolean-0-False-False]","text":"<p>Mapping <code>integer</code> =&gt; <code>boolean</code></p> <p>Should coerce datatype</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Minimal single-attribute schema for testing datatype mapping\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        range: boolean\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: false\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: boolean\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_map_collections","title":"Feature Set: test_map_collections","text":"<p>Test mapping between collection data types (lists and dicts).</p> <p>This makes use of the <code>cast_collection_as</code> construct</p> <ul> <li>source_datatype:</li> <li>target_datatype:</li> <li>source_value:</li> <li>target_value:</li> <li>invertible:</li> </ul>"},{"location":"specification/compliance/#combo-test_map_collectionsstring-string-source_value0-target_value0-true","title":"Combo: test_map_collections[string-string-source_value0-target_value0-True]","text":"<p>Mapping <code>string</code> =&gt; <code>string</code></p> <p>Isomorphic mapping: input should equal output</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Mapping between collection types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      ds:\n        name: ds\n        multivalued: true\n        range: D\n        inlined: true\n        inlined_as_list: true\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      id:\n        name: id\n        identifier: true\n      s1:\n        name: s1\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      ds:\n        name: ds\n        populated_from: ds\n        cast_collection_as: MultiValuedDict\n        dictionary_key: id\n  D:\n    name: D\n    slot_derivations:\n      id:\n        name: id\n        populated_from: id\n      s1:\n        name: s1\n        populated_from: s1\n        range: string\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>ds:\n- id: X\n  s1: foo\n- id: Y\n  s1: bar\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>ds:\n  X:\n    s1: foo\n  Y:\n    s1: bar\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      ds:\n        name: ds\n        multivalued: true\n        range: D\n        inlined: true\n        inlined_as_list: false\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      id:\n        name: id\n        identifier: true\n        required: true\n      s1:\n        name: s1\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      ds:\n        name: ds\n        populated_from: ds\n        cast_collection_as: MultiValuedList\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      id:\n        name: id\n        populated_from: id\n      s1:\n        name: s1\n        populated_from: s1\n        range: string\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_collectionsstring-string-source_value1-target_value1-true","title":"Combo: test_map_collections[string-string-source_value1-target_value1-True]","text":"<p>Mapping <code>string</code> =&gt; <code>string</code></p> <p>Isomorphic mapping: input should equal output</p> <p>Source Schema:</p> <pre><code>name: types\ndescription: Mapping between collection types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      ds:\n        name: ds\n        multivalued: true\n        range: D\n        inlined: true\n        inlined_as_list: false\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      id:\n        name: id\n        identifier: true\n      s1:\n        name: s1\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      ds:\n        name: ds\n        populated_from: ds\n        cast_collection_as: MultiValuedList\n  D:\n    name: D\n    slot_derivations:\n      id:\n        name: id\n        populated_from: id\n      s1:\n        name: s1\n        populated_from: s1\n        range: string\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>ds:\n  X:\n    s1: foo\n  Y:\n    s1: bar\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>ds:\n- id: X\n  s1: foo\n- id: Y\n  s1: bar\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      ds:\n        name: ds\n        multivalued: true\n        range: D\n        inlined: true\n        inlined_as_list: true\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      id:\n        name: id\n        identifier: true\n        required: true\n      s1:\n        name: s1\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      ds:\n        name: ds\n        populated_from: ds\n        cast_collection_as: MultiValuedDict\n        dictionary_key: id\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      id:\n        name: id\n        populated_from: id\n      s1:\n        name: s1\n        populated_from: s1\n        range: string\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_expr","title":"Feature Set: test_expr","text":"<p>Test transformation using pythonic expressions.</p> <p>This test uses a simple source schema with two slots (<code>s1</code> and <code>s2</code>). These are combined using a pythonic expression, to populate the only slot in the target schema (called <code>derived</code>).</p> <p>The values of <code>s1</code> and <code>s2</code> can be numbers or strings.</p> <p>If the expression wraps a slot in <code>{...}</code> then the presence of a None forces the entire expression to be <code>None</code></p> <p>Limitations: At this time, the framework cannot generate a complete derived schema or inversion for expressions. This will be fixed in future.</p> <ul> <li>expr: pythonic expression</li> <li>source_object: source object</li> <li>target_value: expected value of slot in target object</li> </ul>"},{"location":"specification/compliance/#combo-test_exprs1-s2-source_object0-11-combo-test_exprs1-s2-source_object0-11","title":"Combo: test_expr[s1 + s2-source_object0-11] {#combo-test_exprs1--s2-source_object0-11}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n      s2:\n        name: s2\n        range: integer\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: s1 + s2\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\ns2: 6\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived: 11\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprs1-s2-source_object1-11-combo-test_exprs1-s2-source_object1-11","title":"Combo: test_expr[{s1} + {s2}-source_object1-11] {#combo-test_exprs1--s2-source_object1-11}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n      s2:\n        name: s2\n        range: integer\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: '{s1} + {s2}'\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\ns2: 6\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived: 11\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprs1-s2-source_object2-none-combo-test_exprs1-s2-source_object2-none","title":"Combo: test_expr[{s1} + {s2}-source_object2-None] {#combo-test_exprs1--s2-source_object2-none}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: '{s1} + {s2}'\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>{}\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprs1-s2s3-source_object3-11-combo-test_exprs1-s2s3-source_object3-11","title":"Combo: test_expr[s1 + s2.s3-source_object3-11] {#combo-test_exprs1--s2s3-source_object3-11}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n      s2:\n        name: s2\n        range: D\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s3:\n        name: s3\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: s1 + s2.s3\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\ns2:\n  s3: 6\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived: 11\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprs1-s2s3s4-source_object4-11-combo-test_exprs1-s2s3s4-source_object4-11","title":"Combo: test_expr[s1 + s2.s3.s4-source_object4-11] {#combo-test_exprs1--s2s3s4-source_object4-11}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n      s2:\n        name: s2\n        range: D\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s4:\n        name: s4\n        range: integer\n      s3:\n        name: s3\n        range: D\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: s1 + s2.s3.s4\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\ns2:\n  s3:\n    s4: 6\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived: 11\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprs1-s2-source_object5-ab-combo-test_exprs1-s2-source_object5-ab","title":"Combo: test_expr[s1 + s2-source_object5-ab] {#combo-test_exprs1--s2-source_object5-ab}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n      s2:\n        name: s2\n        range: string\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: s1 + s2\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: a\ns2: b\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived: ab\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprs1-s2-source_object6-target_value6-combo-test_exprs1-s2-source_object6-target_value6","title":"Combo: test_expr[s1 + s2-source_object6-target_value6] {#combo-test_exprs1--s2-source_object6-target_value6}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n      s2:\n        name: s2\n        multivalued: true\n        range: string\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: s1 + s2\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n- a\ns2:\n- b\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived:\n- a\n- b\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprlens1-source_object7-1","title":"Combo: test_expr[len(s1)-source_object7-1]","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: len(s1)\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n- a\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived: 1\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_exprs1-s2-source_object8-true-combo-test_exprs1-s2-source_object8-true","title":"Combo: test_expr[s1 \\&lt; s2-source_object8-True] {#combo-test_exprs1--s2-source_object8-true}","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n      s2:\n        name: s2\n        range: integer\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      derived:\n        name: derived\n        expr: s1 &lt; s2\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 5\ns2: 6\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>derived: true\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      derived:\n        name: derived\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_simple_unit_conversion","title":"Feature Set: test_simple_unit_conversion","text":"<p>Test unit conversion.</p> <p>This test uses a simple source schema with a single class and a single attribute, where the attribute is described using the units metaslot.</p> <p>The recommended way to describe unit slots in LinkML is with UCUM, but a number of other schemes can be used. We explicitly test for some known cases where UCUM uses non-standard units (e.g. Cel, mo), as well as UCUM-specific syntax (e.g. <code>m.s-1</code>) and extensions (e.g. using annotations like <code>{Cre}</code>).</p> <p>Developers note: to run this test, the units extension should be installed:</p> <p><code>poetry install -E units</code></p> <p>This installs the <code>pint</code> framework.</p> <ul> <li>source_slot: name of slot in source schema</li> <li>target_slot: name of slot in target schema</li> <li>source_unit: unit of source slot</li> <li>target_unit: unit of target slot</li> <li>source_value: magnitude of source slot (to be converted)</li> <li>target_value: expected magnitude of target slot (output of     conversion)</li> <li>err:</li> </ul>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-m-cm-ucum_code-10-1000-none-none-combo-test_simple_unit_conversions1-s1-m-cm-ucum_code-10-1000-none-none","title":"Combo: test_simple_unit_conversion[s1-s1-m-cm-ucum_code-1.0-100.0-None-None] {#combo-test_simple_unit_conversions1-s1-m-cm-ucum_code-10-1000-none-none}","text":"<p>Unit Conversion: 1.0 <code>m</code> =&gt; 100.0 <code>cm [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: cm\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 100.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: cm\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m\n          target_unit_scheme: ucum_code\n          source_unit: cm\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-m-cm-symbol-10-1000-none-none-combo-test_simple_unit_conversions1-s1-m-cm-symbol-10-1000-none-none","title":"Combo: test_simple_unit_conversion[s1-s1-m-cm-symbol-1.0-100.0-None-None] {#combo-test_simple_unit_conversions1-s1-m-cm-symbol-10-1000-none-none}","text":"<p>Unit Conversion: 1.0 <code>m</code> =&gt; 100.0 <code>cm [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          symbol: m\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: cm\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 100.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: cm\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m\n          target_unit_scheme: symbol\n          source_unit: cm\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-m-m-ucum_code-10-10-none-none-combo-test_simple_unit_conversions1-s1-m-m-ucum_code-10-10-none-none","title":"Combo: test_simple_unit_conversion[s1-s1-m-m-ucum_code-1.0-1.0-None-None] {#combo-test_simple_unit_conversions1-s1-m-m-ucum_code-10-10-none-none}","text":"<p>Unit Conversion: 1.0 <code>m</code> =&gt; 1.0 <code>m [with s1]</code></p> <p>Isomorphic mapping: input should equal output Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m\n          target_unit_scheme: ucum_code\n          source_unit: m\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-a-mo-ucum_code-100-1200-none-none-combo-test_simple_unit_conversions1-s1-a-mo-ucum_code-100-1200-none-none","title":"Combo: test_simple_unit_conversion[s1-s1-a-mo-ucum_code-10.0-120.0-None-None] {#combo-test_simple_unit_conversions1-s1-a-mo-ucum_code-100-1200-none-none}","text":"<p>Unit Conversion: 10.0 <code>a</code> =&gt; 120.0 <code>mo [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: a\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: mo\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 10.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 120.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: mo\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: a\n          target_unit_scheme: ucum_code\n          source_unit: mo\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-a-mo-symbol-100-none-undefineduniterror-none-combo-test_simple_unit_conversions1-s1-a-mo-symbol-100-none-undefineduniterror-none","title":"Combo: test_simple_unit_conversion[s1-s1-a-mo-symbol-10.0-None-UndefinedUnitError-None] {#combo-test_simple_unit_conversions1-s1-a-mo-symbol-100-none-undefineduniterror-none}","text":"<p>Unit Conversion: 10.0 <code>a</code> =&gt; None <code>mo [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          symbol: a\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: mo\n\n</code></pre> <p>Object Transformation:</p> <p>Expected Error: UndefinedUnitError</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 10.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>null\n...\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: mo\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-m-ml-ucum_code-10-none-dimensionalityerror-none-combo-test_simple_unit_conversions1-s1-m-ml-ucum_code-10-none-dimensionalityerror-none","title":"Combo: test_simple_unit_conversion[s1-s1-m-ml-ucum_code-1.0-None-DimensionalityError-None] {#combo-test_simple_unit_conversions1-s1-m-ml-ucum_code-10-none-dimensionalityerror-none}","text":"<p>Unit Conversion: 1.0 <code>m</code> =&gt; None <code>ml [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: ml\n\n</code></pre> <p>Object Transformation:</p> <p>Expected Error: DimensionalityError</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>null\n...\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: ml\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-m-pinknoodles-ucum_code-10-none-undefineduniterror-none-combo-test_simple_unit_conversions1-s1-m-pinknoodles-ucum_code-10-none-undefineduniterror-none","title":"Combo: test_simple_unit_conversion[s1-s1-m-pinknoodles-ucum_code-1.0-None-UndefinedUnitError-None] {#combo-test_simple_unit_conversions1-s1-m-pinknoodles-ucum_code-10-none-undefineduniterror-none}","text":"<p>Unit Conversion: 1.0 <code>m</code> =&gt; None <code>pinknoodles [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: pinknoodles\n\n</code></pre> <p>Object Transformation:</p> <p>Expected Error: UndefinedUnitError</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>null\n...\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: pinknoodles\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-ml-m-ucum_code-10-none-dimensionalityerror-none-combo-test_simple_unit_conversions1-s1-ml-m-ucum_code-10-none-dimensionalityerror-none","title":"Combo: test_simple_unit_conversion[s1-s1-ml-m-ucum_code-1.0-None-DimensionalityError-None] {#combo-test_simple_unit_conversions1-s1-ml-m-ucum_code-10-none-dimensionalityerror-none}","text":"<p>Unit Conversion: 1.0 <code>ml</code> =&gt; None <code>m [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: ml\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m\n\n</code></pre> <p>Object Transformation:</p> <p>Expected Error: DimensionalityError</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>null\n...\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-pinknoodles-m-ucum_code-10-none-undefineduniterror-none-combo-test_simple_unit_conversions1-s1-pinknoodles-m-ucum_code-10-none-undefineduniterror-none","title":"Combo: test_simple_unit_conversion[s1-s1-pinknoodles-m-ucum_code-1.0-None-UndefinedUnitError-None] {#combo-test_simple_unit_conversions1-s1-pinknoodles-m-ucum_code-10-none-undefineduniterror-none}","text":"<p>Unit Conversion: 1.0 <code>pinknoodles</code> =&gt; None <code>m [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: pinknoodles\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m\n\n</code></pre> <p>Object Transformation:</p> <p>Expected Error: UndefinedUnitError</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>null\n...\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-ms-cms-ucum_code-10-1000-none-none-combo-test_simple_unit_conversions1-s1-ms-cms-ucum_code-10-1000-none-none","title":"Combo: test_simple_unit_conversion[s1-s1-m/s-cm/s-ucum_code-1.0-100.0-None-None] {#combo-test_simple_unit_conversions1-s1-ms-cms-ucum_code-10-1000-none-none}","text":"<p>Unit Conversion: 1.0 <code>m/s</code> =&gt; 100.0 <code>cm/s [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m/s\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: cm/s\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 100.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: cm/s\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m/s\n          target_unit_scheme: ucum_code\n          source_unit: cm/s\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-ms-1-cms-1-ucum_code-10-1000-none-none-combo-test_simple_unit_conversions1-s1-ms-1-cms-1-ucum_code-10-1000-none-none","title":"Combo: test_simple_unit_conversion[s1-s1-m.s-1-cm.s-1-ucum_code-1.0-100.0-None-None] {#combo-test_simple_unit_conversions1-s1-ms-1-cms-1-ucum_code-10-1000-none-none}","text":"<p>Unit Conversion: 1.0 <code>m.s-1</code> =&gt; 100.0 <code>cm.s-1 [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: m.s-1\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: cm.s-1\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 100.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: cm.s-1\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: m.s-1\n          target_unit_scheme: ucum_code\n          source_unit: cm.s-1\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversions1-s1-gm2-1-kgm2-1-ucum_code-10-0001-none-none-combo-test_simple_unit_conversions1-s1-gm2-1-kgm2-1-ucum_code-10-0001-none-none","title":"Combo: test_simple_unit_conversion[s1-s1-g.m2-1-kg.m2-1-ucum_code-1.0-0.001-None-None] {#combo-test_simple_unit_conversions1-s1-gm2-1-kgm2-1-ucum_code-10-0001-none-none}","text":"<p>Unit Conversion: 1.0 <code>g.m2-1</code> =&gt; 0.001 <code>kg.m2-1 [with s1]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: g.m2-1\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: kg.m2-1\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 0.001\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: float\n        unit:\n          ucum_code: kg.m2-1\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n        unit_conversion:\n          target_unit: g.m2-1\n          target_unit_scheme: ucum_code\n          source_unit: kg.m2-1\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_simple_unit_conversionheight_in_m-height_in_cm-m-cm-ucum_code-10-1000-none-none-combo-test_simple_unit_conversionheight_in_m-height_in_cm-m-cm-ucum_code-10-1000-none-none","title":"Combo: test_simple_unit_conversion[height_in_m-height_in_cm-m-cm-ucum_code-1.0-100.0-None-None] {#combo-test_simple_unit_conversionheight_in_m-height_in_cm-m-cm-ucum_code-10-1000-none-none}","text":"<p>Unit Conversion: 1.0 <code>m</code> =&gt; 100.0 <code>cm [with height_in_m]</code></p> <p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      height_in_m:\n        name: height_in_m\n        range: float\n        unit:\n          ucum_code: m\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      height_in_cm:\n        name: height_in_cm\n        populated_from: height_in_m\n        unit_conversion:\n          target_unit: cm\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>height_in_m: 1.0\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>height_in_cm: 100.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      height_in_cm:\n        name: height_in_cm\n        range: float\n        unit:\n          ucum_code: cm\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      height_in_m:\n        name: height_in_m\n        populated_from: height_in_cm\n        unit_conversion:\n          target_unit: m\n          target_unit_scheme: ucum_code\n          source_unit: cm\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_complex_unit_conversion","title":"Feature Set: test_complex_unit_conversion","text":"<p>Test unit conversion, from complex object to simple scalar.</p> <ul> <li>source_unit:</li> <li>target_unit:</li> <li>source_value:</li> <li>target_value:</li> <li>roundtrip_object:</li> <li>err:</li> </ul>"},{"location":"specification/compliance/#combo-test_complex_unit_conversionm-cm-10-1000-roundtrip_object0-none-combo-test_complex_unit_conversionm-cm-10-1000-roundtrip_object0-none","title":"Combo: test_complex_unit_conversion[m-cm-1.0-100.0-roundtrip_object0-None] {#combo-test_complex_unit_conversionm-cm-10-1000-roundtrip_object0-none}","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  Q:\n    name: Q\n    attributes:\n      magnitude:\n        name: magnitude\n        range: float\n      unit:\n        name: unit\n        range: string\n  C:\n    name: C\n    attributes:\n      q:\n        name: q\n        range: Q\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      q_in_cm:\n        name: q_in_cm\n        populated_from: q\n        unit_conversion:\n          target_unit: cm\n          source_unit_slot: unit\n          source_magnitude_slot: magnitude\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>q:\n  magnitude: 1.0\n  unit: m\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>q_in_cm: 100.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      q_in_cm:\n        name: q_in_cm\n        range: Q\n        unit:\n          ucum_code: cm\n    tree_root: true\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      q:\n        name: q\n        populated_from: q_in_cm\n        unit_conversion:\n          source_unit: cm\n          target_unit_slot: unit\n          target_magnitude_slot: magnitude\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_complex_unit_conversioncm-cm-1000-1000-roundtrip_object1-none-combo-test_complex_unit_conversioncm-cm-1000-1000-roundtrip_object1-none","title":"Combo: test_complex_unit_conversion[cm-cm-100.0-100.0-roundtrip_object1-None] {#combo-test_complex_unit_conversioncm-cm-1000-1000-roundtrip_object1-none}","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  Q:\n    name: Q\n    attributes:\n      magnitude:\n        name: magnitude\n        range: float\n      unit:\n        name: unit\n        range: string\n  C:\n    name: C\n    attributes:\n      q:\n        name: q\n        range: Q\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      q_in_cm:\n        name: q_in_cm\n        populated_from: q\n        unit_conversion:\n          target_unit: cm\n          source_unit_slot: unit\n          source_magnitude_slot: magnitude\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>q:\n  magnitude: 100.0\n  unit: cm\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>q_in_cm: 100.0\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      q_in_cm:\n        name: q_in_cm\n        range: Q\n        unit:\n          ucum_code: cm\n    tree_root: true\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      q:\n        name: q\n        populated_from: q_in_cm\n        unit_conversion:\n          source_unit: cm\n          target_unit_slot: unit\n          target_magnitude_slot: magnitude\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_complex_unit_conversioncm-ml-1000-none-none-dimensionalityerror-combo-test_complex_unit_conversioncm-ml-1000-none-none-dimensionalityerror","title":"Combo: test_complex_unit_conversion[cm-ml-100.0-None-None-DimensionalityError] {#combo-test_complex_unit_conversioncm-ml-1000-none-none-dimensionalityerror}","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  Q:\n    name: Q\n    attributes:\n      magnitude:\n        name: magnitude\n        range: float\n      unit:\n        name: unit\n        range: string\n  C:\n    name: C\n    attributes:\n      q:\n        name: q\n        range: Q\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      q_in_ml:\n        name: q_in_ml\n        populated_from: q\n        unit_conversion:\n          target_unit: ml\n          source_unit_slot: unit\n          source_magnitude_slot: magnitude\n\n</code></pre> <p>Object Transformation:</p> <p>Expected Error: DimensionalityError</p> <ul> <li>Source Object:</li> </ul> <pre><code>q:\n  magnitude: 100.0\n  unit: cm\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>null\n...\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      q_in_ml:\n        name: q_in_ml\n        range: Q\n        unit:\n          ucum_code: ml\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_complex_unit_conversioncm-pinknoodles-1000-none-none-undefineduniterror-combo-test_complex_unit_conversioncm-pinknoodles-1000-none-none-undefineduniterror","title":"Combo: test_complex_unit_conversion[cm-pinknoodles-100.0-None-None-UndefinedUnitError] {#combo-test_complex_unit_conversioncm-pinknoodles-1000-none-none-undefineduniterror}","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  Q:\n    name: Q\n    attributes:\n      magnitude:\n        name: magnitude\n        range: float\n      unit:\n        name: unit\n        range: string\n  C:\n    name: C\n    attributes:\n      q:\n        name: q\n        range: Q\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      q_in_pinknoodles:\n        name: q_in_pinknoodles\n        populated_from: q\n        unit_conversion:\n          target_unit: pinknoodles\n          source_unit_slot: unit\n          source_magnitude_slot: magnitude\n\n</code></pre> <p>Object Transformation:</p> <p>Expected Error: UndefinedUnitError</p> <ul> <li>Source Object:</li> </ul> <pre><code>q:\n  magnitude: 100.0\n  unit: cm\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>null\n...\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      q_in_pinknoodles:\n        name: q_in_pinknoodles\n        range: Q\n        unit:\n          ucum_code: pinknoodles\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_stringify","title":"Feature Set: test_stringify","text":"<p>Test compaction of multivalued slots into a string.</p> <p>Stringification is primarily intended for mapping from complex nested formats to simple tabular TSV formats, where some of the following methodologies can be used:</p> <ul> <li>flattening lists using an (internal) delimiter</li> <li>flattening lists or more complex objects using JSON or YAML</li> </ul> <ul> <li>delimiter: delimiter to use in stringification</li> <li>source_value: source value (a list)</li> <li>target_value: expected value of slot in target object (a     string)</li> </ul>"},{"location":"specification/compliance/#combo-test_stringify-source_value0-ab","title":"Combo: test_stringify[,-source_value0-a,b]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      s1_verbatim:\n        name: s1_verbatim\n        populated_from: s1\n        stringification:\n          delimiter: ','\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n- a\n- b\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_verbatim: a,b\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      s1_verbatim:\n        name: s1_verbatim\n        multivalued: false\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1_verbatim\n        stringification:\n          delimiter: ','\n          reversed: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_stringify-source_value1-ab","title":"Combo: test_stringify[|-source_value1-a|b]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      s1_verbatim:\n        name: s1_verbatim\n        populated_from: s1\n        stringification:\n          delimiter: '|'\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n- a\n- b\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_verbatim: a|b\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      s1_verbatim:\n        name: s1_verbatim\n        multivalued: false\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1_verbatim\n        stringification:\n          delimiter: '|'\n          reversed: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_stringify-source_value2-a","title":"Combo: test_stringify[|-source_value2-a]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      s1_verbatim:\n        name: s1_verbatim\n        populated_from: s1\n        stringification:\n          delimiter: '|'\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n- a\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_verbatim: a\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      s1_verbatim:\n        name: s1_verbatim\n        multivalued: false\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1_verbatim\n        stringification:\n          delimiter: '|'\n          reversed: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_stringify-source_value3-","title":"Combo: test_stringify[|-source_value3-]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      s1_verbatim:\n        name: s1_verbatim\n        populated_from: s1\n        stringification:\n          delimiter: '|'\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>{}\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_verbatim: ''\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      s1_verbatim:\n        name: s1_verbatim\n        multivalued: false\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1_verbatim\n        stringification:\n          delimiter: '|'\n          reversed: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_stringifyjson-source_value4-a-b","title":"Combo: test_stringify[JSON-source_value4-[\\\"a\\\", \\\"b\\\"]]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      s1_verbatim:\n        name: s1_verbatim\n        populated_from: s1\n        stringification:\n          syntax: JSON\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n- a\n- b\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_verbatim: '[\"a\", \"b\"]'\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      s1_verbatim:\n        name: s1_verbatim\n        multivalued: false\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1_verbatim\n        stringification:\n          reversed: true\n          syntax: JSON\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_stringifyjson-source_value5-","title":"Combo: test_stringify[JSON-source_value5-[]]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      s1_verbatim:\n        name: s1_verbatim\n        populated_from: s1\n        stringification:\n          syntax: JSON\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>{}\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_verbatim: '[]'\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      s1_verbatim:\n        name: s1_verbatim\n        multivalued: false\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1_verbatim\n        stringification:\n          reversed: true\n          syntax: JSON\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_stringifyyaml-source_value6-a-b","title":"Combo: test_stringify[YAML-source_value6-[a, b]]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        multivalued: true\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  D:\n    name: D\n    populated_from: C\n    slot_derivations:\n      s1_verbatim:\n        name: s1_verbatim\n        populated_from: s1\n        stringification:\n          syntax: YAML\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n- a\n- b\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_verbatim: '[a, b]'\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  D:\n    name: D\n    attributes:\n      s1_verbatim:\n        name: s1_verbatim\n        multivalued: false\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: D\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1_verbatim\n        stringification:\n          reversed: true\n          syntax: YAML\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_isomorphic","title":"Feature Set: test_isomorphic","text":"<p>Test mapping a schema to an identical schema (i.e copy).</p> <p>This also tests for the ability to recursively descend a nested structure.</p> <ul> <li>source_object:</li> <li>use_expr:</li> <li>supply_source_schema: TODO: always True for now</li> </ul>"},{"location":"specification/compliance/#combo-test_isomorphictrue-true-source_object0","title":"Combo: test_isomorphic[True-True-source_object0]","text":"<p>Source Schema:</p> <pre><code>name: isomorphic\nid: isomorphic\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  Container:\n    name: Container\n    attributes:\n      c_list:\n        name: c_list\n        multivalued: true\n        range: C\n      d:\n        name: d\n        range: D\n    tree_root: true\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n      s2:\n        name: s2\n        range: string\n  D:\n    name: D\n    attributes:\n      s3:\n        name: s3\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  Container:\n    name: Container\n    populated_from: Container\n    slot_derivations:\n      c_list:\n        name: c_list\n        populated_from: c_list\n        range: C\n      d:\n        name: d\n        populated_from: d\n        range: D\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n      s2:\n        name: s2\n        populated_from: s2\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      s3:\n        name: s3\n        expr: s3\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>c_list:\n- s1: a\n  s2: b\n- s1: c\n  s2: d\nd:\n  s3: e\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>c_list:\n- s1: a\n  s2: b\n- s1: c\n  s2: d\nd:\n  s3: e\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: isomorphic-derived\nid: isomorphic-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: isomorphic-derived/\nclasses:\n  Container:\n    name: Container\n    attributes:\n      c_list:\n        name: c_list\n        multivalued: true\n        range: C\n      d:\n        name: d\n        range: D\n    tree_root: true\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n      s2:\n        name: s2\n        range: string\n  D:\n    name: D\n    attributes:\n      s3:\n        name: s3\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  Container:\n    name: Container\n    populated_from: Container\n    slot_derivations:\n      c_list:\n        name: c_list\n        populated_from: c_list\n        range: C\n      d:\n        name: d\n        populated_from: d\n        range: D\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n      s2:\n        name: s2\n        populated_from: s2\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      s3:\n        name: s3\n        populated_from: s3\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_isomorphictrue-false-source_object0","title":"Combo: test_isomorphic[True-False-source_object0]","text":"<p>Source Schema:</p> <pre><code>name: isomorphic\nid: isomorphic\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  Container:\n    name: Container\n    attributes:\n      c_list:\n        name: c_list\n        multivalued: true\n        range: C\n      d:\n        name: d\n        range: D\n    tree_root: true\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n      s2:\n        name: s2\n        range: string\n  D:\n    name: D\n    attributes:\n      s3:\n        name: s3\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  Container:\n    name: Container\n    populated_from: Container\n    slot_derivations:\n      c_list:\n        name: c_list\n        populated_from: c_list\n        range: C\n      d:\n        name: d\n        populated_from: d\n        range: D\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n      s2:\n        name: s2\n        populated_from: s2\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      s3:\n        name: s3\n        populated_from: s3\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>c_list:\n- s1: a\n  s2: b\n- s1: c\n  s2: d\nd:\n  s3: e\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>c_list:\n- s1: a\n  s2: b\n- s1: c\n  s2: d\nd:\n  s3: e\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: isomorphic-derived\nid: isomorphic-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: isomorphic-derived/\nclasses:\n  Container:\n    name: Container\n    attributes:\n      c_list:\n        name: c_list\n        multivalued: true\n        range: C\n      d:\n        name: d\n        range: D\n    tree_root: true\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: string\n      s2:\n        name: s2\n        range: string\n  D:\n    name: D\n    attributes:\n      s3:\n        name: s3\n        range: string\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  Container:\n    name: Container\n    populated_from: Container\n    slot_derivations:\n      c_list:\n        name: c_list\n        populated_from: c_list\n        range: C\n      d:\n        name: d\n        populated_from: d\n        range: D\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\n      s2:\n        name: s2\n        populated_from: s2\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      s3:\n        name: s3\n        populated_from: s3\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_join","title":"Feature Set: test_join","text":"<p>Test joining two objects into a single object, aka denormalization.</p> <ul> <li>source_object: normalized source object</li> <li>target_object: denormalized target object</li> <li>inlined: True if the source objects are inlined</li> </ul>"},{"location":"specification/compliance/#combo-test_joinsource_object0-target_object0-true","title":"Combo: test_join[source_object0-target_object0-True]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  R:\n    name: R\n    attributes:\n      s1:\n        name: s1\n        range: E\n        inlined: true\n      s2:\n        name: s2\n        range: E\n        inlined: true\n    tree_root: true\n  E:\n    name: E\n    attributes:\n      id:\n        name: id\n        identifier: true\n        range: string\n      name:\n        name: name\n        range: string\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  R:\n    name: R\n    populated_from: R\n    slot_derivations:\n      s1_id:\n        name: s1_id\n        expr: s1.id\n      s1_name:\n        name: s1_name\n        expr: s1.name\n      s2_id:\n        name: s2_id\n        expr: s2.id\n      s2_name:\n        name: s2_name\n        expr: s2.name\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1:\n  id: x1\n  name: foo\ns2:\n  id: x2\n  name: bar\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1_id: x1\ns1_name: foo\ns2_id: x2\ns2_name: bar\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  R:\n    name: R\n    attributes:\n      s1_id:\n        name: s1_id\n      s1_name:\n        name: s1_name\n      s2_id:\n        name: s2_id\n      s2_name:\n        name: s2_name\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_joinsource_object0-target_object0-false","title":"Combo: test_join[source_object0-target_object0-False]","text":"<p>Source Schema:</p> <pre><code>name: types\nid: types\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  R:\n    name: R\n    attributes:\n      s1:\n        name: s1\n        range: E\n        inlined: false\n      s2:\n        name: s2\n        range: E\n        inlined: false\n    tree_root: false\n  E:\n    name: E\n    attributes:\n      id:\n        name: id\n        identifier: true\n        range: string\n      name:\n        name: name\n        range: string\n  Container:\n    name: Container\n    attributes:\n      r_list:\n        name: r_list\n        multivalued: true\n        range: R\n      e_list:\n        name: e_list\n        multivalued: true\n        range: E\n        inlined_as_list: true\n    tree_root: true\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  R:\n    name: R\n    populated_from: R\n    slot_derivations:\n      s1_id:\n        name: s1_id\n        expr: s1.id\n      s1_name:\n        name: s1_name\n        expr: s1.name\n      s2_id:\n        name: s2_id\n        expr: s2.id\n      s2_name:\n        name: s2_name\n        expr: s2.name\n  Container:\n    name: Container\n    populated_from: Container\n    slot_derivations:\n      r_list:\n        name: r_list\n        populated_from: r_list\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>r_list:\n- s1: x1\n  s2: x2\ne_list:\n- id: x1\n  name: foo\n- id: x2\n  name: bar\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>r_list:\n- s1_id: x1\n  s1_name: foo\n  s2_id: x2\n  s2_name: bar\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: types-derived\nid: types-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: types-derived/\nclasses:\n  R:\n    name: R\n    attributes:\n      s1_id:\n        name: s1_id\n      s1_name:\n        name: s1_name\n      s2_id:\n        name: s2_id\n      s2_name:\n        name: s2_name\n    tree_root: false\n  Container:\n    name: Container\n    attributes:\n      r_list:\n        name: r_list\n        multivalued: true\n        range: R\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_map_enum","title":"Feature Set: test_map_enum","text":"<p>Test mapping between enum values.</p> <p>Currently this only supports simple dictionary-style mapping between permissible values, akin to SSSOM, but in future additional expressivity will be supported, including:</p> <ul> <li>mapping ranges to categorical values</li> <li>boolean/branching logic</li> </ul> <ul> <li>source_value:</li> <li>mapping:</li> <li>target_value:</li> </ul>"},{"location":"specification/compliance/#combo-test_map_enuma-mapping0-b-false","title":"Combo: test_map_enum[A-mapping0-B-False]","text":"<p>Source Schema:</p> <pre><code>name: enums\nid: enums\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\nenum_derivations:\n  E:\n    name: E\n    mirror_source: false\n    populated_from: E\n    permissible_value_derivations:\n      B:\n        name: B\n        populated_from: A\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: A\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: B\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: enums-derived\nid: enums-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: enums-derived/\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre> <p>Inverted Transformation Specification (Derived):</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\nenum_derivations:\n  E:\n    name: E\n    populated_from: E\n    permissible_value_derivations:\n      A:\n        name: A\n        populated_from: B\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_enumz-mapping1-none-false","title":"Combo: test_map_enum[Z-mapping1-None-False]","text":"<p>Source Schema:</p> <pre><code>name: enums\nid: enums\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\nenum_derivations:\n  E:\n    name: E\n    mirror_source: false\n    populated_from: E\n    permissible_value_derivations:\n      B:\n        name: B\n        populated_from: A\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: Z\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>{}\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: enums-derived\nid: enums-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: enums-derived/\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_enumc-mapping2-c-true","title":"Combo: test_map_enum[C-mapping2-C-True]","text":"<p>Source Schema:</p> <pre><code>name: enums\nid: enums\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\nenum_derivations:\n  E:\n    name: E\n    mirror_source: true\n    populated_from: E\n    permissible_value_derivations:\n      B:\n        name: B\n        populated_from: A\n\n</code></pre> <p>s### Combo: test_map_enum[A-mapping3-B-False]</p> <p>Source Schema:</p> <pre><code>name: enums\nid: enums\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\nenum_derivations:\n  E:\n    name: E\n    mirror_source: false\n    populated_from: E\n    permissible_value_derivations:\n      B:\n        name: B\n        sources:\n        - A\n        - C\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: A\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: B\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: enums-derived\nid: enums-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: enums-derived/\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_map_enumc-mapping4-b-false","title":"Combo: test_map_enum[C-mapping4-B-False]","text":"<p>Source Schema:</p> <pre><code>name: enums\nid: enums\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    slot_derivations:\n      s1:\n        name: s1\n        populated_from: s1\nenum_derivations:\n  E:\n    name: E\n    mirror_source: false\n    populated_from: E\n    permissible_value_derivations:\n      B:\n        name: B\n        sources:\n        - A\n        - C\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: C\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: B\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: enums-derived\nid: enums-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: enums-derived/\nenums:\n  E:\n    name: E\n    permissible_values:\n      A:\n        text: A\n      B:\n        text: B\n      C:\n        text: C\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: E\n\n</code></pre>"},{"location":"specification/compliance/#feature-set-test_inheritance","title":"Feature Set: test_inheritance","text":"<p>Test inheritance.</p> <p>Transformation specifications can utilize inheritance, in the same way that LinkML schemas can.</p> <ul> <li>is_a: use is_as instead of mixins in test schema</li> <li>flatten: roll down inherited slots</li> </ul>"},{"location":"specification/compliance/#combo-test_inheritancefalse-true","title":"Combo: test_inheritance[False-True]","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    is_a: D\n    attributes:\n      s1:\n        name: s1\n        range: integer\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s2:\n        name: s2\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    is_a: D\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        expr: s1 + 1\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      s2:\n        name: s2\n        expr: s2 + 1\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1\ns2: 2\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 2\ns2: 3\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    is_a: D\n    attributes:\n      s1:\n        name: s1\n        range: integer\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s2:\n        name: s2\n        range: integer\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_inheritancefalse-false","title":"Combo: test_inheritance[False-False]","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    mixins:\n    - D\n    attributes:\n      s1:\n        name: s1\n        range: integer\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s2:\n        name: s2\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    mixins:\n    - D\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        expr: s1 + 1\n  D:\n    name: D\n    populated_from: D\n    slot_derivations:\n      s2:\n        name: s2\n        expr: s2 + 1\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1\ns2: 2\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 2\ns2: 3\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    mixins:\n    - D\n    attributes:\n      s1:\n        name: s1\n        range: integer\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s2:\n        name: s2\n        range: integer\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_inheritancetrue-true","title":"Combo: test_inheritance[True-True]","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    is_a: D\n    attributes:\n      s1:\n        name: s1\n        range: integer\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s2:\n        name: s2\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        expr: s1 + 1\n      s2:\n        name: s2\n        expr: s2 + 1\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1\ns2: 2\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 2\ns2: 3\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n      s2:\n        name: s2\n        range: integer\n    tree_root: true\n\n</code></pre>"},{"location":"specification/compliance/#combo-test_inheritancetrue-false","title":"Combo: test_inheritance[True-False]","text":"<p>Source Schema:</p> <pre><code>name: expr\nid: expr\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: test\nclasses:\n  C:\n    name: C\n    mixins:\n    - D\n    attributes:\n      s1:\n        name: s1\n        range: integer\n    tree_root: true\n  D:\n    name: D\n    attributes:\n      s2:\n        name: s2\n        range: integer\n\n</code></pre> <p>Transformer Specification:</p> <pre><code>class_derivations:\n  C:\n    name: C\n    populated_from: C\n    slot_derivations:\n      s1:\n        name: s1\n        expr: s1 + 1\n      s2:\n        name: s2\n        expr: s2 + 1\n\n</code></pre> <p>Object Transformation:</p> <ul> <li>Source Object:</li> </ul> <pre><code>s1: 1\ns2: 2\n\n</code></pre> <ul> <li>Target Object:</li> </ul> <pre><code>s1: 2\ns2: 3\n\n</code></pre> <p>Target Schema (Derived):</p> <pre><code>name: expr-derived\nid: expr-derived\nimports:\n- linkml:types\nprefixes:\n  linkml:\n    prefix_prefix: linkml\n    prefix_reference: https://w3id.org/linkml/\n  test:\n    prefix_prefix: test\n    prefix_reference: http://example.org/test/\ndefault_prefix: expr-derived/\nclasses:\n  C:\n    name: C\n    attributes:\n      s1:\n        name: s1\n        range: integer\n      s2:\n        name: s2\n        range: integer\n    tree_root: true\n\n</code></pre> <p>. 55 passed, 1 skipped, 250 warnings in 9.98s</p>"}]}