{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LinkML Data Transformer Model Datamodel for LinkML schema transformations. A transformer generates instances of a target data model from instances of a source data model. This transformation process is guided by a TransformationSpecification . The specification is independent of any one method for transforming data. It allows different approaches, including: direct implementation, transforming python or json objects translation of the specification into SQL commands, to operate on relations translation of the specification into SPARQL CONSTRUCTs, to operate on triples translation into another specification language, such as R2RML URI: https://w3id.org/linkml/transformer Name: transformer Classes Class Description AliasedClass alias-class key value pairs for classes Any ClassDerivation A specification of how to derive a target class from a source class CopyDirective ElementDerivation A specification of how to derive a target element from a source element EnumDerivation A specification of how to derive the value of a target enum from a source enu... Inverse Used for back references KeyVal PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation SlotDerivation A specification of how to derive the value of a target slot from a source slo... TransformationSpecification A collection of mappings between source and target classes Slots Slot Description add alias name of the class to be aliased class_derivations Instructions on how to derive a set of classes in the target schema from clas... class_name class_named local alias for the class copy_all copy_directives element_name enum_derivations Instructions on how to derive a set of enums in the target schema exclude exclude_all expr An expression to be evaluated on the source object to derive the target slot hide True if this is suppressed id Unique identifier for this transformation specification include inverse_of Used to specify a class-slot tuple that is the inverse of the derived/target ... is_a joins Additional classes to be joined to derive instances of the target class key mixins name Name of the element in the target schema permissible_value_derivations Instructions on how to derive a set of PVs in the target schema populated_from Name of the class in the source schema prefixes prefix map slot_derivations Instructions on how to derive a set of top level slots in the target schema slot_name source_schema name of the schema that describes the source (input) objects target_schema name of the schema that describes the target (output) objects title human readable title for this transformation specification type_designator value Enumerations Enumeration Description Types Type Description xsd:boolean A binary (true or false) value xsd:string a compact URI xsd:date a date (year, month and day) in an idealized calendar linkml:DateOrDatetime Either a date or a datetime xsd:dateTime The combination of a date and time xsd:decimal A real number with arbitrary precision that conforms to the xsd:decimal speci... xsd:double A real number that conforms to the xsd:double specification xsd:float A real number that conforms to the xsd:float specification xsd:integer An integer xsd:string Prefix part of CURIE shex:nonLiteral A URI, CURIE or BNODE that represents a node in a model shex:iri A URI or CURIE that represents an object in the model xsd:string A character string xsd:dateTime A time object represents a (local) time of day, independent of any particular... xsd:anyURI a complete URI xsd:anyURI a URI or a CURIE Subsets Subset Description","title":"Index"},{"location":"#linkml-data-transformer-model","text":"Datamodel for LinkML schema transformations. A transformer generates instances of a target data model from instances of a source data model. This transformation process is guided by a TransformationSpecification . The specification is independent of any one method for transforming data. It allows different approaches, including: direct implementation, transforming python or json objects translation of the specification into SQL commands, to operate on relations translation of the specification into SPARQL CONSTRUCTs, to operate on triples translation into another specification language, such as R2RML URI: https://w3id.org/linkml/transformer Name: transformer","title":"LinkML Data Transformer Model"},{"location":"#classes","text":"Class Description AliasedClass alias-class key value pairs for classes Any ClassDerivation A specification of how to derive a target class from a source class CopyDirective ElementDerivation A specification of how to derive a target element from a source element EnumDerivation A specification of how to derive the value of a target enum from a source enu... Inverse Used for back references KeyVal PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation SlotDerivation A specification of how to derive the value of a target slot from a source slo... TransformationSpecification A collection of mappings between source and target classes","title":"Classes"},{"location":"#slots","text":"Slot Description add alias name of the class to be aliased class_derivations Instructions on how to derive a set of classes in the target schema from clas... class_name class_named local alias for the class copy_all copy_directives element_name enum_derivations Instructions on how to derive a set of enums in the target schema exclude exclude_all expr An expression to be evaluated on the source object to derive the target slot hide True if this is suppressed id Unique identifier for this transformation specification include inverse_of Used to specify a class-slot tuple that is the inverse of the derived/target ... is_a joins Additional classes to be joined to derive instances of the target class key mixins name Name of the element in the target schema permissible_value_derivations Instructions on how to derive a set of PVs in the target schema populated_from Name of the class in the source schema prefixes prefix map slot_derivations Instructions on how to derive a set of top level slots in the target schema slot_name source_schema name of the schema that describes the source (input) objects target_schema name of the schema that describes the target (output) objects title human readable title for this transformation specification type_designator value","title":"Slots"},{"location":"#enumerations","text":"Enumeration Description","title":"Enumerations"},{"location":"#types","text":"Type Description xsd:boolean A binary (true or false) value xsd:string a compact URI xsd:date a date (year, month and day) in an idealized calendar linkml:DateOrDatetime Either a date or a datetime xsd:dateTime The combination of a date and time xsd:decimal A real number with arbitrary precision that conforms to the xsd:decimal speci... xsd:double A real number that conforms to the xsd:double specification xsd:float A real number that conforms to the xsd:float specification xsd:integer An integer xsd:string Prefix part of CURIE shex:nonLiteral A URI, CURIE or BNODE that represents a node in a model shex:iri A URI or CURIE that represents an object in the model xsd:string A character string xsd:dateTime A time object represents a (local) time of day, independent of any particular... xsd:anyURI a complete URI xsd:anyURI a URI or a CURIE","title":"Types"},{"location":"#subsets","text":"Subset Description","title":"Subsets"},{"location":"AliasedClass/","text":"Class: AliasedClass alias-class key value pairs for classes URI: linkmltr:AliasedClass classDiagram class AliasedClass AliasedClass : alias AliasedClass : class_named Slots Name Cardinality and Range Description Inheritance alias 0..1 xsd:string name of the class to be aliased direct class_named 0..1 xsd:string local alias for the class direct Usages used by used in type used ClassDerivation joins range AliasedClass Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:AliasedClass native linkmltr:AliasedClass LinkML Source Direct name: AliasedClass description: alias-class key value pairs for classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: alias: name: alias description: name of the class to be aliased from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true class_named: name: class_named description: local alias for the class from_schema: https://w3id.org/linkml/transformer rank: 1000 Induced name: AliasedClass description: alias-class key value pairs for classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: alias: name: alias description: name of the class to be aliased from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: alias owner: AliasedClass domain_of: - AliasedClass class_named: name: class_named description: local alias for the class from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_named owner: AliasedClass domain_of: - AliasedClass","title":"Class: AliasedClass"},{"location":"AliasedClass/#class-aliasedclass","text":"alias-class key value pairs for classes URI: linkmltr:AliasedClass classDiagram class AliasedClass AliasedClass : alias AliasedClass : class_named","title":"Class: AliasedClass"},{"location":"AliasedClass/#slots","text":"Name Cardinality and Range Description Inheritance alias 0..1 xsd:string name of the class to be aliased direct class_named 0..1 xsd:string local alias for the class direct","title":"Slots"},{"location":"AliasedClass/#usages","text":"used by used in type used ClassDerivation joins range AliasedClass","title":"Usages"},{"location":"AliasedClass/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"AliasedClass/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"AliasedClass/#mappings","text":"Mapping Type Mapped Value self linkmltr:AliasedClass native linkmltr:AliasedClass","title":"Mappings"},{"location":"AliasedClass/#linkml-source","text":"","title":"LinkML Source"},{"location":"AliasedClass/#direct","text":"name: AliasedClass description: alias-class key value pairs for classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: alias: name: alias description: name of the class to be aliased from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true class_named: name: class_named description: local alias for the class from_schema: https://w3id.org/linkml/transformer rank: 1000","title":"Direct"},{"location":"AliasedClass/#induced","text":"name: AliasedClass description: alias-class key value pairs for classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: alias: name: alias description: name of the class to be aliased from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: alias owner: AliasedClass domain_of: - AliasedClass class_named: name: class_named description: local alias for the class from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_named owner: AliasedClass domain_of: - AliasedClass","title":"Induced"},{"location":"Any/","text":"Class: Any URI: linkml:Any classDiagram class Any Slots Name Cardinality and Range Description Inheritance Usages used by used in type used KeyVal value range Any CopyDirective exclude range Any CopyDirective include range Any CopyDirective add range Any Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkml:Any native linkmltr:Any LinkML Source Direct name: Any from_schema: https://w3id.org/linkml/transformer rank: 1000 class_uri: linkml:Any Induced name: Any from_schema: https://w3id.org/linkml/transformer rank: 1000 class_uri: linkml:Any","title":"Class: Any"},{"location":"Any/#class-any","text":"URI: linkml:Any classDiagram class Any","title":"Class: Any"},{"location":"Any/#slots","text":"Name Cardinality and Range Description Inheritance","title":"Slots"},{"location":"Any/#usages","text":"used by used in type used KeyVal value range Any CopyDirective exclude range Any CopyDirective include range Any CopyDirective add range Any","title":"Usages"},{"location":"Any/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Any/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"Any/#mappings","text":"Mapping Type Mapped Value self linkml:Any native linkmltr:Any","title":"Mappings"},{"location":"Any/#linkml-source","text":"","title":"LinkML Source"},{"location":"Any/#direct","text":"name: Any from_schema: https://w3id.org/linkml/transformer rank: 1000 class_uri: linkml:Any","title":"Direct"},{"location":"Any/#induced","text":"name: Any from_schema: https://w3id.org/linkml/transformer rank: 1000 class_uri: linkml:Any","title":"Induced"},{"location":"Boolean/","text":"Type: Boolean A binary (true or false) value URI: xsd:boolean base : Bool uri : xsd:boolean repr : bool Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Boolean"},{"location":"Boolean/#type-boolean","text":"A binary (true or false) value URI: xsd:boolean base : Bool uri : xsd:boolean repr : bool","title":"Type: Boolean"},{"location":"Boolean/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Boolean/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"ClassDerivation/","text":"Class: ClassDerivation A specification of how to derive a target class from a source class. URI: linkmltr:ClassDerivation classDiagram class ClassDerivation ElementDerivation <|-- ClassDerivation ClassDerivation : copy_directives ClassDerivation : is_a ClassDerivation : joins ClassDerivation : mixins ClassDerivation : name ClassDerivation : populated_from ClassDerivation : slot_derivations Inheritance ElementDerivation ClassDerivation Slots Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct populated_from 0..1 xsd:string direct joins 0..* AliasedClass Additional classes to be joined to derive instances of the target class direct slot_derivations 0..1 xsd:string direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation Usages used by used in type used TransformationSpecification class_derivations range ClassDerivation Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:ClassDerivation native linkmltr:ClassDerivation LinkML Source Direct name: ClassDerivation description: A specification of how to derive a target class from a source class. from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Name of the class in the target schema from_schema: https://w3id.org/linkml/transformer key: true populated_from: name: populated_from description: Name of the class in the source schema from_schema: https://w3id.org/linkml/transformer rank: 1000 range: string joins: name: joins description: Additional classes to be joined to derive instances of the target class comments: - not yet implemented from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: AliasedClass inlined: true slot_derivations: name: slot_derivations from_schema: https://w3id.org/linkml/transformer multivalued: true range: SlotDerivation inlined: true Induced name: ClassDerivation description: A specification of how to derive a target class from a source class. from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Name of the class in the target schema from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: ClassDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation populated_from: name: populated_from description: Name of the class in the source schema from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: populated_from owner: ClassDerivation domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string joins: name: joins description: Additional classes to be joined to derive instances of the target class comments: - not yet implemented from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: joins owner: ClassDerivation domain_of: - ClassDerivation range: AliasedClass inlined: true slot_derivations: name: slot_derivations from_schema: https://w3id.org/linkml/transformer multivalued: true alias: slot_derivations owner: ClassDerivation domain_of: - TransformationSpecification - ClassDerivation range: SlotDerivation inlined: true copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: ClassDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: ClassDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: ClassDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Class: ClassDerivation"},{"location":"ClassDerivation/#class-classderivation","text":"A specification of how to derive a target class from a source class. URI: linkmltr:ClassDerivation classDiagram class ClassDerivation ElementDerivation <|-- ClassDerivation ClassDerivation : copy_directives ClassDerivation : is_a ClassDerivation : joins ClassDerivation : mixins ClassDerivation : name ClassDerivation : populated_from ClassDerivation : slot_derivations","title":"Class: ClassDerivation"},{"location":"ClassDerivation/#inheritance","text":"ElementDerivation ClassDerivation","title":"Inheritance"},{"location":"ClassDerivation/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct populated_from 0..1 xsd:string direct joins 0..* AliasedClass Additional classes to be joined to derive instances of the target class direct slot_derivations 0..1 xsd:string direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation","title":"Slots"},{"location":"ClassDerivation/#usages","text":"used by used in type used TransformationSpecification class_derivations range ClassDerivation","title":"Usages"},{"location":"ClassDerivation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"ClassDerivation/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"ClassDerivation/#mappings","text":"Mapping Type Mapped Value self linkmltr:ClassDerivation native linkmltr:ClassDerivation","title":"Mappings"},{"location":"ClassDerivation/#linkml-source","text":"","title":"LinkML Source"},{"location":"ClassDerivation/#direct","text":"name: ClassDerivation description: A specification of how to derive a target class from a source class. from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Name of the class in the target schema from_schema: https://w3id.org/linkml/transformer key: true populated_from: name: populated_from description: Name of the class in the source schema from_schema: https://w3id.org/linkml/transformer rank: 1000 range: string joins: name: joins description: Additional classes to be joined to derive instances of the target class comments: - not yet implemented from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: AliasedClass inlined: true slot_derivations: name: slot_derivations from_schema: https://w3id.org/linkml/transformer multivalued: true range: SlotDerivation inlined: true","title":"Direct"},{"location":"ClassDerivation/#induced","text":"name: ClassDerivation description: A specification of how to derive a target class from a source class. from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Name of the class in the target schema from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: ClassDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation populated_from: name: populated_from description: Name of the class in the source schema from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: populated_from owner: ClassDerivation domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string joins: name: joins description: Additional classes to be joined to derive instances of the target class comments: - not yet implemented from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: joins owner: ClassDerivation domain_of: - ClassDerivation range: AliasedClass inlined: true slot_derivations: name: slot_derivations from_schema: https://w3id.org/linkml/transformer multivalued: true alias: slot_derivations owner: ClassDerivation domain_of: - TransformationSpecification - ClassDerivation range: SlotDerivation inlined: true copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: ClassDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: ClassDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: ClassDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Induced"},{"location":"CopyDirective/","text":"Class: CopyDirective URI: linkmltr:CopyDirective classDiagram class CopyDirective CopyDirective : add CopyDirective : copy_all CopyDirective : element_name CopyDirective : exclude CopyDirective : exclude_all CopyDirective : include Slots Name Cardinality and Range Description Inheritance element_name 0..1 xsd:string direct copy_all 0..1 xsd:boolean direct exclude_all 0..1 xsd:boolean direct exclude 0..1 Any direct include 0..1 Any direct add 0..1 Any direct Usages used by used in type used ElementDerivation copy_directives range CopyDirective ClassDerivation copy_directives range CopyDirective SlotDerivation copy_directives range CopyDirective EnumDerivation copy_directives range CopyDirective PermissibleValueDerivation copy_directives range CopyDirective PrefixDerivation copy_directives range CopyDirective Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:CopyDirective native linkmltr:CopyDirective LinkML Source Direct name: CopyDirective from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: element_name: name: element_name from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true copy_all: name: copy_all from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean exclude_all: name: exclude_all from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean exclude: name: exclude from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any include: name: include from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any add: name: add from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any Induced name: CopyDirective from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: element_name: name: element_name from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: element_name owner: CopyDirective domain_of: - CopyDirective copy_all: name: copy_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: copy_all owner: CopyDirective domain_of: - CopyDirective range: boolean exclude_all: name: exclude_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude_all owner: CopyDirective domain_of: - CopyDirective range: boolean exclude: name: exclude from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude owner: CopyDirective domain_of: - CopyDirective range: Any include: name: include from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: include owner: CopyDirective domain_of: - CopyDirective range: Any add: name: add from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: add owner: CopyDirective domain_of: - CopyDirective range: Any","title":"Class: CopyDirective"},{"location":"CopyDirective/#class-copydirective","text":"URI: linkmltr:CopyDirective classDiagram class CopyDirective CopyDirective : add CopyDirective : copy_all CopyDirective : element_name CopyDirective : exclude CopyDirective : exclude_all CopyDirective : include","title":"Class: CopyDirective"},{"location":"CopyDirective/#slots","text":"Name Cardinality and Range Description Inheritance element_name 0..1 xsd:string direct copy_all 0..1 xsd:boolean direct exclude_all 0..1 xsd:boolean direct exclude 0..1 Any direct include 0..1 Any direct add 0..1 Any direct","title":"Slots"},{"location":"CopyDirective/#usages","text":"used by used in type used ElementDerivation copy_directives range CopyDirective ClassDerivation copy_directives range CopyDirective SlotDerivation copy_directives range CopyDirective EnumDerivation copy_directives range CopyDirective PermissibleValueDerivation copy_directives range CopyDirective PrefixDerivation copy_directives range CopyDirective","title":"Usages"},{"location":"CopyDirective/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"CopyDirective/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"CopyDirective/#mappings","text":"Mapping Type Mapped Value self linkmltr:CopyDirective native linkmltr:CopyDirective","title":"Mappings"},{"location":"CopyDirective/#linkml-source","text":"","title":"LinkML Source"},{"location":"CopyDirective/#direct","text":"name: CopyDirective from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: element_name: name: element_name from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true copy_all: name: copy_all from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean exclude_all: name: exclude_all from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean exclude: name: exclude from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any include: name: include from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any add: name: add from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any","title":"Direct"},{"location":"CopyDirective/#induced","text":"name: CopyDirective from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: element_name: name: element_name from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: element_name owner: CopyDirective domain_of: - CopyDirective copy_all: name: copy_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: copy_all owner: CopyDirective domain_of: - CopyDirective range: boolean exclude_all: name: exclude_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude_all owner: CopyDirective domain_of: - CopyDirective range: boolean exclude: name: exclude from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude owner: CopyDirective domain_of: - CopyDirective range: Any include: name: include from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: include owner: CopyDirective domain_of: - CopyDirective range: Any add: name: add from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: add owner: CopyDirective domain_of: - CopyDirective range: Any","title":"Induced"},{"location":"Curie/","text":"Type: Curie a compact URI URI: xsd:string base : Curie uri : xsd:string repr : str Comments in RDF serializations this MUST be expanded to a URI in non-RDF serializations MAY be serialized as the compact representation Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Curie"},{"location":"Curie/#type-curie","text":"a compact URI URI: xsd:string base : Curie uri : xsd:string repr : str","title":"Type: Curie"},{"location":"Curie/#comments","text":"in RDF serializations this MUST be expanded to a URI in non-RDF serializations MAY be serialized as the compact representation","title":"Comments"},{"location":"Curie/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Curie/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Date/","text":"Type: Date a date (year, month and day) in an idealized calendar URI: xsd:date base : XSDDate uri : xsd:date repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Date"},{"location":"Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: xsd:date base : XSDDate uri : xsd:date repr : str","title":"Type: Date"},{"location":"Date/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Date/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"DateOrDatetime/","text":"Type: DateOrDatetime Either a date or a datetime URI: linkml:DateOrDatetime base : str uri : linkml:DateOrDatetime repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: DateOrDatetime"},{"location":"DateOrDatetime/#type-dateordatetime","text":"Either a date or a datetime URI: linkml:DateOrDatetime base : str uri : linkml:DateOrDatetime repr : str","title":"Type: DateOrDatetime"},{"location":"DateOrDatetime/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"DateOrDatetime/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Datetime/","text":"Type: Datetime The combination of a date and time URI: xsd:dateTime base : XSDDateTime uri : xsd:dateTime repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Datetime"},{"location":"Datetime/#type-datetime","text":"The combination of a date and time URI: xsd:dateTime base : XSDDateTime uri : xsd:dateTime repr : str","title":"Type: Datetime"},{"location":"Datetime/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Datetime/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Decimal/","text":"Type: Decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: xsd:decimal base : Decimal uri : xsd:decimal Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Decimal"},{"location":"Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: xsd:decimal base : Decimal uri : xsd:decimal","title":"Type: Decimal"},{"location":"Decimal/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Decimal/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Double/","text":"Type: Double A real number that conforms to the xsd:double specification URI: xsd:double base : float uri : xsd:double Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Double"},{"location":"Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: xsd:double base : float uri : xsd:double","title":"Type: Double"},{"location":"Double/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Double/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"ElementDerivation/","text":"Class: ElementDerivation A specification of how to derive a target element from a source element. NOTE : this is an abstract class and should not be instantiated directly URI: linkmltr:ElementDerivation classDiagram class ElementDerivation ElementDerivation <|-- ClassDerivation ElementDerivation <|-- SlotDerivation ElementDerivation <|-- EnumDerivation ElementDerivation <|-- PermissibleValueDerivation ElementDerivation <|-- PrefixDerivation ElementDerivation : copy_directives ElementDerivation : is_a ElementDerivation : mixins ElementDerivation : name Inheritance ElementDerivation ClassDerivation SlotDerivation EnumDerivation PermissibleValueDerivation PrefixDerivation Slots Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct copy_directives 0..* CopyDirective direct is_a 0..1 ElementDerivation direct mixins 0..* ElementDerivation direct Usages used by used in type used ElementDerivation is_a range ElementDerivation ElementDerivation mixins range ElementDerivation ClassDerivation is_a range ElementDerivation ClassDerivation mixins range ElementDerivation SlotDerivation is_a range ElementDerivation SlotDerivation mixins range ElementDerivation EnumDerivation is_a range ElementDerivation EnumDerivation mixins range ElementDerivation PermissibleValueDerivation is_a range ElementDerivation PermissibleValueDerivation mixins range ElementDerivation PrefixDerivation is_a range ElementDerivation PrefixDerivation mixins range ElementDerivation Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:ElementDerivation native linkmltr:ElementDerivation LinkML Source Direct name: ElementDerivation description: A specification of how to derive a target element from a source element. from_schema: https://w3id.org/linkml/transformer rank: 1000 abstract: true attributes: name: name: name description: Name of the element in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: ElementDerivation inlined: true Induced name: ElementDerivation description: A specification of how to derive a target element from a source element. from_schema: https://w3id.org/linkml/transformer rank: 1000 abstract: true attributes: name: name: name description: Name of the element in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: name owner: ElementDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: ElementDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Class: ElementDerivation"},{"location":"ElementDerivation/#class-elementderivation","text":"A specification of how to derive a target element from a source element. NOTE : this is an abstract class and should not be instantiated directly URI: linkmltr:ElementDerivation classDiagram class ElementDerivation ElementDerivation <|-- ClassDerivation ElementDerivation <|-- SlotDerivation ElementDerivation <|-- EnumDerivation ElementDerivation <|-- PermissibleValueDerivation ElementDerivation <|-- PrefixDerivation ElementDerivation : copy_directives ElementDerivation : is_a ElementDerivation : mixins ElementDerivation : name","title":"Class: ElementDerivation"},{"location":"ElementDerivation/#inheritance","text":"ElementDerivation ClassDerivation SlotDerivation EnumDerivation PermissibleValueDerivation PrefixDerivation","title":"Inheritance"},{"location":"ElementDerivation/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct copy_directives 0..* CopyDirective direct is_a 0..1 ElementDerivation direct mixins 0..* ElementDerivation direct","title":"Slots"},{"location":"ElementDerivation/#usages","text":"used by used in type used ElementDerivation is_a range ElementDerivation ElementDerivation mixins range ElementDerivation ClassDerivation is_a range ElementDerivation ClassDerivation mixins range ElementDerivation SlotDerivation is_a range ElementDerivation SlotDerivation mixins range ElementDerivation EnumDerivation is_a range ElementDerivation EnumDerivation mixins range ElementDerivation PermissibleValueDerivation is_a range ElementDerivation PermissibleValueDerivation mixins range ElementDerivation PrefixDerivation is_a range ElementDerivation PrefixDerivation mixins range ElementDerivation","title":"Usages"},{"location":"ElementDerivation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"ElementDerivation/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"ElementDerivation/#mappings","text":"Mapping Type Mapped Value self linkmltr:ElementDerivation native linkmltr:ElementDerivation","title":"Mappings"},{"location":"ElementDerivation/#linkml-source","text":"","title":"LinkML Source"},{"location":"ElementDerivation/#direct","text":"name: ElementDerivation description: A specification of how to derive a target element from a source element. from_schema: https://w3id.org/linkml/transformer rank: 1000 abstract: true attributes: name: name: name description: Name of the element in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: ElementDerivation inlined: true","title":"Direct"},{"location":"ElementDerivation/#induced","text":"name: ElementDerivation description: A specification of how to derive a target element from a source element. from_schema: https://w3id.org/linkml/transformer rank: 1000 abstract: true attributes: name: name: name description: Name of the element in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: name owner: ElementDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: ElementDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Induced"},{"location":"EnumDerivation/","text":"Class: EnumDerivation A specification of how to derive the value of a target enum from a source enum URI: linkmltr:EnumDerivation classDiagram class EnumDerivation ElementDerivation <|-- EnumDerivation EnumDerivation : copy_directives EnumDerivation : expr EnumDerivation : hide EnumDerivation : is_a EnumDerivation : mixins EnumDerivation : name EnumDerivation : permissible_value_derivations EnumDerivation : populated_from Inheritance ElementDerivation EnumDerivation Slots Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct populated_from 0..1 xsd:string direct expr 0..1 xsd:string direct hide 0..1 xsd:string direct permissible_value_derivations 0..* PermissibleValueDerivation Instructions on how to derive a set of PVs in the target schema direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation Usages used by used in type used TransformationSpecification enum_derivations range EnumDerivation Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:EnumDerivation native linkmltr:EnumDerivation LinkML Source Direct name: EnumDerivation description: A specification of how to derive the value of a target enum from a source enum from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target enum name from_schema: https://w3id.org/linkml/transformer key: true populated_from: name: populated_from description: Source enum name from_schema: https://w3id.org/linkml/transformer range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer range: string hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer range: boolean permissible_value_derivations: name: permissible_value_derivations description: Instructions on how to derive a set of PVs in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: PermissibleValueDerivation inlined: true Induced name: EnumDerivation description: A specification of how to derive the value of a target enum from a source enum from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target enum name from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: EnumDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation populated_from: name: populated_from description: Source enum name from_schema: https://w3id.org/linkml/transformer alias: populated_from owner: EnumDerivation domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer alias: expr owner: EnumDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer alias: hide owner: EnumDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: boolean permissible_value_derivations: name: permissible_value_derivations description: Instructions on how to derive a set of PVs in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: permissible_value_derivations owner: EnumDerivation domain_of: - EnumDerivation range: PermissibleValueDerivation inlined: true copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: EnumDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: EnumDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: EnumDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Class: EnumDerivation"},{"location":"EnumDerivation/#class-enumderivation","text":"A specification of how to derive the value of a target enum from a source enum URI: linkmltr:EnumDerivation classDiagram class EnumDerivation ElementDerivation <|-- EnumDerivation EnumDerivation : copy_directives EnumDerivation : expr EnumDerivation : hide EnumDerivation : is_a EnumDerivation : mixins EnumDerivation : name EnumDerivation : permissible_value_derivations EnumDerivation : populated_from","title":"Class: EnumDerivation"},{"location":"EnumDerivation/#inheritance","text":"ElementDerivation EnumDerivation","title":"Inheritance"},{"location":"EnumDerivation/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct populated_from 0..1 xsd:string direct expr 0..1 xsd:string direct hide 0..1 xsd:string direct permissible_value_derivations 0..* PermissibleValueDerivation Instructions on how to derive a set of PVs in the target schema direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation","title":"Slots"},{"location":"EnumDerivation/#usages","text":"used by used in type used TransformationSpecification enum_derivations range EnumDerivation","title":"Usages"},{"location":"EnumDerivation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"EnumDerivation/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"EnumDerivation/#mappings","text":"Mapping Type Mapped Value self linkmltr:EnumDerivation native linkmltr:EnumDerivation","title":"Mappings"},{"location":"EnumDerivation/#linkml-source","text":"","title":"LinkML Source"},{"location":"EnumDerivation/#direct","text":"name: EnumDerivation description: A specification of how to derive the value of a target enum from a source enum from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target enum name from_schema: https://w3id.org/linkml/transformer key: true populated_from: name: populated_from description: Source enum name from_schema: https://w3id.org/linkml/transformer range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer range: string hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer range: boolean permissible_value_derivations: name: permissible_value_derivations description: Instructions on how to derive a set of PVs in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: PermissibleValueDerivation inlined: true","title":"Direct"},{"location":"EnumDerivation/#induced","text":"name: EnumDerivation description: A specification of how to derive the value of a target enum from a source enum from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target enum name from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: EnumDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation populated_from: name: populated_from description: Source enum name from_schema: https://w3id.org/linkml/transformer alias: populated_from owner: EnumDerivation domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer alias: expr owner: EnumDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer alias: hide owner: EnumDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: boolean permissible_value_derivations: name: permissible_value_derivations description: Instructions on how to derive a set of PVs in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: permissible_value_derivations owner: EnumDerivation domain_of: - EnumDerivation range: PermissibleValueDerivation inlined: true copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: EnumDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: EnumDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: EnumDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Induced"},{"location":"Float/","text":"Type: Float A real number that conforms to the xsd:float specification URI: xsd:float base : float uri : xsd:float Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Float"},{"location":"Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: xsd:float base : float uri : xsd:float","title":"Type: Float"},{"location":"Float/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Float/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Integer/","text":"Type: Integer An integer URI: xsd:integer base : int uri : xsd:integer Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Integer"},{"location":"Integer/#type-integer","text":"An integer URI: xsd:integer base : int uri : xsd:integer","title":"Type: Integer"},{"location":"Integer/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Integer/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Inverse/","text":"Class: Inverse Used for back references URI: linkmltr:Inverse classDiagram class Inverse Inverse : class_name Inverse : slot_name Slots Name Cardinality and Range Description Inheritance slot_name 0..1 xsd:string direct class_name 0..1 xsd:string direct Usages used by used in type used SlotDerivation inverse_of range Inverse Aliases backref back_references Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:Inverse native linkmltr:Inverse LinkML Source Direct name: Inverse description: Used for back references from_schema: https://w3id.org/linkml/transformer aliases: - backref - back_references rank: 1000 attributes: slot_name: name: slot_name from_schema: https://w3id.org/linkml/transformer rank: 1000 class_name: name: class_name from_schema: https://w3id.org/linkml/transformer rank: 1000 Induced name: Inverse description: Used for back references from_schema: https://w3id.org/linkml/transformer aliases: - backref - back_references rank: 1000 attributes: slot_name: name: slot_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: slot_name owner: Inverse domain_of: - Inverse class_name: name: class_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_name owner: Inverse domain_of: - Inverse","title":"Class: Inverse"},{"location":"Inverse/#class-inverse","text":"Used for back references URI: linkmltr:Inverse classDiagram class Inverse Inverse : class_name Inverse : slot_name","title":"Class: Inverse"},{"location":"Inverse/#slots","text":"Name Cardinality and Range Description Inheritance slot_name 0..1 xsd:string direct class_name 0..1 xsd:string direct","title":"Slots"},{"location":"Inverse/#usages","text":"used by used in type used SlotDerivation inverse_of range Inverse","title":"Usages"},{"location":"Inverse/#aliases","text":"backref back_references","title":"Aliases"},{"location":"Inverse/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Inverse/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"Inverse/#mappings","text":"Mapping Type Mapped Value self linkmltr:Inverse native linkmltr:Inverse","title":"Mappings"},{"location":"Inverse/#linkml-source","text":"","title":"LinkML Source"},{"location":"Inverse/#direct","text":"name: Inverse description: Used for back references from_schema: https://w3id.org/linkml/transformer aliases: - backref - back_references rank: 1000 attributes: slot_name: name: slot_name from_schema: https://w3id.org/linkml/transformer rank: 1000 class_name: name: class_name from_schema: https://w3id.org/linkml/transformer rank: 1000","title":"Direct"},{"location":"Inverse/#induced","text":"name: Inverse description: Used for back references from_schema: https://w3id.org/linkml/transformer aliases: - backref - back_references rank: 1000 attributes: slot_name: name: slot_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: slot_name owner: Inverse domain_of: - Inverse class_name: name: class_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_name owner: Inverse domain_of: - Inverse","title":"Induced"},{"location":"KeyVal/","text":"Class: KeyVal URI: linkmltr:KeyVal classDiagram class KeyVal KeyVal : key KeyVal : value Slots Name Cardinality and Range Description Inheritance key 0..1 xsd:string direct value 0..1 Any direct Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:KeyVal native linkmltr:KeyVal LinkML Source Direct name: KeyVal from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: key: name: key from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true value: name: value from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any Induced name: KeyVal from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: key: name: key from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: key owner: KeyVal domain_of: - KeyVal value: name: value from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: value owner: KeyVal domain_of: - KeyVal range: Any","title":"Class: KeyVal"},{"location":"KeyVal/#class-keyval","text":"URI: linkmltr:KeyVal classDiagram class KeyVal KeyVal : key KeyVal : value","title":"Class: KeyVal"},{"location":"KeyVal/#slots","text":"Name Cardinality and Range Description Inheritance key 0..1 xsd:string direct value 0..1 Any direct","title":"Slots"},{"location":"KeyVal/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"KeyVal/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"KeyVal/#mappings","text":"Mapping Type Mapped Value self linkmltr:KeyVal native linkmltr:KeyVal","title":"Mappings"},{"location":"KeyVal/#linkml-source","text":"","title":"LinkML Source"},{"location":"KeyVal/#direct","text":"name: KeyVal from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: key: name: key from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true value: name: value from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Any","title":"Direct"},{"location":"KeyVal/#induced","text":"name: KeyVal from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: key: name: key from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: key owner: KeyVal domain_of: - KeyVal value: name: value from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: value owner: KeyVal domain_of: - KeyVal range: Any","title":"Induced"},{"location":"Ncname/","text":"Type: Ncname Prefix part of CURIE URI: xsd:string base : NCName uri : xsd:string repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Ncname"},{"location":"Ncname/#type-ncname","text":"Prefix part of CURIE URI: xsd:string base : NCName uri : xsd:string repr : str","title":"Type: Ncname"},{"location":"Ncname/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Ncname/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Nodeidentifier/","text":"Type: Nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: shex:nonLiteral base : NodeIdentifier uri : shex:nonLiteral repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Nodeidentifier"},{"location":"Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: shex:nonLiteral base : NodeIdentifier uri : shex:nonLiteral repr : str","title":"Type: Nodeidentifier"},{"location":"Nodeidentifier/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Nodeidentifier/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Objectidentifier/","text":"Type: Objectidentifier A URI or CURIE that represents an object in the model. URI: shex:iri base : ElementIdentifier uri : shex:iri repr : str Comments Used for inheritence and type checking Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Objectidentifier"},{"location":"Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: shex:iri base : ElementIdentifier uri : shex:iri repr : str","title":"Type: Objectidentifier"},{"location":"Objectidentifier/#comments","text":"Used for inheritence and type checking","title":"Comments"},{"location":"Objectidentifier/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Objectidentifier/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"PermissibleValueDerivation/","text":"Class: PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum URI: linkmltr:PermissibleValueDerivation classDiagram class PermissibleValueDerivation ElementDerivation <|-- PermissibleValueDerivation PermissibleValueDerivation : copy_directives PermissibleValueDerivation : expr PermissibleValueDerivation : hide PermissibleValueDerivation : is_a PermissibleValueDerivation : mixins PermissibleValueDerivation : name Inheritance ElementDerivation PermissibleValueDerivation Slots Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct expr 0..1 xsd:string direct hide 0..1 xsd:string direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation Usages used by used in type used EnumDerivation permissible_value_derivations range PermissibleValueDerivation TODOs this is currently under-specified. We will need boolean combinators to express if-then-else Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:PermissibleValueDerivation native linkmltr:PermissibleValueDerivation LinkML Source Direct name: PermissibleValueDerivation description: A specification of how to derive the value of a PV from a source enum todos: - this is currently under-specified. We will need boolean combinators to express if-then-else from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target permissible value text from_schema: https://w3id.org/linkml/transformer key: true expr: name: expr from_schema: https://w3id.org/linkml/transformer range: string hide: name: hide from_schema: https://w3id.org/linkml/transformer range: boolean Induced name: PermissibleValueDerivation description: A specification of how to derive the value of a PV from a source enum todos: - this is currently under-specified. We will need boolean combinators to express if-then-else from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target permissible value text from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: PermissibleValueDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation expr: name: expr from_schema: https://w3id.org/linkml/transformer alias: expr owner: PermissibleValueDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string hide: name: hide from_schema: https://w3id.org/linkml/transformer alias: hide owner: PermissibleValueDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: boolean copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: PermissibleValueDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: PermissibleValueDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: PermissibleValueDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Class: PermissibleValueDerivation"},{"location":"PermissibleValueDerivation/#class-permissiblevaluederivation","text":"A specification of how to derive the value of a PV from a source enum URI: linkmltr:PermissibleValueDerivation classDiagram class PermissibleValueDerivation ElementDerivation <|-- PermissibleValueDerivation PermissibleValueDerivation : copy_directives PermissibleValueDerivation : expr PermissibleValueDerivation : hide PermissibleValueDerivation : is_a PermissibleValueDerivation : mixins PermissibleValueDerivation : name","title":"Class: PermissibleValueDerivation"},{"location":"PermissibleValueDerivation/#inheritance","text":"ElementDerivation PermissibleValueDerivation","title":"Inheritance"},{"location":"PermissibleValueDerivation/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct expr 0..1 xsd:string direct hide 0..1 xsd:string direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation","title":"Slots"},{"location":"PermissibleValueDerivation/#usages","text":"used by used in type used EnumDerivation permissible_value_derivations range PermissibleValueDerivation","title":"Usages"},{"location":"PermissibleValueDerivation/#todos","text":"this is currently under-specified. We will need boolean combinators to express if-then-else","title":"TODOs"},{"location":"PermissibleValueDerivation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"PermissibleValueDerivation/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"PermissibleValueDerivation/#mappings","text":"Mapping Type Mapped Value self linkmltr:PermissibleValueDerivation native linkmltr:PermissibleValueDerivation","title":"Mappings"},{"location":"PermissibleValueDerivation/#linkml-source","text":"","title":"LinkML Source"},{"location":"PermissibleValueDerivation/#direct","text":"name: PermissibleValueDerivation description: A specification of how to derive the value of a PV from a source enum todos: - this is currently under-specified. We will need boolean combinators to express if-then-else from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target permissible value text from_schema: https://w3id.org/linkml/transformer key: true expr: name: expr from_schema: https://w3id.org/linkml/transformer range: string hide: name: hide from_schema: https://w3id.org/linkml/transformer range: boolean","title":"Direct"},{"location":"PermissibleValueDerivation/#induced","text":"name: PermissibleValueDerivation description: A specification of how to derive the value of a PV from a source enum todos: - this is currently under-specified. We will need boolean combinators to express if-then-else from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target permissible value text from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: PermissibleValueDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation expr: name: expr from_schema: https://w3id.org/linkml/transformer alias: expr owner: PermissibleValueDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string hide: name: hide from_schema: https://w3id.org/linkml/transformer alias: hide owner: PermissibleValueDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: boolean copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: PermissibleValueDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: PermissibleValueDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: PermissibleValueDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Induced"},{"location":"PrefixDerivation/","text":"Class: PrefixDerivation URI: linkmltr:PrefixDerivation classDiagram class PrefixDerivation ElementDerivation <|-- PrefixDerivation PrefixDerivation : copy_directives PrefixDerivation : is_a PrefixDerivation : mixins PrefixDerivation : name Inheritance ElementDerivation PrefixDerivation Slots Name Cardinality and Range Description Inheritance name 0..1 xsd:string Name of the element in the target schema ElementDerivation copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:PrefixDerivation native linkmltr:PrefixDerivation LinkML Source Direct name: PrefixDerivation from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation Induced name: PrefixDerivation from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Name of the element in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: name owner: PrefixDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: PrefixDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: PrefixDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: PrefixDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Class: PrefixDerivation"},{"location":"PrefixDerivation/#class-prefixderivation","text":"URI: linkmltr:PrefixDerivation classDiagram class PrefixDerivation ElementDerivation <|-- PrefixDerivation PrefixDerivation : copy_directives PrefixDerivation : is_a PrefixDerivation : mixins PrefixDerivation : name","title":"Class: PrefixDerivation"},{"location":"PrefixDerivation/#inheritance","text":"ElementDerivation PrefixDerivation","title":"Inheritance"},{"location":"PrefixDerivation/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 xsd:string Name of the element in the target schema ElementDerivation copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation","title":"Slots"},{"location":"PrefixDerivation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"PrefixDerivation/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"PrefixDerivation/#mappings","text":"Mapping Type Mapped Value self linkmltr:PrefixDerivation native linkmltr:PrefixDerivation","title":"Mappings"},{"location":"PrefixDerivation/#linkml-source","text":"","title":"LinkML Source"},{"location":"PrefixDerivation/#direct","text":"name: PrefixDerivation from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation","title":"Direct"},{"location":"PrefixDerivation/#induced","text":"name: PrefixDerivation from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Name of the element in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: name owner: PrefixDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: PrefixDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: PrefixDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: PrefixDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Induced"},{"location":"SlotDerivation/","text":"Class: SlotDerivation A specification of how to derive the value of a target slot from a source slot URI: linkmltr:SlotDerivation classDiagram class SlotDerivation ElementDerivation <|-- SlotDerivation SlotDerivation : copy_directives SlotDerivation : expr SlotDerivation : hide SlotDerivation : inverse_of SlotDerivation : is_a SlotDerivation : mixins SlotDerivation : name SlotDerivation : populated_from SlotDerivation : type_designator Inheritance ElementDerivation SlotDerivation Slots Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct populated_from 0..1 xsd:string direct expr 0..1 xsd:string direct inverse_of 0..1 Inverse Used to specify a class-slot tuple that is the inverse of the derived/target ... direct hide 0..1 xsd:string direct type_designator 0..1 xsd:boolean direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation Usages used by used in type used TransformationSpecification slot_derivations range SlotDerivation ClassDerivation slot_derivations range SlotDerivation Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:SlotDerivation native linkmltr:SlotDerivation LinkML Source Direct name: SlotDerivation description: A specification of how to derive the value of a target slot from a source slot from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target slot name from_schema: https://w3id.org/linkml/transformer key: true populated_from: name: populated_from description: Source slot name from_schema: https://w3id.org/linkml/transformer range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer rank: 1000 range: string inverse_of: name: inverse_of description: Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Inverse hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean type_designator: name: type_designator from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean Induced name: SlotDerivation description: A specification of how to derive the value of a target slot from a source slot from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target slot name from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: SlotDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation populated_from: name: populated_from description: Source slot name from_schema: https://w3id.org/linkml/transformer alias: populated_from owner: SlotDerivation domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: expr owner: SlotDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string inverse_of: name: inverse_of description: Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: inverse_of owner: SlotDerivation domain_of: - SlotDerivation range: Inverse hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: hide owner: SlotDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: boolean type_designator: name: type_designator from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: type_designator owner: SlotDerivation domain_of: - SlotDerivation range: boolean copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: SlotDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: SlotDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: SlotDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Class: SlotDerivation"},{"location":"SlotDerivation/#class-slotderivation","text":"A specification of how to derive the value of a target slot from a source slot URI: linkmltr:SlotDerivation classDiagram class SlotDerivation ElementDerivation <|-- SlotDerivation SlotDerivation : copy_directives SlotDerivation : expr SlotDerivation : hide SlotDerivation : inverse_of SlotDerivation : is_a SlotDerivation : mixins SlotDerivation : name SlotDerivation : populated_from SlotDerivation : type_designator","title":"Class: SlotDerivation"},{"location":"SlotDerivation/#inheritance","text":"ElementDerivation SlotDerivation","title":"Inheritance"},{"location":"SlotDerivation/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 xsd:string direct populated_from 0..1 xsd:string direct expr 0..1 xsd:string direct inverse_of 0..1 Inverse Used to specify a class-slot tuple that is the inverse of the derived/target ... direct hide 0..1 xsd:string direct type_designator 0..1 xsd:boolean direct copy_directives 0..* CopyDirective ElementDerivation is_a 0..1 ElementDerivation ElementDerivation mixins 0..* ElementDerivation ElementDerivation","title":"Slots"},{"location":"SlotDerivation/#usages","text":"used by used in type used TransformationSpecification slot_derivations range SlotDerivation ClassDerivation slot_derivations range SlotDerivation","title":"Usages"},{"location":"SlotDerivation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"SlotDerivation/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"SlotDerivation/#mappings","text":"Mapping Type Mapped Value self linkmltr:SlotDerivation native linkmltr:SlotDerivation","title":"Mappings"},{"location":"SlotDerivation/#linkml-source","text":"","title":"LinkML Source"},{"location":"SlotDerivation/#direct","text":"name: SlotDerivation description: A specification of how to derive the value of a target slot from a source slot from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target slot name from_schema: https://w3id.org/linkml/transformer key: true populated_from: name: populated_from description: Source slot name from_schema: https://w3id.org/linkml/transformer range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer rank: 1000 range: string inverse_of: name: inverse_of description: Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. from_schema: https://w3id.org/linkml/transformer rank: 1000 range: Inverse hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean type_designator: name: type_designator from_schema: https://w3id.org/linkml/transformer rank: 1000 range: boolean","title":"Direct"},{"location":"SlotDerivation/#induced","text":"name: SlotDerivation description: A specification of how to derive the value of a target slot from a source slot from_schema: https://w3id.org/linkml/transformer rank: 1000 is_a: ElementDerivation attributes: name: name: name description: Target slot name from_schema: https://w3id.org/linkml/transformer key: true alias: name owner: SlotDerivation domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation populated_from: name: populated_from description: Source slot name from_schema: https://w3id.org/linkml/transformer alias: populated_from owner: SlotDerivation domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string expr: name: expr description: An expression to be evaluated on the source object to derive the target slot. Should be specified using the LinkML expression language. from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: expr owner: SlotDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string inverse_of: name: inverse_of description: Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: inverse_of owner: SlotDerivation domain_of: - SlotDerivation range: Inverse hide: name: hide description: True if this is suppressed from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: hide owner: SlotDerivation domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: boolean type_designator: name: type_designator from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: type_designator owner: SlotDerivation domain_of: - SlotDerivation range: boolean copy_directives: name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: SlotDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true is_a: name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: SlotDerivation domain_of: - ElementDerivation range: ElementDerivation mixins: name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: SlotDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Induced"},{"location":"String/","text":"Type: String A character string URI: xsd:string base : str uri : xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: String"},{"location":"String/#type-string","text":"A character string URI: xsd:string base : str uri : xsd:string","title":"Type: String"},{"location":"String/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"String/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Time/","text":"Type: Time A time object represents a (local) time of day, independent of any particular day URI: xsd:dateTime base : XSDTime uri : xsd:dateTime repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Time"},{"location":"Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: xsd:dateTime base : XSDTime uri : xsd:dateTime repr : str","title":"Type: Time"},{"location":"Time/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Time/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"TransformationSpecification/","text":"Class: TransformationSpecification A collection of mappings between source and target classes URI: linkmltr:TransformationSpecification classDiagram class TransformationSpecification TransformationSpecification : class_derivations TransformationSpecification : enum_derivations TransformationSpecification : id TransformationSpecification : prefixes TransformationSpecification : slot_derivations TransformationSpecification : source_schema TransformationSpecification : target_schema TransformationSpecification : title Slots Name Cardinality and Range Description Inheritance id 1..1 xsd:string Unique identifier for this transformation specification direct title 0..1 xsd:string human readable title for this transformation specification direct prefixes 0..1 xsd:string prefix map direct source_schema 0..1 xsd:string name of the schema that describes the source (input) objects direct target_schema 0..1 xsd:string name of the schema that describes the target (output) objects direct class_derivations 0..* ClassDerivation Instructions on how to derive a set of classes in the target schema from clas... direct enum_derivations 0..* EnumDerivation Instructions on how to derive a set of enums in the target schema direct slot_derivations 0..1 xsd:string direct Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer Mappings Mapping Type Mapped Value self linkmltr:TransformationSpecification native linkmltr:TransformationSpecification LinkML Source Direct name: TransformationSpecification description: A collection of mappings between source and target classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: id: name: id description: Unique identifier for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 identifier: true title: name: title description: human readable title for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 prefixes: name: prefixes description: prefix map from_schema: https://w3id.org/linkml/transformer rank: 1000 source_schema: name: source_schema description: name of the schema that describes the source (input) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 target_schema: name: target_schema description: name of the schema that describes the target (output) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 class_derivations: name: class_derivations description: Instructions on how to derive a set of classes in the target schema from classes in the source schema. from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: ClassDerivation inlined: true enum_derivations: name: enum_derivations description: Instructions on how to derive a set of enums in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: EnumDerivation inlined: true slot_derivations: name: slot_derivations description: Instructions on how to derive a set of top level slots in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: SlotDerivation inlined: true tree_root: true Induced name: TransformationSpecification description: A collection of mappings between source and target classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: id: name: id description: Unique identifier for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 identifier: true alias: id owner: TransformationSpecification domain_of: - TransformationSpecification title: name: title description: human readable title for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: title owner: TransformationSpecification domain_of: - TransformationSpecification prefixes: name: prefixes description: prefix map from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: prefixes owner: TransformationSpecification domain_of: - TransformationSpecification source_schema: name: source_schema description: name of the schema that describes the source (input) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: source_schema owner: TransformationSpecification domain_of: - TransformationSpecification target_schema: name: target_schema description: name of the schema that describes the target (output) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: target_schema owner: TransformationSpecification domain_of: - TransformationSpecification class_derivations: name: class_derivations description: Instructions on how to derive a set of classes in the target schema from classes in the source schema. from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: class_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: ClassDerivation inlined: true enum_derivations: name: enum_derivations description: Instructions on how to derive a set of enums in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: enum_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: EnumDerivation inlined: true slot_derivations: name: slot_derivations description: Instructions on how to derive a set of top level slots in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: slot_derivations owner: TransformationSpecification domain_of: - TransformationSpecification - ClassDerivation range: SlotDerivation inlined: true tree_root: true","title":"Class: TransformationSpecification"},{"location":"TransformationSpecification/#class-transformationspecification","text":"A collection of mappings between source and target classes URI: linkmltr:TransformationSpecification classDiagram class TransformationSpecification TransformationSpecification : class_derivations TransformationSpecification : enum_derivations TransformationSpecification : id TransformationSpecification : prefixes TransformationSpecification : slot_derivations TransformationSpecification : source_schema TransformationSpecification : target_schema TransformationSpecification : title","title":"Class: TransformationSpecification"},{"location":"TransformationSpecification/#slots","text":"Name Cardinality and Range Description Inheritance id 1..1 xsd:string Unique identifier for this transformation specification direct title 0..1 xsd:string human readable title for this transformation specification direct prefixes 0..1 xsd:string prefix map direct source_schema 0..1 xsd:string name of the schema that describes the source (input) objects direct target_schema 0..1 xsd:string name of the schema that describes the target (output) objects direct class_derivations 0..* ClassDerivation Instructions on how to derive a set of classes in the target schema from clas... direct enum_derivations 0..* EnumDerivation Instructions on how to derive a set of enums in the target schema direct slot_derivations 0..1 xsd:string direct","title":"Slots"},{"location":"TransformationSpecification/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"TransformationSpecification/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"TransformationSpecification/#mappings","text":"Mapping Type Mapped Value self linkmltr:TransformationSpecification native linkmltr:TransformationSpecification","title":"Mappings"},{"location":"TransformationSpecification/#linkml-source","text":"","title":"LinkML Source"},{"location":"TransformationSpecification/#direct","text":"name: TransformationSpecification description: A collection of mappings between source and target classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: id: name: id description: Unique identifier for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 identifier: true title: name: title description: human readable title for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 prefixes: name: prefixes description: prefix map from_schema: https://w3id.org/linkml/transformer rank: 1000 source_schema: name: source_schema description: name of the schema that describes the source (input) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 target_schema: name: target_schema description: name of the schema that describes the target (output) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 class_derivations: name: class_derivations description: Instructions on how to derive a set of classes in the target schema from classes in the source schema. from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: ClassDerivation inlined: true enum_derivations: name: enum_derivations description: Instructions on how to derive a set of enums in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: EnumDerivation inlined: true slot_derivations: name: slot_derivations description: Instructions on how to derive a set of top level slots in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true range: SlotDerivation inlined: true tree_root: true","title":"Direct"},{"location":"TransformationSpecification/#induced","text":"name: TransformationSpecification description: A collection of mappings between source and target classes from_schema: https://w3id.org/linkml/transformer rank: 1000 attributes: id: name: id description: Unique identifier for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 identifier: true alias: id owner: TransformationSpecification domain_of: - TransformationSpecification title: name: title description: human readable title for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: title owner: TransformationSpecification domain_of: - TransformationSpecification prefixes: name: prefixes description: prefix map from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: prefixes owner: TransformationSpecification domain_of: - TransformationSpecification source_schema: name: source_schema description: name of the schema that describes the source (input) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: source_schema owner: TransformationSpecification domain_of: - TransformationSpecification target_schema: name: target_schema description: name of the schema that describes the target (output) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: target_schema owner: TransformationSpecification domain_of: - TransformationSpecification class_derivations: name: class_derivations description: Instructions on how to derive a set of classes in the target schema from classes in the source schema. from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: class_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: ClassDerivation inlined: true enum_derivations: name: enum_derivations description: Instructions on how to derive a set of enums in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: enum_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: EnumDerivation inlined: true slot_derivations: name: slot_derivations description: Instructions on how to derive a set of top level slots in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: slot_derivations owner: TransformationSpecification domain_of: - TransformationSpecification - ClassDerivation range: SlotDerivation inlined: true tree_root: true","title":"Induced"},{"location":"Uri/","text":"Type: Uri a complete URI URI: xsd:anyURI base : URI uri : xsd:anyURI repr : str Comments in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Uri"},{"location":"Uri/#type-uri","text":"a complete URI URI: xsd:anyURI base : URI uri : xsd:anyURI repr : str","title":"Type: Uri"},{"location":"Uri/#comments","text":"in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node","title":"Comments"},{"location":"Uri/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Uri/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"Uriorcurie/","text":"Type: Uriorcurie a URI or a CURIE URI: xsd:anyURI base : URIorCURIE uri : xsd:anyURI repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/types","title":"Type: Uriorcurie"},{"location":"Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: xsd:anyURI base : URIorCURIE uri : xsd:anyURI repr : str","title":"Type: Uriorcurie"},{"location":"Uriorcurie/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Uriorcurie/#schema-source","text":"from schema: https://w3id.org/linkml/types","title":"Schema Source"},{"location":"add/","text":"Slot: add URI: linkmltr:add Applicable Classes Name Description CopyDirective Properties Range: Any Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: add from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: add owner: CopyDirective domain_of: - CopyDirective range: Any","title":"Slot: add"},{"location":"add/#slot-add","text":"URI: linkmltr:add","title":"Slot: add"},{"location":"add/#applicable-classes","text":"Name Description CopyDirective","title":"Applicable Classes"},{"location":"add/#properties","text":"Range: Any","title":"Properties"},{"location":"add/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"add/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"add/#linkml-source","text":"name: add from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: add owner: CopyDirective domain_of: - CopyDirective range: Any","title":"LinkML Source"},{"location":"alias/","text":"Slot: alias name of the class to be aliased URI: linkmltr:alias Applicable Classes Name Description AliasedClass alias-class key value pairs for classes Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: alias description: name of the class to be aliased from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: alias owner: AliasedClass domain_of: - AliasedClass range: string","title":"Slot: alias"},{"location":"alias/#slot-alias","text":"name of the class to be aliased URI: linkmltr:alias","title":"Slot: alias"},{"location":"alias/#applicable-classes","text":"Name Description AliasedClass alias-class key value pairs for classes","title":"Applicable Classes"},{"location":"alias/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"alias/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"alias/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"alias/#linkml-source","text":"name: alias description: name of the class to be aliased from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: alias owner: AliasedClass domain_of: - AliasedClass range: string","title":"LinkML Source"},{"location":"class_derivations/","text":"Slot: class_derivations Instructions on how to derive a set of classes in the target schema from classes in the source schema. URI: linkmltr:class_derivations Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes Properties Range: ClassDerivation Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: class_derivations description: Instructions on how to derive a set of classes in the target schema from classes in the source schema. from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: class_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: ClassDerivation inlined: true","title":"Slot: class_derivations"},{"location":"class_derivations/#slot-class_derivations","text":"Instructions on how to derive a set of classes in the target schema from classes in the source schema. URI: linkmltr:class_derivations","title":"Slot: class_derivations"},{"location":"class_derivations/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes","title":"Applicable Classes"},{"location":"class_derivations/#properties","text":"Range: ClassDerivation Multivalued: True","title":"Properties"},{"location":"class_derivations/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"class_derivations/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"class_derivations/#linkml-source","text":"name: class_derivations description: Instructions on how to derive a set of classes in the target schema from classes in the source schema. from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: class_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: ClassDerivation inlined: true","title":"LinkML Source"},{"location":"class_name/","text":"Slot: class_name URI: linkmltr:class_name Applicable Classes Name Description Inverse Used for back references Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: class_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_name owner: Inverse domain_of: - Inverse range: string","title":"Slot: class_name"},{"location":"class_name/#slot-class_name","text":"URI: linkmltr:class_name","title":"Slot: class_name"},{"location":"class_name/#applicable-classes","text":"Name Description Inverse Used for back references","title":"Applicable Classes"},{"location":"class_name/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"class_name/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"class_name/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"class_name/#linkml-source","text":"name: class_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_name owner: Inverse domain_of: - Inverse range: string","title":"LinkML Source"},{"location":"class_named/","text":"Slot: class_named local alias for the class URI: linkmltr:class_named Applicable Classes Name Description AliasedClass alias-class key value pairs for classes Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: class_named description: local alias for the class from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_named owner: AliasedClass domain_of: - AliasedClass range: string","title":"Slot: class_named"},{"location":"class_named/#slot-class_named","text":"local alias for the class URI: linkmltr:class_named","title":"Slot: class_named"},{"location":"class_named/#applicable-classes","text":"Name Description AliasedClass alias-class key value pairs for classes","title":"Applicable Classes"},{"location":"class_named/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"class_named/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"class_named/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"class_named/#linkml-source","text":"name: class_named description: local alias for the class from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: class_named owner: AliasedClass domain_of: - AliasedClass range: string","title":"LinkML Source"},{"location":"copy_all/","text":"Slot: copy_all URI: linkmltr:copy_all Applicable Classes Name Description CopyDirective Properties Range: xsd:boolean Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: copy_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: copy_all owner: CopyDirective domain_of: - CopyDirective range: boolean","title":"Slot: copy_all"},{"location":"copy_all/#slot-copy_all","text":"URI: linkmltr:copy_all","title":"Slot: copy_all"},{"location":"copy_all/#applicable-classes","text":"Name Description CopyDirective","title":"Applicable Classes"},{"location":"copy_all/#properties","text":"Range: xsd:boolean","title":"Properties"},{"location":"copy_all/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"copy_all/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"copy_all/#linkml-source","text":"name: copy_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: copy_all owner: CopyDirective domain_of: - CopyDirective range: boolean","title":"LinkML Source"},{"location":"copy_directives/","text":"Slot: copy_directives URI: linkmltr:copy_directives Applicable Classes Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation Properties Range: CopyDirective Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: ElementDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true","title":"Slot: copy_directives"},{"location":"copy_directives/#slot-copy_directives","text":"URI: linkmltr:copy_directives","title":"Slot: copy_directives"},{"location":"copy_directives/#applicable-classes","text":"Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation","title":"Applicable Classes"},{"location":"copy_directives/#properties","text":"Range: CopyDirective Multivalued: True","title":"Properties"},{"location":"copy_directives/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"copy_directives/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"copy_directives/#linkml-source","text":"name: copy_directives from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: copy_directives owner: ElementDerivation domain_of: - ElementDerivation range: CopyDirective inlined: true","title":"LinkML Source"},{"location":"element_name/","text":"Slot: element_name URI: linkmltr:element_name Applicable Classes Name Description CopyDirective Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: element_name from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: element_name owner: CopyDirective domain_of: - CopyDirective range: string","title":"Slot: element_name"},{"location":"element_name/#slot-element_name","text":"URI: linkmltr:element_name","title":"Slot: element_name"},{"location":"element_name/#applicable-classes","text":"Name Description CopyDirective","title":"Applicable Classes"},{"location":"element_name/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"element_name/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"element_name/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"element_name/#linkml-source","text":"name: element_name from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: element_name owner: CopyDirective domain_of: - CopyDirective range: string","title":"LinkML Source"},{"location":"enum_derivations/","text":"Slot: enum_derivations Instructions on how to derive a set of enums in the target schema URI: linkmltr:enum_derivations Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes Properties Range: EnumDerivation Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: enum_derivations description: Instructions on how to derive a set of enums in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: enum_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: EnumDerivation inlined: true","title":"Slot: enum_derivations"},{"location":"enum_derivations/#slot-enum_derivations","text":"Instructions on how to derive a set of enums in the target schema URI: linkmltr:enum_derivations","title":"Slot: enum_derivations"},{"location":"enum_derivations/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes","title":"Applicable Classes"},{"location":"enum_derivations/#properties","text":"Range: EnumDerivation Multivalued: True","title":"Properties"},{"location":"enum_derivations/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"enum_derivations/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"enum_derivations/#linkml-source","text":"name: enum_derivations description: Instructions on how to derive a set of enums in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: enum_derivations owner: TransformationSpecification domain_of: - TransformationSpecification range: EnumDerivation inlined: true","title":"LinkML Source"},{"location":"exclude/","text":"Slot: exclude URI: linkmltr:exclude Applicable Classes Name Description CopyDirective Properties Range: Any Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: exclude from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude owner: CopyDirective domain_of: - CopyDirective range: Any","title":"Slot: exclude"},{"location":"exclude/#slot-exclude","text":"URI: linkmltr:exclude","title":"Slot: exclude"},{"location":"exclude/#applicable-classes","text":"Name Description CopyDirective","title":"Applicable Classes"},{"location":"exclude/#properties","text":"Range: Any","title":"Properties"},{"location":"exclude/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"exclude/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"exclude/#linkml-source","text":"name: exclude from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude owner: CopyDirective domain_of: - CopyDirective range: Any","title":"LinkML Source"},{"location":"exclude_all/","text":"Slot: exclude_all URI: linkmltr:exclude_all Applicable Classes Name Description CopyDirective Properties Range: xsd:boolean Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: exclude_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude_all owner: CopyDirective domain_of: - CopyDirective range: boolean","title":"Slot: exclude_all"},{"location":"exclude_all/#slot-exclude_all","text":"URI: linkmltr:exclude_all","title":"Slot: exclude_all"},{"location":"exclude_all/#applicable-classes","text":"Name Description CopyDirective","title":"Applicable Classes"},{"location":"exclude_all/#properties","text":"Range: xsd:boolean","title":"Properties"},{"location":"exclude_all/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"exclude_all/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"exclude_all/#linkml-source","text":"name: exclude_all from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: exclude_all owner: CopyDirective domain_of: - CopyDirective range: boolean","title":"LinkML Source"},{"location":"expr/","text":"Slot: expr URI: linkmltr:expr Applicable Classes Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum Properties Range: xsd:string Identifier and Mapping Information LinkML Source name: expr alias: expr domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string","title":"Slot: expr"},{"location":"expr/#slot-expr","text":"URI: linkmltr:expr","title":"Slot: expr"},{"location":"expr/#applicable-classes","text":"Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum","title":"Applicable Classes"},{"location":"expr/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"expr/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"expr/#linkml-source","text":"name: expr alias: expr domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string","title":"LinkML Source"},{"location":"hide/","text":"Slot: hide URI: linkmltr:hide Applicable Classes Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum Properties Range: xsd:string Identifier and Mapping Information LinkML Source name: hide alias: hide domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string","title":"Slot: hide"},{"location":"hide/#slot-hide","text":"URI: linkmltr:hide","title":"Slot: hide"},{"location":"hide/#applicable-classes","text":"Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum","title":"Applicable Classes"},{"location":"hide/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"hide/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"hide/#linkml-source","text":"name: hide alias: hide domain_of: - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string","title":"LinkML Source"},{"location":"id/","text":"Slot: id Unique identifier for this transformation specification URI: linkmltr:id Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: id description: Unique identifier for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 identifier: true alias: id owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"Slot: id"},{"location":"id/#slot-id","text":"Unique identifier for this transformation specification URI: linkmltr:id","title":"Slot: id"},{"location":"id/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes","title":"Applicable Classes"},{"location":"id/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"id/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"id/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"id/#linkml-source","text":"name: id description: Unique identifier for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 identifier: true alias: id owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"LinkML Source"},{"location":"include/","text":"Slot: include URI: linkmltr:include Applicable Classes Name Description CopyDirective Properties Range: Any Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: include from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: include owner: CopyDirective domain_of: - CopyDirective range: Any","title":"Slot: include"},{"location":"include/#slot-include","text":"URI: linkmltr:include","title":"Slot: include"},{"location":"include/#applicable-classes","text":"Name Description CopyDirective","title":"Applicable Classes"},{"location":"include/#properties","text":"Range: Any","title":"Properties"},{"location":"include/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"include/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"include/#linkml-source","text":"name: include from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: include owner: CopyDirective domain_of: - CopyDirective range: Any","title":"LinkML Source"},{"location":"inverse_of/","text":"Slot: inverse_of Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. URI: linkmltr:inverse_of Applicable Classes Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo... Properties Range: Inverse Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: inverse_of description: Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: inverse_of owner: SlotDerivation domain_of: - SlotDerivation range: Inverse","title":"Slot: inverse_of"},{"location":"inverse_of/#slot-inverse_of","text":"Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. URI: linkmltr:inverse_of","title":"Slot: inverse_of"},{"location":"inverse_of/#applicable-classes","text":"Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo...","title":"Applicable Classes"},{"location":"inverse_of/#properties","text":"Range: Inverse","title":"Properties"},{"location":"inverse_of/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"inverse_of/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"inverse_of/#linkml-source","text":"name: inverse_of description: Used to specify a class-slot tuple that is the inverse of the derived/target slot. This is used primarily for mapping to relational databases or formalisms that do not allow multiple values. The class representing the repeated element has a foreign key slot inserted in that 'back references' the original multivalued slot. from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: inverse_of owner: SlotDerivation domain_of: - SlotDerivation range: Inverse","title":"LinkML Source"},{"location":"is_a/","text":"Slot: is_a URI: linkmltr:is_a Applicable Classes Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation Properties Range: ElementDerivation Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation","title":"Slot: is_a"},{"location":"is_a/#slot-is_a","text":"URI: linkmltr:is_a","title":"Slot: is_a"},{"location":"is_a/#applicable-classes","text":"Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation","title":"Applicable Classes"},{"location":"is_a/#properties","text":"Range: ElementDerivation","title":"Properties"},{"location":"is_a/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"is_a/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"is_a/#linkml-source","text":"name: is_a from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: is_a owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation","title":"LinkML Source"},{"location":"joins/","text":"Slot: joins Additional classes to be joined to derive instances of the target class URI: linkmltr:joins Applicable Classes Name Description ClassDerivation A specification of how to derive a target class from a source class Properties Range: AliasedClass Multivalued: True Comments not yet implemented Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: joins description: Additional classes to be joined to derive instances of the target class comments: - not yet implemented from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: joins owner: ClassDerivation domain_of: - ClassDerivation range: AliasedClass inlined: true","title":"Slot: joins"},{"location":"joins/#slot-joins","text":"Additional classes to be joined to derive instances of the target class URI: linkmltr:joins","title":"Slot: joins"},{"location":"joins/#applicable-classes","text":"Name Description ClassDerivation A specification of how to derive a target class from a source class","title":"Applicable Classes"},{"location":"joins/#properties","text":"Range: AliasedClass Multivalued: True","title":"Properties"},{"location":"joins/#comments","text":"not yet implemented","title":"Comments"},{"location":"joins/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"joins/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"joins/#linkml-source","text":"name: joins description: Additional classes to be joined to derive instances of the target class comments: - not yet implemented from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: joins owner: ClassDerivation domain_of: - ClassDerivation range: AliasedClass inlined: true","title":"LinkML Source"},{"location":"key/","text":"Slot: key URI: linkmltr:key Applicable Classes Name Description KeyVal Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: key from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: key owner: KeyVal domain_of: - KeyVal range: string","title":"Slot: key"},{"location":"key/#slot-key","text":"URI: linkmltr:key","title":"Slot: key"},{"location":"key/#applicable-classes","text":"Name Description KeyVal","title":"Applicable Classes"},{"location":"key/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"key/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"key/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"key/#linkml-source","text":"name: key from_schema: https://w3id.org/linkml/transformer rank: 1000 key: true alias: key owner: KeyVal domain_of: - KeyVal range: string","title":"LinkML Source"},{"location":"mixins/","text":"Slot: mixins URI: linkmltr:mixins Applicable Classes Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation Properties Range: ElementDerivation Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"Slot: mixins"},{"location":"mixins/#slot-mixins","text":"URI: linkmltr:mixins","title":"Slot: mixins"},{"location":"mixins/#applicable-classes","text":"Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation","title":"Applicable Classes"},{"location":"mixins/#properties","text":"Range: ElementDerivation Multivalued: True","title":"Properties"},{"location":"mixins/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"mixins/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"mixins/#linkml-source","text":"name: mixins from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: mixins owner: ElementDerivation domain_of: - ElementDerivation range: ElementDerivation inlined: true","title":"LinkML Source"},{"location":"name/","text":"Slot: name URI: linkmltr:name Applicable Classes Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation Properties Range: xsd:string Identifier and Mapping Information LinkML Source name: name alias: name domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string","title":"Slot: name"},{"location":"name/#slot-name","text":"URI: linkmltr:name","title":"Slot: name"},{"location":"name/#applicable-classes","text":"Name Description ElementDerivation A specification of how to derive a target element from a source element ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... PermissibleValueDerivation A specification of how to derive the value of a PV from a source enum PrefixDerivation","title":"Applicable Classes"},{"location":"name/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"name/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"name/#linkml-source","text":"name: name alias: name domain_of: - ElementDerivation - ClassDerivation - SlotDerivation - EnumDerivation - PermissibleValueDerivation range: string","title":"LinkML Source"},{"location":"overview/","text":"Mapping Between LinkML Schemas Draft 2022-06-24 Problem: map data from one schema to another Problem: Map d1 \u2192 d2 Assumption d1 and d2 conform to two separate schemas\\, s1\u2192 s2 Sub-problems: Ingest/Import: my data warehouse conforms to s2 (e.g. Monarch ingest) Export: make my data ingest friendly Migrations: s1 and s2 are different versions of the same schema Not in scope: in-schema syntactic or structural transforms JSON to YAML\\, JSON to TSV\\, JSON to SQL\\, JSON to RDF\\, ORM\\, \u2026 In LinkML this is already largely solved The actual problem space is highly varied S1 and S2 may be trivially isomorphic S1 and S2 may differ in complex or nuanced ways There are many existing approaches Generic frameworks\\, driven by declarative specification in Domain Specific Language (DSL) JSON-based Google whistle jsonpath-lift XSLT Semweb YARRML\\, R2RML Many many more\u2026 Bespoke transforms: non-declarative Implement in python/awk/etc. Hybrid: bespoke with some declarative mappings in ad-hoc format E.g. NMDC ingest framework Traps with declarative mapping Declarative is great\\, until it\u2019s not Anti-patterns: Insufficient expressivity to carry out real world tasks Bolting on features to mapping DSL until it\u2019s a fully-featured Turing-complete language Optimization/scalability at mercy of framework Messy layering between DSL and host language It can be useful to leverage host language features (e.g arbitrary python function) But this can get confusing: NFNF: Neither fish nor fowl Limits optimizations (forces iterative host language calls) YARRRML https://rml.io/yarrrml/ YARRRML notes Has a playground\\, which is great Mixes two concerns: 1. Isomorphic structural mapping between JSON/TSVs and RDF (already covered by JSON-LD) 2. Mapping This isn\u2019t necessarily bad - it\u2019s quite practical\\, but a little unsatisfying IMO jsonpath-lifter Was proposed for CCDH CRDC-node mappings Doesn\u2019t seem widely used Is there a big advantage over simply writing javascript functions? Koza (previously: bioweave) ETL frameworks There are many many ETL frameworks E.g. WebKarma Inherently mixing of concerns Here we are concerned with the \u201cT\u201d part Do existing frameworks separate out the T as a modular composable component? I\u2019m not sure Do we need Yet Another Mapping Framework? LinkML philosophy: Embrace\\, extend\\, parasitize Develop lightweight ways to map Map mappings to existing mapping frameworks This actually makes sense even if it sounds kind of meta\u2026 Level 0 Mapping: Isomorphic, same URIs classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address classes: Agent: class_uri: sdo:Person attributes: surname: slot_uri: sdo:familyName home_address: slot_uri: sdo:address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville Level 0: handled by standard linkml convert to/from RDF classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address classes: Agent: class_uri: sdo:Person attributes: surname: slot_uri: sdo:familyName home_address: slot_uri: sdo:address data2 (yaml/json) d ata1 (yaml/json) family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville d ata1.ttl == data2.ttl [sdo:familyName \u201cWu\u201d ; sdo:address \u201c1 my street\\, Oakville\u201d ] Level 0: Enums TODO: add example here. Basically this works the same way Level 0: HOWTO Compose two commands: linkml-convert -s schema1.yaml data1.yaml -o data1.ttl linkml-convert -s schema2.yaml data1.ttl -o data2.yaml That\u2019s it! TODO: Write a wrapper (linkml-map-data?) that does this in one command Level 0: other considerations Going via RDF in theory eliminates inlining differences E.g. s1 inlines address objects\\, s2 uses references (inlined: false) and includes a separate index slot for addresses Current status: Currently when going from s1 to s2\\, no index slots are generated This could be done as part of the general rdflib framework Lessons learned so far: annotate your schema with URIs! Annotating schemas with URIs is optional with LinkML But your future self and data users will thank you for careful schema annotation! Hints: Schema-automator can provide suggestions for your element and enum URIs Sometimes plain semweb URIs (e.g. schema.org) can be easier for interoperation than overly granular OBO ones E.g modeling Personhood as a role vs straightforward schema:Person Level 1 Mapping: Isomorphic, different URIs name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville Level 1 Mapping: mediated by URI mapping name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address subject_id object_id sdo:Person NCBITaxon:9606 sdo:familyName IAO:nnnn sdo:address IAO:0000422 family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ] [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ] Level 1: HOWTO Compose three commands: linkml-convert -s schema1.yaml data1.yaml -o data1.ttl sssom-map-iris -i data1.ttl -m schema1-to-schema2.sssom.tsv -o data2.ttl linkml-convert -s schema2.yaml data2.ttl -o data2.yaml That\u2019s it! TODO: sssom-map-iris does not yet exist (?)\\, but should be trivial Fold into wrapper CLI tool Nuances: Schemas have nuanced differences: not everything with be skos:exact We can distinguish 3 flavors of level 1 mapping: Precise\\, bidirectional: follow exact only Valid\\, unidirectional: follow exact + broad Loose: any mapping Level 1 variant: mappings in schema name: example-semweb-schema classes: Person: class_uri: sdo:Person exact_mappings: [\u201cNCBITaxon:9606\u201d] attributes: family_name: slot_uri: sdo:familyName exact_mappings: [\u201cIAO:nnnn\u201d] address: slot_uri: sdo:address exact_mappings: [\u201cIAO:0000422\u201d] name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ] [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ] Advantages of RDF as an intermediate Use of IRIs Separation of concerns Structural differences (e.g. inlining) are already handled by linkml convert Allows us to focus on semantic mappings Lessons learned so far: think about mappings https://linkml.io/linkml/faq/modeling.html#when-is-it-important-to-have-mappings https://github.com/alliance-genome/agr_curation_schema/blob/main/model/schema/agent.yaml More complex mappings: level 2 and above TODO: define levels 2 and above Examples of kinds of features: merging/splitting fields; e.g. full_name = first + \u201c \u201c + last Unit conversion or baked-in units to explicit units Normalization/denormalization (aka flattening) Complex logic If conditions A\\, B\\, C and not D are met then copy field F from X to Y LinkML Rule and Inference Framework Current use case is intra-schema inference Easy to invoke on command line Needs more docs! Could form basis of inter-schema DSL Examples Schemas differ in units Schemas differ in categorical vs quantitative Current use case is intra-schema inference Could form basis of inter-schema DSL Datalog Datalog could serve as the powerful basis of an expressive declarative transformation language https://linkml.io/linkml-datalog Approach for level 2+ Do we even want a generic mapping framework in LinkML here? This is a good \u201c parasitization hook\u201d Do complex stuff using an existing framework TBD: derive or semi-derive mapping specification? This is also a code bespoke procedural code hook Do the generic stuff with linkml-convert and isomorphic IRI mapping Do more complex stuff in code General approach for level 2+; same to same name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville JSON OR XML OR YAML OR RDF OR SQL JSON OR XML OR YAML OR RDF OR SQL (matches the one on the left) Existing mapping framework (X to X) Example of same-to-same: jsonpath-lifter name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville Jsonpath-lifter (JSON to JSON) Example of same-to-same: awk Example of same-to-same: SQL INSERT INTO Agent AS SELECT Person.last_name AS Agent.surname\\, CONCAT(Person.full_name\\, \u201c \u201c\\, Person.first) AS Agent.full_name\\, \u2026 CONSTRUCT { [ a schema:Person ; my:fullName STRCAT(...) ] } WHERE { ?person a schema:Person ; schema:firstName ; schema:lastName ; \u2026 } SPARQL CONSTRUCT RDF Engine or Triplestore Example of same-to-same: Python (LinkML objects) def convert(p: Person) -> Agent: return Agent(p.id\\, full_name=f\u201d{..} {..}\u201d\\, \u2026 Conversion script General approach for level 2+; heteromorphic name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville L inkml-convert OPTIONAL L inkml-convert OPTIONAL JSON OR XML OR YAML OR RDF OR SQL JSON OR XML OR YAML OR RDF OR SQL ( different from the one on the left) Existing mapping framework (X to Y) Example: YARRRML name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville YARRRML (JSON/YAML to RDF) Example: YARRRML, native mappings name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville mapping.yarrrml.yml Example: YARRRML, compiled mappings name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address Mappings : \u2026 \\< TO BE DEFINED LINKML MAPPING SPEC > name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville mapping.yarrrml.yml Hyperparasitism is good name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address Mappings : \u2026 \\< TO BE DEFINED LINKML MAPPING SPEC > name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address mapping.yarrrml.yml family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville Alternative: Direct translation language Desiderata Ability to compile to scalable frameworks E.g. compile to SQL Simple for simple tasks Layer on existing expression language Provides path to safe subset of host language (Python) Can be easily implemented in other languages Normalized to Denormalized (modeling SSSOM) SQL INSERT (or CREATE VIEW) SQL FROM Clause (implicit INNER JOIN/WHERE) SQL SELECT \u2026 AS clause Relationship to profiles TODO Profiles/IGs can be seen as a sub-case of schema mapping Current progress https://github.com/linkml/linkml/issues/533 map to YARRRML Vincent Vemonet has started on linkml->rml https://github.com/vemonet/linkml/blob/add-gen-rml/linkml/generators/rmlgen.py Relationship to Koza Koza ingests often require multiple files See Also Revisiting BioWeave (Kent Shefchek\\, 2020?) https://docs.google.com/presentation/d/1DYiWXoz3iHM2PvMFD0hRpJ544tnHawg00PBwNuESo44/edit#slide=id.gb33d7ddd1b_0_93 Automating mapping Should we pursue approaches to automate mapping? Some of the functionality is already in schema-automator. E.g. auto-annotating schema elements using ontologies Isomorphic schema mapping discovery analogous to ontology mapping Can a boomer type approach help? E.g. given multiple loose mappings with alternative interpretations\\, which ones give coherent results Other approaches Inductive Logic Programming: transformations as logic programs Genetic programming: transformations as lambda functions Deep Learning: e.g. Language Models for translation There is already a rich literature spanning decades here to be parasitized\u2026 Summary: just tell me what to do today For isomorphic mappings: Stay within LinkML/SSSOM No need for custom code\\, it all works For complex mappings: It depends! Do the structural mapping with linkml-convert Implement the complex logic as you see fit\\, depending on multiple factors. Any of the following may be valid Koza Awk SPARQL CONSTRUCTS or SELECTS Custom python YARRRML SQL INSERTs XSLT Jsonpath-lifter \u2026. Roadmap 2022: Continue to gather use cases\\, experiment 2023: If funding permits Extend metamodel to include complex mapping Implement EITHER Parasitizing converters Direct mapping framework TBD: Is this Koza2?","title":"Overview"},{"location":"overview/#mapping-between-linkml-schemas","text":"","title":"Mapping Between LinkML Schemas"},{"location":"overview/#draft","text":"2022-06-24","title":"Draft"},{"location":"overview/#problem-map-data-from-one-schema-to-another","text":"Problem: Map d1 \u2192 d2 Assumption d1 and d2 conform to two separate schemas\\, s1\u2192 s2 Sub-problems: Ingest/Import: my data warehouse conforms to s2 (e.g. Monarch ingest) Export: make my data ingest friendly Migrations: s1 and s2 are different versions of the same schema Not in scope: in-schema syntactic or structural transforms JSON to YAML\\, JSON to TSV\\, JSON to SQL\\, JSON to RDF\\, ORM\\, \u2026 In LinkML this is already largely solved The actual problem space is highly varied S1 and S2 may be trivially isomorphic S1 and S2 may differ in complex or nuanced ways","title":"Problem: map data from one schema to another"},{"location":"overview/#there-are-many-existing-approaches","text":"Generic frameworks\\, driven by declarative specification in Domain Specific Language (DSL) JSON-based Google whistle jsonpath-lift XSLT Semweb YARRML\\, R2RML Many many more\u2026 Bespoke transforms: non-declarative Implement in python/awk/etc. Hybrid: bespoke with some declarative mappings in ad-hoc format E.g. NMDC ingest framework","title":"There are many existing approaches"},{"location":"overview/#traps-with-declarative-mapping","text":"Declarative is great\\, until it\u2019s not Anti-patterns: Insufficient expressivity to carry out real world tasks Bolting on features to mapping DSL until it\u2019s a fully-featured Turing-complete language Optimization/scalability at mercy of framework Messy layering between DSL and host language It can be useful to leverage host language features (e.g arbitrary python function) But this can get confusing: NFNF: Neither fish nor fowl Limits optimizations (forces iterative host language calls)","title":"Traps with declarative mapping"},{"location":"overview/#yarrrml","text":"https://rml.io/yarrrml/","title":"YARRRML"},{"location":"overview/#yarrrml-notes","text":"Has a playground\\, which is great Mixes two concerns: 1. Isomorphic structural mapping between JSON/TSVs and RDF (already covered by JSON-LD) 2. Mapping This isn\u2019t necessarily bad - it\u2019s quite practical\\, but a little unsatisfying IMO","title":"YARRRML notes"},{"location":"overview/#jsonpath-lifter","text":"Was proposed for CCDH CRDC-node mappings Doesn\u2019t seem widely used Is there a big advantage over simply writing javascript functions?","title":"jsonpath-lifter"},{"location":"overview/#koza-previously-bioweave","text":"","title":"Koza (previously: bioweave)"},{"location":"overview/#etl-frameworks","text":"There are many many ETL frameworks E.g. WebKarma Inherently mixing of concerns Here we are concerned with the \u201cT\u201d part Do existing frameworks separate out the T as a modular composable component? I\u2019m not sure","title":"ETL frameworks"},{"location":"overview/#do-we-need-yet-another-mapping-framework","text":"LinkML philosophy: Embrace\\, extend\\, parasitize Develop lightweight ways to map Map mappings to existing mapping frameworks This actually makes sense even if it sounds kind of meta\u2026","title":"Do we need Yet Another Mapping Framework?"},{"location":"overview/#level-0-mapping-isomorphic-same-uris","text":"classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address classes: Agent: class_uri: sdo:Person attributes: surname: slot_uri: sdo:familyName home_address: slot_uri: sdo:address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville","title":"Level 0 Mapping: Isomorphic, same URIs"},{"location":"overview/#level-0-handled-by-standard-linkml-convert-tofrom-rdf","text":"classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address classes: Agent: class_uri: sdo:Person attributes: surname: slot_uri: sdo:familyName home_address: slot_uri: sdo:address data2 (yaml/json) d ata1 (yaml/json) family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville d ata1.ttl == data2.ttl [sdo:familyName \u201cWu\u201d ; sdo:address \u201c1 my street\\, Oakville\u201d ]","title":"Level 0: handled by standard linkml convert to/from RDF"},{"location":"overview/#level-0-enums-todo-add-example-here-basically-this-works-the-same-way","text":"","title":"Level 0: Enums TODO: add example here. Basically this works the same way"},{"location":"overview/#level-0-howto","text":"Compose two commands: linkml-convert -s schema1.yaml data1.yaml -o data1.ttl linkml-convert -s schema2.yaml data1.ttl -o data2.yaml That\u2019s it! TODO: Write a wrapper (linkml-map-data?) that does this in one command","title":"Level 0: HOWTO"},{"location":"overview/#level-0-other-considerations","text":"Going via RDF in theory eliminates inlining differences E.g. s1 inlines address objects\\, s2 uses references (inlined: false) and includes a separate index slot for addresses Current status: Currently when going from s1 to s2\\, no index slots are generated This could be done as part of the general rdflib framework","title":"Level 0: other considerations"},{"location":"overview/#lessons-learned-so-far-annotate-your-schema-with-uris","text":"Annotating schemas with URIs is optional with LinkML But your future self and data users will thank you for careful schema annotation! Hints: Schema-automator can provide suggestions for your element and enum URIs Sometimes plain semweb URIs (e.g. schema.org) can be easier for interoperation than overly granular OBO ones E.g modeling Personhood as a role vs straightforward schema:Person","title":"Lessons learned so far: annotate your schema with URIs!"},{"location":"overview/#level-1-mapping-isomorphic-different-uris","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville","title":"Level 1 Mapping: Isomorphic, different URIs"},{"location":"overview/#level-1-mapping-mediated-by-uri-mapping","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address subject_id object_id sdo:Person NCBITaxon:9606 sdo:familyName IAO:nnnn sdo:address IAO:0000422 family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ] [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ]","title":"Level 1 Mapping: mediated by URI mapping"},{"location":"overview/#level-1-howto","text":"Compose three commands: linkml-convert -s schema1.yaml data1.yaml -o data1.ttl sssom-map-iris -i data1.ttl -m schema1-to-schema2.sssom.tsv -o data2.ttl linkml-convert -s schema2.yaml data2.ttl -o data2.yaml That\u2019s it! TODO: sssom-map-iris does not yet exist (?)\\, but should be trivial Fold into wrapper CLI tool Nuances: Schemas have nuanced differences: not everything with be skos:exact We can distinguish 3 flavors of level 1 mapping: Precise\\, bidirectional: follow exact only Valid\\, unidirectional: follow exact + broad Loose: any mapping","title":"Level 1: HOWTO"},{"location":"overview/#level-1-variant-mappings-in-schema","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person exact_mappings: [\u201cNCBITaxon:9606\u201d] attributes: family_name: slot_uri: sdo:familyName exact_mappings: [\u201cIAO:nnnn\u201d] address: slot_uri: sdo:address exact_mappings: [\u201cIAO:0000422\u201d] name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ] [sdo:familyName \u201cWu\u201d sdo:address \u201c1 my street\\, Oakville\u201d ]","title":"Level 1 variant: mappings in schema"},{"location":"overview/#advantages-of-rdf-as-an-intermediate","text":"Use of IRIs Separation of concerns Structural differences (e.g. inlining) are already handled by linkml convert Allows us to focus on semantic mappings","title":"Advantages of RDF as an intermediate"},{"location":"overview/#lessons-learned-so-far-think-about-mappings","text":"https://linkml.io/linkml/faq/modeling.html#when-is-it-important-to-have-mappings https://github.com/alliance-genome/agr_curation_schema/blob/main/model/schema/agent.yaml","title":"Lessons learned so far: think about mappings"},{"location":"overview/#more-complex-mappings-level-2-and-above","text":"TODO: define levels 2 and above Examples of kinds of features: merging/splitting fields; e.g. full_name = first + \u201c \u201c + last Unit conversion or baked-in units to explicit units Normalization/denormalization (aka flattening) Complex logic If conditions A\\, B\\, C and not D are met then copy field F from X to Y","title":"More complex mappings: level 2 and above"},{"location":"overview/#linkml-rule-and-inference-framework","text":"Current use case is intra-schema inference Easy to invoke on command line Needs more docs! Could form basis of inter-schema DSL Examples Schemas differ in units Schemas differ in categorical vs quantitative Current use case is intra-schema inference Could form basis of inter-schema DSL","title":"LinkML Rule and Inference Framework"},{"location":"overview/#datalog","text":"Datalog could serve as the powerful basis of an expressive declarative transformation language https://linkml.io/linkml-datalog","title":"Datalog"},{"location":"overview/#approach-for-level-2","text":"Do we even want a generic mapping framework in LinkML here? This is a good \u201c parasitization hook\u201d Do complex stuff using an existing framework TBD: derive or semi-derive mapping specification? This is also a code bespoke procedural code hook Do the generic stuff with linkml-convert and isomorphic IRI mapping Do more complex stuff in code","title":"Approach for level 2+"},{"location":"overview/#general-approach-for-level-2-same-to-same","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville JSON OR XML OR YAML OR RDF OR SQL JSON OR XML OR YAML OR RDF OR SQL (matches the one on the left) Existing mapping framework (X to X)","title":"General approach for level 2+; same to same"},{"location":"overview/#example-of-same-to-same-jsonpath-lifter","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville Jsonpath-lifter (JSON to JSON)","title":"Example of same-to-same: jsonpath-lifter"},{"location":"overview/#example-of-same-to-same-awk","text":"","title":"Example of same-to-same: awk"},{"location":"overview/#example-of-same-to-same-sql","text":"INSERT INTO Agent AS SELECT Person.last_name AS Agent.surname\\, CONCAT(Person.full_name\\, \u201c \u201c\\, Person.first) AS Agent.full_name\\, \u2026 CONSTRUCT { [ a schema:Person ; my:fullName STRCAT(...) ] } WHERE { ?person a schema:Person ; schema:firstName ; schema:lastName ; \u2026 } SPARQL CONSTRUCT RDF Engine or Triplestore","title":"Example of same-to-same: SQL"},{"location":"overview/#example-of-same-to-same-python-linkml-objects","text":"def convert(p: Person) -> Agent: return Agent(p.id\\, full_name=f\u201d{..} {..}\u201d\\, \u2026 Conversion script","title":"Example of same-to-same: Python (LinkML objects)"},{"location":"overview/#general-approach-for-level-2-heteromorphic","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville L inkml-convert OPTIONAL L inkml-convert OPTIONAL JSON OR XML OR YAML OR RDF OR SQL JSON OR XML OR YAML OR RDF OR SQL ( different from the one on the left) Existing mapping framework (X to Y)","title":"General approach for level 2+; heteromorphic"},{"location":"overview/#example-yarrrml","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville YARRRML (JSON/YAML to RDF)","title":"Example: YARRRML"},{"location":"overview/#example-yarrrml-native-mappings","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville mapping.yarrrml.yml","title":"Example: YARRRML, native mappings"},{"location":"overview/#example-yarrrml-compiled-mappings","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address Mappings : \u2026 \\< TO BE DEFINED LINKML MAPPING SPEC > name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville mapping.yarrrml.yml","title":"Example: YARRRML, compiled mappings"},{"location":"overview/#hyperparasitism-is-good","text":"name: example-semweb-schema classes: Person: class_uri: sdo:Person attributes: family_name: slot_uri: sdo:familyName address: slot_uri: sdo:address Mappings : \u2026 \\< TO BE DEFINED LINKML MAPPING SPEC > name: example-OBO-schema classes: Person: class_uri: NCBITaxon:9606 ## Homo sapiens attributes: surname: slot_uri: IAO:0000590 ## written name home_address: slot_uri: IAO:0000422 ## postal address mapping.yarrrml.yml family_name: Wu address: 1 my street\\, Oakville surname: Wu home_address: 1 my street\\, Oakville","title":"Hyperparasitism is good"},{"location":"overview/#alternative-direct-translation-language","text":"Desiderata Ability to compile to scalable frameworks E.g. compile to SQL Simple for simple tasks Layer on existing expression language Provides path to safe subset of host language (Python) Can be easily implemented in other languages","title":"Alternative: Direct translation language"},{"location":"overview/#normalized-to-denormalized-modeling-sssom","text":"SQL INSERT (or CREATE VIEW) SQL FROM Clause (implicit INNER JOIN/WHERE) SQL SELECT \u2026 AS clause","title":"Normalized to Denormalized (modeling SSSOM)"},{"location":"overview/#relationship-to-profiles-todo","text":"Profiles/IGs can be seen as a sub-case of schema mapping","title":"Relationship to profiles TODO"},{"location":"overview/#current-progress","text":"https://github.com/linkml/linkml/issues/533 map to YARRRML Vincent Vemonet has started on linkml->rml https://github.com/vemonet/linkml/blob/add-gen-rml/linkml/generators/rmlgen.py","title":"Current progress"},{"location":"overview/#relationship-to-koza","text":"","title":"Relationship to Koza"},{"location":"overview/#koza-ingests-often-require-multiple-files","text":"","title":"Koza ingests often require multiple files"},{"location":"overview/#see-also","text":"Revisiting BioWeave (Kent Shefchek\\, 2020?) https://docs.google.com/presentation/d/1DYiWXoz3iHM2PvMFD0hRpJ544tnHawg00PBwNuESo44/edit#slide=id.gb33d7ddd1b_0_93","title":"See Also"},{"location":"overview/#automating-mapping","text":"Should we pursue approaches to automate mapping? Some of the functionality is already in schema-automator. E.g. auto-annotating schema elements using ontologies Isomorphic schema mapping discovery analogous to ontology mapping Can a boomer type approach help? E.g. given multiple loose mappings with alternative interpretations\\, which ones give coherent results Other approaches Inductive Logic Programming: transformations as logic programs Genetic programming: transformations as lambda functions Deep Learning: e.g. Language Models for translation There is already a rich literature spanning decades here to be parasitized\u2026","title":"Automating mapping"},{"location":"overview/#summary-just-tell-me-what-to-do-today","text":"For isomorphic mappings: Stay within LinkML/SSSOM No need for custom code\\, it all works For complex mappings: It depends! Do the structural mapping with linkml-convert Implement the complex logic as you see fit\\, depending on multiple factors. Any of the following may be valid Koza Awk SPARQL CONSTRUCTS or SELECTS Custom python YARRRML SQL INSERTs XSLT Jsonpath-lifter \u2026.","title":"Summary: just tell me what to do today"},{"location":"overview/#roadmap","text":"2022: Continue to gather use cases\\, experiment 2023: If funding permits Extend metamodel to include complex mapping Implement EITHER Parasitizing converters Direct mapping framework TBD: Is this Koza2?","title":"Roadmap"},{"location":"permissible_value_derivations/","text":"Slot: permissible_value_derivations Instructions on how to derive a set of PVs in the target schema URI: linkmltr:permissible_value_derivations Applicable Classes Name Description EnumDerivation A specification of how to derive the value of a target enum from a source enu... Properties Range: PermissibleValueDerivation Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: permissible_value_derivations description: Instructions on how to derive a set of PVs in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: permissible_value_derivations owner: EnumDerivation domain_of: - EnumDerivation range: PermissibleValueDerivation inlined: true","title":"Slot: permissible_value_derivations"},{"location":"permissible_value_derivations/#slot-permissible_value_derivations","text":"Instructions on how to derive a set of PVs in the target schema URI: linkmltr:permissible_value_derivations","title":"Slot: permissible_value_derivations"},{"location":"permissible_value_derivations/#applicable-classes","text":"Name Description EnumDerivation A specification of how to derive the value of a target enum from a source enu...","title":"Applicable Classes"},{"location":"permissible_value_derivations/#properties","text":"Range: PermissibleValueDerivation Multivalued: True","title":"Properties"},{"location":"permissible_value_derivations/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"permissible_value_derivations/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"permissible_value_derivations/#linkml-source","text":"name: permissible_value_derivations description: Instructions on how to derive a set of PVs in the target schema from_schema: https://w3id.org/linkml/transformer rank: 1000 multivalued: true alias: permissible_value_derivations owner: EnumDerivation domain_of: - EnumDerivation range: PermissibleValueDerivation inlined: true","title":"LinkML Source"},{"location":"populated_from/","text":"Slot: populated_from URI: linkmltr:populated_from Applicable Classes Name Description ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu... Properties Range: xsd:string Identifier and Mapping Information LinkML Source name: populated_from alias: populated_from domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string","title":"Slot: populated_from"},{"location":"populated_from/#slot-populated_from","text":"URI: linkmltr:populated_from","title":"Slot: populated_from"},{"location":"populated_from/#applicable-classes","text":"Name Description ClassDerivation A specification of how to derive a target class from a source class SlotDerivation A specification of how to derive the value of a target slot from a source slo... EnumDerivation A specification of how to derive the value of a target enum from a source enu...","title":"Applicable Classes"},{"location":"populated_from/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"populated_from/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"populated_from/#linkml-source","text":"name: populated_from alias: populated_from domain_of: - ClassDerivation - SlotDerivation - EnumDerivation range: string","title":"LinkML Source"},{"location":"prefixes/","text":"Slot: prefixes prefix map URI: linkmltr:prefixes Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: prefixes description: prefix map from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: prefixes owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"Slot: prefixes"},{"location":"prefixes/#slot-prefixes","text":"prefix map URI: linkmltr:prefixes","title":"Slot: prefixes"},{"location":"prefixes/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes","title":"Applicable Classes"},{"location":"prefixes/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"prefixes/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"prefixes/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"prefixes/#linkml-source","text":"name: prefixes description: prefix map from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: prefixes owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"LinkML Source"},{"location":"same_as/","text":"Slot: same_as Name of the class in the source schema URI: https://w3id.org/linkml/transformer/same_as Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer","title":"Slot: same_as"},{"location":"same_as/#slot-same_as","text":"Name of the class in the source schema URI: https://w3id.org/linkml/transformer/same_as","title":"Slot: same_as"},{"location":"same_as/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"same_as/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"same_as/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"slot_derivations/","text":"Slot: slot_derivations URI: linkmltr:slot_derivations Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes ClassDerivation A specification of how to derive a target class from a source class Properties Range: xsd:string Identifier and Mapping Information LinkML Source name: slot_derivations alias: slot_derivations domain_of: - TransformationSpecification - ClassDerivation range: string","title":"Slot: slot_derivations"},{"location":"slot_derivations/#slot-slot_derivations","text":"URI: linkmltr:slot_derivations","title":"Slot: slot_derivations"},{"location":"slot_derivations/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes ClassDerivation A specification of how to derive a target class from a source class","title":"Applicable Classes"},{"location":"slot_derivations/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"slot_derivations/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"slot_derivations/#linkml-source","text":"name: slot_derivations alias: slot_derivations domain_of: - TransformationSpecification - ClassDerivation range: string","title":"LinkML Source"},{"location":"slot_name/","text":"Slot: slot_name URI: linkmltr:slot_name Applicable Classes Name Description Inverse Used for back references Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: slot_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: slot_name owner: Inverse domain_of: - Inverse range: string","title":"Slot: slot_name"},{"location":"slot_name/#slot-slot_name","text":"URI: linkmltr:slot_name","title":"Slot: slot_name"},{"location":"slot_name/#applicable-classes","text":"Name Description Inverse Used for back references","title":"Applicable Classes"},{"location":"slot_name/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"slot_name/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"slot_name/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"slot_name/#linkml-source","text":"name: slot_name from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: slot_name owner: Inverse domain_of: - Inverse range: string","title":"LinkML Source"},{"location":"source_schema/","text":"Slot: source_schema name of the schema that describes the source (input) objects URI: linkmltr:source_schema Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: source_schema description: name of the schema that describes the source (input) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: source_schema owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"Slot: source_schema"},{"location":"source_schema/#slot-source_schema","text":"name of the schema that describes the source (input) objects URI: linkmltr:source_schema","title":"Slot: source_schema"},{"location":"source_schema/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes","title":"Applicable Classes"},{"location":"source_schema/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"source_schema/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"source_schema/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"source_schema/#linkml-source","text":"name: source_schema description: name of the schema that describes the source (input) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: source_schema owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"LinkML Source"},{"location":"target_schema/","text":"Slot: target_schema name of the schema that describes the target (output) objects URI: linkmltr:target_schema Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: target_schema description: name of the schema that describes the target (output) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: target_schema owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"Slot: target_schema"},{"location":"target_schema/#slot-target_schema","text":"name of the schema that describes the target (output) objects URI: linkmltr:target_schema","title":"Slot: target_schema"},{"location":"target_schema/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes","title":"Applicable Classes"},{"location":"target_schema/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"target_schema/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"target_schema/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"target_schema/#linkml-source","text":"name: target_schema description: name of the schema that describes the target (output) objects from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: target_schema owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"LinkML Source"},{"location":"title/","text":"Slot: title human readable title for this transformation specification URI: linkmltr:title Applicable Classes Name Description TransformationSpecification A collection of mappings between source and target classes Properties Range: xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: title description: human readable title for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: title owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"Slot: title"},{"location":"title/#slot-title","text":"human readable title for this transformation specification URI: linkmltr:title","title":"Slot: title"},{"location":"title/#applicable-classes","text":"Name Description TransformationSpecification A collection of mappings between source and target classes","title":"Applicable Classes"},{"location":"title/#properties","text":"Range: xsd:string","title":"Properties"},{"location":"title/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"title/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"title/#linkml-source","text":"name: title description: human readable title for this transformation specification from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: title owner: TransformationSpecification domain_of: - TransformationSpecification range: string","title":"LinkML Source"},{"location":"transformer/","text":"transformer Datamodel for LinkML schema transformations. A transformer generates instances of a target data model from instances of a source data model. This transformation process is guided by a TransformationSpecification . The specification is independent of any one method for transforming data. It allows different approaches, including: direct implementation, transforming python or json objects translation of the specification into SQL commands, to operate on relations translation of the specification into SPARQL CONSTRUCTs, to operate on triples translation into another specification language, such as R2RML URI: https://w3id.org/linkml/transformer","title":"transformer"},{"location":"transformer/#transformer","text":"Datamodel for LinkML schema transformations. A transformer generates instances of a target data model from instances of a source data model. This transformation process is guided by a TransformationSpecification . The specification is independent of any one method for transforming data. It allows different approaches, including: direct implementation, transforming python or json objects translation of the specification into SQL commands, to operate on relations translation of the specification into SPARQL CONSTRUCTs, to operate on triples translation into another specification language, such as R2RML URI: https://w3id.org/linkml/transformer","title":"transformer"},{"location":"type_designator/","text":"Slot: type_designator URI: linkmltr:type_designator Applicable Classes Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo... Properties Range: xsd:boolean Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: type_designator from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: type_designator owner: SlotDerivation domain_of: - SlotDerivation range: boolean","title":"Slot: type_designator"},{"location":"type_designator/#slot-type_designator","text":"URI: linkmltr:type_designator","title":"Slot: type_designator"},{"location":"type_designator/#applicable-classes","text":"Name Description SlotDerivation A specification of how to derive the value of a target slot from a source slo...","title":"Applicable Classes"},{"location":"type_designator/#properties","text":"Range: xsd:boolean","title":"Properties"},{"location":"type_designator/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"type_designator/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"type_designator/#linkml-source","text":"name: type_designator from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: type_designator owner: SlotDerivation domain_of: - SlotDerivation range: boolean","title":"LinkML Source"},{"location":"types/","text":"types Shared type definitions for the core LinkML mode and metamodel URI: https://w3id.org/linkml/types","title":"types"},{"location":"types/#types","text":"Shared type definitions for the core LinkML mode and metamodel URI: https://w3id.org/linkml/types","title":"types"},{"location":"value/","text":"Slot: value URI: linkmltr:value Applicable Classes Name Description KeyVal Properties Range: Any Identifier and Mapping Information Schema Source from schema: https://w3id.org/linkml/transformer LinkML Source name: value from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: value owner: KeyVal domain_of: - KeyVal range: Any","title":"Slot: value"},{"location":"value/#slot-value","text":"URI: linkmltr:value","title":"Slot: value"},{"location":"value/#applicable-classes","text":"Name Description KeyVal","title":"Applicable Classes"},{"location":"value/#properties","text":"Range: Any","title":"Properties"},{"location":"value/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"value/#schema-source","text":"from schema: https://w3id.org/linkml/transformer","title":"Schema Source"},{"location":"value/#linkml-source","text":"name: value from_schema: https://w3id.org/linkml/transformer rank: 1000 alias: value owner: KeyVal domain_of: - KeyVal range: Any","title":"LinkML Source"}]}